openapi: 3.0.1
info:
  description: |-
    This document describes Uptrends API version 4. This Swagger environment also lets you execute API methods directly.

    Please note that this is not a sandbox environment: these API methods operate directly on your actual Uptrends account.

    For more information, please visit https://www.uptrends.com/api.
  title: Uptrends API v4
  version: 1.0.0
servers:
- url: https://api.uptrends.com/v4
tags:
- description: Getting account data
  name: Account
- description: Retrieving checkpoints and checkpoint servers
  name: Checkpoint
- description: Modifying dashboards
  name: Dashboard
- description: Modifying public status pages
  name: PublicStatusPage
- description: Modifying scheduled reports
  name: ScheduledReport
- description: Getting SLA data
  name: SLA
- description: Retrieving statistics data
  name: Statistics
- description: Getting alert data
  name: Alert
- description: Retrieving integrations
  name: Integration
- description: Retrieving status
  name: Status
- description: Modifying alert definitions
  name: AlertDefinition
- description: Working with monitor groups
  name: MonitorGroup
- description: Working with operators
  name: Operator
- description: Miscellaneous operations
  name: Miscellaneous
- description: Working with operator groups
  name: OperatorGroup
- description: Getting monitor check data
  name: MonitorCheck
- description: Modifying monitors
  name: Monitor
- description: Creating a new API account
  name: Register
- description: Vault operations
  name: Vault
paths:
  /Account:
    get:
      operationId: Account_GetAccountStatistics
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountStatistics'
            application/xml:
              schema:
                $ref: '#/components/schemas/AccountStatistics'
          description: Request completed successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
      security:
      - basicauth:
        - ""
      summary: Returns the account statistics.
      tags:
      - Account
  /CheckpointRegion:
    get:
      operationId: CheckpointRegion_GetAllCheckpointRegions
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CheckpointRegion'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/CheckpointRegion'
                type: array
          description: The request completed successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
      security:
      - basicauth:
        - ""
      summary: 'Returns all the checkpoint regions. '
      tags:
      - Checkpoint
  /CheckpointRegion/{checkpointRegionId}:
    get:
      operationId: CheckpointRegion_GetSpecifiedCheckpointRegion
      parameters:
      - description: The id for the specified checkpoint region.
        in: path
        name: checkpointRegionId
        required: true
        schema:
          nullable: false
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckpointRegion'
            application/xml:
              schema:
                $ref: '#/components/schemas/CheckpointRegion'
          description: The request completed successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The checkpoint region could not be found.
      security:
      - basicauth:
        - ""
      summary: 'Returns the specified checkpoint region. '
      tags:
      - Checkpoint
  /CheckpointRegion/{checkpointRegionId}/Checkpoint:
    get:
      operationId: CheckpointRegion_GetCheckpointRegionCheckpoints
      parameters:
      - description: The id for the specified checkpoint region.
        in: path
        name: checkpointRegionId
        required: true
        schema:
          nullable: false
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Checkpoint'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Checkpoint'
                type: array
          description: The request completed successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The checkpoint region could not be found.
      security:
      - basicauth:
        - ""
      summary: 'Returns the checkpoints for the specified checkpoint region. '
      tags:
      - Checkpoint
  /Dashboard:
    get:
      operationId: Dashboard_GetAllDashboards
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Dashboard'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Dashboard'
                type: array
          description: The request completed successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
      security:
      - basicauth:
        - ""
      summary: Returns data for all dashboards.
      tags:
      - Dashboard
  /Dashboard/{dashboardGuid}:
    delete:
      operationId: Dashboard_DeleteDashboard
      parameters:
      - description: The guid of the specified dashboard.
        in: path
        name: dashboardGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      responses:
        "204":
          content: {}
          description: The request completed successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The specified dashboard could not be found.
      security:
      - basicauth:
        - ""
      summary: Delete the specified dashboard.
      tags:
      - Dashboard
    get:
      operationId: Dashboard_GetOneDashboard
      parameters:
      - description: The guid of the specified dashboard.
        in: path
        name: dashboardGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dashboard'
            application/xml:
              schema:
                $ref: '#/components/schemas/Dashboard'
          description: The request completed successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The specified dashboard could not be found.
      security:
      - basicauth:
        - ""
      summary: Returns data for the specified dashboard.
      tags:
      - Dashboard
    patch:
      operationId: Dashboard_PartiallyUpdateDashboard
      parameters:
      - description: The guid of the specified dashboard.
        in: path
        name: dashboardGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Dashboard'
          application/xml:
            schema:
              $ref: '#/components/schemas/Dashboard'
        description: The details for the dashboard.
        required: true
      responses:
        "204":
          content: {}
          description: The request completed successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: One or more of the specified entities could not be found.
      security:
      - basicauth:
        - ""
      summary: Partially update the specified dashboard.
      tags:
      - Dashboard
      x-codegen-request-body-name: dashboard
    put:
      operationId: Dashboard_UpdateDashboard
      parameters:
      - description: The guid of the specified dashboard.
        in: path
        name: dashboardGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Dashboard'
          application/xml:
            schema:
              $ref: '#/components/schemas/Dashboard'
        description: The details for the dashboard.
        required: true
      responses:
        "204":
          content: {}
          description: The request completed successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: One or more of the specified entities could not be found.
      security:
      - basicauth:
        - ""
      summary: Update the specified dashboard.
      tags:
      - Dashboard
      x-codegen-request-body-name: dashboard
  /Dashboard/{dashboardGuid}/Clone:
    post:
      operationId: Dashboard_CloneDashboard
      parameters:
      - description: The guid of the specified dashboard.
        in: path
        name: dashboardGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dashboard'
            application/xml:
              schema:
                $ref: '#/components/schemas/Dashboard'
          description: The request completed successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The specified dashboard could not be found.
      security:
      - basicauth:
        - ""
      summary: Clone the specified dashboard.
      tags:
      - Dashboard
  /PublicStatusPage:
    get:
      operationId: PublicStatusPage_GetPublicStatusPages
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PublicStatusPage'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/PublicStatusPage'
                type: array
          description: The request completed successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
      security:
      - basicauth:
        - ""
      summary: Returns the definition of all public status pages available in the
        account.
      tags:
      - PublicStatusPage
    post:
      operationId: PublicStatusPage_PostPublicStatusPage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PublicStatusPage'
          application/xml:
            schema:
              $ref: '#/components/schemas/PublicStatusPage'
        description: The complete definition for the public status page that should
          be updated.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicStatusPage'
            application/xml:
              schema:
                $ref: '#/components/schemas/PublicStatusPage'
          description: The request completed successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The specified public status page does not exist.
      security:
      - basicauth:
        - ""
      summary: Creates a new public status page.
      tags:
      - PublicStatusPage
      x-codegen-request-body-name: publicStatusPage
  /PublicStatusPage/{publicStatusPageGuid}:
    delete:
      operationId: PublicStatusPage_DeletePublicStatusPage
      parameters:
      - description: The Guid of the public status page that should be updated.
        in: path
        name: publicStatusPageGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      responses:
        "204":
          content: {}
          description: The request was successful. No content is returned.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The specified public status page does not exist.
      security:
      - basicauth:
        - ""
      summary: Deletes the definition of the specified public status page.
      tags:
      - PublicStatusPage
    get:
      operationId: PublicStatusPage_GetPublicStatusPage
      parameters:
      - description: The Guid of the requested public status page.
        in: path
        name: publicStatusPageGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicStatusPage'
            application/xml:
              schema:
                $ref: '#/components/schemas/PublicStatusPage'
          description: The request completed successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The specified public status page does not exist.
      security:
      - basicauth:
        - ""
      summary: Returns the definition of the specified public status page.
      tags:
      - PublicStatusPage
    patch:
      description: This methods accepts parts of a public status page definition.
        We recommend retrieving the existing definition first (using the GET method).
        You can then process the changes you want to make and send back these changes
        only using this PATCH method.
      operationId: PublicStatusPage_PatchPublicStatusPage
      parameters:
      - description: The Guid of the public status page that should be updated.
        in: path
        name: publicStatusPageGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PublicStatusPage'
          application/xml:
            schema:
              $ref: '#/components/schemas/PublicStatusPage'
        description: The partial definition for the public status page that should
          be updated.
        required: true
      responses:
        "204":
          content: {}
          description: The request was successful. No content is returned.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The specified public status page does not exist.
      security:
      - basicauth:
        - ""
      summary: Partially updates the definition of the specified public status page.
      tags:
      - PublicStatusPage
      x-codegen-request-body-name: publicStatusPage
    put:
      description: This methods only accepts a complete public status page definition.
        We recommend retrieving the existing definition first (using the GET method).
        You can then process the changes you want to make and send back the updated
        definition using this PUT method.
      operationId: PublicStatusPage_PutPublicStatusPage
      parameters:
      - description: The Guid of the public status page that should be updated.
        in: path
        name: publicStatusPageGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PublicStatusPage'
          application/xml:
            schema:
              $ref: '#/components/schemas/PublicStatusPage'
        description: The complete definition for the public status page that should
          be updated.
        required: true
      responses:
        "204":
          content: {}
          description: The request was successful. No content is returned.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The specified public status page does not exist.
      security:
      - basicauth:
        - ""
      summary: Updates the definition of the specified public status page.
      tags:
      - PublicStatusPage
      x-codegen-request-body-name: publicStatusPage
  /PublicStatusPage/{publicStatusPageGuid}/Authorization:
    get:
      operationId: PublicStatusPage_GetAuthorizationsForPublicStatusPage
      parameters:
      - description: The Guid of the public status page.
        in: path
        name: publicStatusPageGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PSPAuthorization'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/PSPAuthorization'
                type: array
          description: The request was successful. No content is returned.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The specified public status page does not exist.
      security:
      - basicauth:
        - ""
      summary: Returns all authorizations for the specified public status page.
      tags:
      - PublicStatusPage
    post:
      description: The AuthorizationId attribute should be omitted in the request
        body. The newly created authorization will be returned in the response. An
        authorization should be granted to either an individual operator, or an operator
        group. Therefore, either specify the OperatorGuid attribute or the OperatorGroupGuid
        attribute.
      operationId: PublicStatusPage_AddAuthorizationToPublicStatusPage
      parameters:
      - description: The Guid of the public status page.
        in: path
        name: publicStatusPageGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PSPAuthorization'
          application/xml:
            schema:
              $ref: '#/components/schemas/PSPAuthorization'
        description: The complete definition of the authorization that should be created.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PSPAuthorization'
            application/xml:
              schema:
                $ref: '#/components/schemas/PSPAuthorization'
          description: The request was successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: |-
            The specified public status page does not exist.
            or
            The specified operator does not exist.
            or
            The specified operator group does not exist.
          x-expectedSchemas:
          - description: The specified public status page does not exist.
            schema:
              $ref: '#/definitions/MessageList'
          - description: The specified operator does not exist.
            schema:
              $ref: '#/definitions/MessageList'
          - description: The specified operator group does not exist.
            schema:
              $ref: '#/definitions/MessageList'
      security:
      - basicauth:
        - ""
      summary: Creates a new authorization for the specified public status page.
      tags:
      - PublicStatusPage
      x-codegen-request-body-name: authorization
  /PublicStatusPage/{publicStatusPageGuid}/Authorization/{authorizationGuid}:
    delete:
      operationId: PublicStatusPage_RemoveAuthorizationFromPublicStatusPage
      parameters:
      - description: The Guid of the public status page.
        in: path
        name: publicStatusPageGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      - description: The Guid of the authorization.
        in: path
        name: authorizationGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      responses:
        "204":
          content: {}
          description: The request was successful. No content is returned.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: |-
            The specified public status page does not exist.
            or
            The specified authorization does not exist.
          x-expectedSchemas:
          - description: The specified public status page does not exist.
            schema:
              $ref: '#/definitions/MessageList'
          - description: The specified authorization does not exist.
            schema:
              $ref: '#/definitions/MessageList'
      security:
      - basicauth:
        - ""
      summary: Removes an authorization from a public status page.
      tags:
      - PublicStatusPage
  /ScheduledReport:
    get:
      operationId: ScheduledReport_GetAllScheduledReports
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ScheduledReport'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ScheduledReport'
                type: array
          description: The request completed successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
      security:
      - basicauth:
        - ""
      summary: Returns data for all scheduled reports.
      tags:
      - ScheduledReport
    post:
      operationId: ScheduledReport_CreateScheduledReport
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScheduledReport'
          application/xml:
            schema:
              $ref: '#/components/schemas/ScheduledReport'
        description: The details for the scheduled report.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduledReport'
            application/xml:
              schema:
                $ref: '#/components/schemas/ScheduledReport'
          description: The request completed successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
      security:
      - basicauth:
        - ""
      summary: Creates a new scheduled report.
      tags:
      - ScheduledReport
      x-codegen-request-body-name: scheduledReport
  /ScheduledReport/{scheduledReportGuid}:
    delete:
      operationId: ScheduledReport_DeleteSpecifiedScheduledReport
      parameters:
      - description: The guid of the specified scheduled report.
        in: path
        name: scheduledReportGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      responses:
        "204":
          content: {}
          description: The request completed successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: One or more of the specified entities could not be found.
      security:
      - basicauth:
        - ""
      summary: Delete the specified scheduled report.
      tags:
      - ScheduledReport
    get:
      operationId: ScheduledReport_GetSpecifiedScheduledReport
      parameters:
      - description: The guid of the specified scheduled report.
        in: path
        name: scheduledReportGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduledReport'
            application/xml:
              schema:
                $ref: '#/components/schemas/ScheduledReport'
          description: The request completed successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: One or more of the specified entities could not be found.
      security:
      - basicauth:
        - ""
      summary: Returns data for the specified scheduled report.
      tags:
      - ScheduledReport
    patch:
      operationId: ScheduledReport_PartiallyUpdateScheduledReport
      parameters:
      - description: The guid of the specified scheduled report.
        in: path
        name: scheduledReportGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScheduledReport'
          application/xml:
            schema:
              $ref: '#/components/schemas/ScheduledReport'
        description: The details for the scheduled report.
        required: true
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduledReport'
            application/xml:
              schema:
                $ref: '#/components/schemas/ScheduledReport'
          description: The request completed successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: One or more of the specified entities could not be found.
      security:
      - basicauth:
        - ""
      summary: Partially update the specified scheduled report.
      tags:
      - ScheduledReport
      x-codegen-request-body-name: scheduledReport
    put:
      operationId: ScheduledReport_UpdateScheduledReport
      parameters:
      - description: The guid of the specified scheduled report.
        in: path
        name: scheduledReportGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScheduledReport'
          application/xml:
            schema:
              $ref: '#/components/schemas/ScheduledReport'
        description: The details for the scheduled report.
        required: true
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduledReport'
            application/xml:
              schema:
                $ref: '#/components/schemas/ScheduledReport'
          description: The request completed successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: One or more of the specified entities could not be found.
      security:
      - basicauth:
        - ""
      summary: Update the specified scheduled report.
      tags:
      - ScheduledReport
      x-codegen-request-body-name: scheduledReport
  /Sla:
    get:
      operationId: Sla_GetSlas
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Sla'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Sla'
                type: array
          description: The request completed successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
      security:
      - basicauth:
        - ""
      summary: Gets a list of all SLA definitions.
      tags:
      - SLA
    post:
      operationId: Sla_CreateSla
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Sla'
          application/xml:
            schema:
              $ref: '#/components/schemas/Sla'
        description: The complete SLA definition that should be created.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sla'
            application/xml:
              schema:
                $ref: '#/components/schemas/Sla'
          description: The request completed successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: One or more validation errors occurred.
      security:
      - basicauth:
        - ""
      summary: Creates a new SLA.
      tags:
      - SLA
      x-codegen-request-body-name: sla
  /Sla/{slaGuid}:
    delete:
      operationId: Sla_DeleteSla
      parameters:
      - description: The Guid of the SLA definition that should be deleted.
        in: path
        name: slaGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      responses:
        "204":
          content: {}
          description: The request completed successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: One or more validation errors occurred.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The specified SLA does not exist.
      security:
      - basicauth:
        - ""
      summary: Deletes the specified SLA.
      tags:
      - SLA
    get:
      operationId: Sla_GetSla
      parameters:
      - description: The Guid of the SLA definition.
        in: path
        name: slaGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sla'
            application/xml:
              schema:
                $ref: '#/components/schemas/Sla'
          description: The request completed successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: One or more validation errors occurred.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The specified sla does not exist.
      security:
      - basicauth:
        - ""
      summary: Gets the specified SLA definition.
      tags:
      - SLA
    patch:
      description: This methods accepts parts of a SLA definition. We recommend retrieving
        the existing definition first (using the GET method). You can then process
        the changes you want to make and send back these changes only using this PATCH
        method.
      operationId: Sla_PatchSla
      parameters:
      - description: The Guid of the SLA that should be updated.
        in: path
        name: slaGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Sla'
          application/xml:
            schema:
              $ref: '#/components/schemas/Sla'
        description: The partial definition for the SLA that should be updated.
        required: true
      responses:
        "204":
          content: {}
          description: The request was successful. No content is returned.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The specified SLA does not exist.
      security:
      - basicauth:
        - ""
      summary: Partially updates the definition of the specified SLA.
      tags:
      - SLA
      x-codegen-request-body-name: sla
    put:
      description: This methods only accepts a complete SLA definition. We recommend
        retrieving the existing definition first (using the GET method). You can then
        process the changes you want to make and send back the updated definition
        using this PUT method.
      operationId: Sla_PutSla
      parameters:
      - description: The Guid of the SLA that should be updated.
        in: path
        name: slaGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Sla'
          application/xml:
            schema:
              $ref: '#/components/schemas/Sla'
        description: The complete definition for the SLA that should be updated.
        required: true
      responses:
        "204":
          content: {}
          description: The request was successful. No content is returned.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The specified SLA does not exist.
      security:
      - basicauth:
        - ""
      summary: Updates the definition of the specified SLA.
      tags:
      - SLA
      x-codegen-request-body-name: sla
  /Sla/{slaGuid}/ExclusionPeriod:
    get:
      operationId: Sla_GetExclusionPeriods
      parameters:
      - description: The Guid of the SLA definition.
        in: path
        name: slaGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ExclusionPeriod'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ExclusionPeriod'
                type: array
          description: The request completed successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The specified SLA does not exist.
      security:
      - basicauth:
        - ""
      summary: Gets a list of all exclusion periods for the specified SLA.
      tags:
      - SLA
    post:
      operationId: Sla_PostExclusionPeriod
      parameters:
      - description: The Guid of the SLA definition.
        in: path
        name: slaGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExclusionPeriod'
          application/xml:
            schema:
              $ref: '#/components/schemas/ExclusionPeriod'
        description: The complete definition of the exclusion period.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExclusionPeriod'
            application/xml:
              schema:
                $ref: '#/components/schemas/ExclusionPeriod'
          description: The request completed successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The specified SLA does not exist.
      security:
      - basicauth:
        - ""
      summary: Creates a new exclusion period for the specified SLA.
      tags:
      - SLA
      x-codegen-request-body-name: exclusionPeriod
  /Sla/{slaGuid}/ExclusionPeriod/{exclusionPeriodId}:
    delete:
      operationId: Sla_DeleteExclusionPeriod
      parameters:
      - description: The Guid of the sla definition.
        in: path
        name: slaGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      - description: The id of the exclusion period.
        in: path
        name: exclusionPeriodId
        required: true
        schema:
          format: int32
          nullable: false
          type: integer
      responses:
        "204":
          content: {}
          description: The request completed successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: |-
            The specified SLA does not exist.
            or
            The specified exclusion period does not exist.
          x-expectedSchemas:
          - description: The specified SLA does not exist.
            schema:
              $ref: '#/definitions/MessageList'
          - description: The specified exclusion period does not exist.
            schema:
              $ref: '#/definitions/MessageList'
      security:
      - basicauth:
        - ""
      summary: Deletes the specified exclusion period for the specified SLA.
      tags:
      - SLA
    get:
      operationId: Sla_GetExclusionPeriod
      parameters:
      - description: The Guid of the SLA definition.
        in: path
        name: slaGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      - description: The id of the exclusion period.
        in: path
        name: exclusionPeriodId
        required: true
        schema:
          format: int32
          nullable: false
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExclusionPeriod'
            application/xml:
              schema:
                $ref: '#/components/schemas/ExclusionPeriod'
          description: The request completed successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: |-
            The specified SLA does not exist.
            or
            The specified exclusion period does not exist.
          x-expectedSchemas:
          - description: The specified SLA does not exist.
            schema:
              $ref: '#/definitions/MessageList'
          - description: The specified exclusion period does not exist.
            schema:
              $ref: '#/definitions/MessageList'
      security:
      - basicauth:
        - ""
      summary: Gets the specified exclusion period for the specified SLA.
      tags:
      - SLA
    patch:
      operationId: Sla_PatchExclusionPeriod
      parameters:
      - description: The Guid of the SLA definition.
        in: path
        name: slaGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      - description: The id of the exclusion period.
        in: path
        name: exclusionPeriodId
        required: true
        schema:
          format: int32
          nullable: false
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExclusionPeriod'
          application/xml:
            schema:
              $ref: '#/components/schemas/ExclusionPeriod'
        description: The complete definition of the exclusion period.
        required: true
      responses:
        "204":
          content: {}
          description: The request completed successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: |-
            The specified SLA does not exist.
            or
            The specified exclusion period does not exist.
          x-expectedSchemas:
          - description: The specified SLA does not exist.
            schema:
              $ref: '#/definitions/MessageList'
          - description: The specified exclusion period does not exist.
            schema:
              $ref: '#/definitions/MessageList'
      security:
      - basicauth:
        - ""
      summary: Partially updates the specified exclusion period for the specified
        SLA.
      tags:
      - SLA
      x-codegen-request-body-name: exclusionPeriod
    put:
      operationId: Sla_PutExclusionPeriod
      parameters:
      - description: The Guid of the SLA definition.
        in: path
        name: slaGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      - description: The id of the exclusion period.
        in: path
        name: exclusionPeriodId
        required: true
        schema:
          format: int32
          nullable: false
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExclusionPeriod'
          application/xml:
            schema:
              $ref: '#/components/schemas/ExclusionPeriod'
        description: The complete definition of the exclusion period.
        required: true
      responses:
        "204":
          content: {}
          description: The request completed successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: |-
            The specified SLA does not exist.
            or
            The specified exclusion period does not exist.
          x-expectedSchemas:
          - description: The specified SLA does not exist.
            schema:
              $ref: '#/definitions/MessageList'
          - description: The specified exclusion period does not exist.
            schema:
              $ref: '#/definitions/MessageList'
      security:
      - basicauth:
        - ""
      summary: Updates the specified exclusion period for the specified SLA.
      tags:
      - SLA
      x-codegen-request-body-name: exclusionPeriod
  /Statistics/Monitor/{monitorGuid}:
    get:
      operationId: Statistics_GetMonitorStatistics
      parameters:
      - description: The Guid of the monitor.
        in: path
        name: monitorGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      - description: The filter for the requested response fields. E.g. "Alerts,SlaTarget".
        in: query
        name: Filter
        schema:
          nullable: true
          type: string
      - description: The start of a custom period (can't be used together with the
          PresetPeriod parameter)
        in: query
        name: Start
        schema:
          format: date-time
          nullable: true
          type: string
      - description: The end of a custom period
        in: query
        name: End
        schema:
          format: date-time
          nullable: true
          type: string
      - description: The requested time period.
        in: query
        name: PresetPeriod
        schema:
          default: Last24Hours
          enum:
          - CurrentDay
          - CurrentWeek
          - CurrentMonth
          - CurrentYear
          - PreviousDay
          - PreviousWeek
          - PreviousMonth
          - PreviousYear
          - Last24Hours
          - Last48Hours
          - Last7Days
          - Last30Days
          - Last60Days
          - Last90Days
          - Last365Days
          - Last3Months
          - Last6Months
          - Last12Months
          - Last24Months
          - All
          nullable: true
          type: string
          x-schema:
            $ref: '#/definitions/PresetPeriodType'
        x-schema:
          $ref: '#/definitions/PresetPeriodType'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatisticsResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/StatisticsResponse'
          description: The request completed successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageInfo'
          description: The request failed.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageInfo'
          description: The monitor could not be found.
      security:
      - basicauth:
        - ""
      summary: Gets the monitor statistics.
      tags:
      - Statistics
  /Statistics/MonitorGroup/{monitorGroupGuid}:
    get:
      operationId: Statistics_GetMonitorGroupStatistics
      parameters:
      - description: The Guid of the monitor group.
        in: path
        name: monitorGroupGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      - description: The filter for the requested response fields. E.g. "Alerts,SlaTarget".
        in: query
        name: Filter
        schema:
          nullable: true
          type: string
      - description: The start of a custom period (can't be used together with the
          PresetPeriod parameter)
        in: query
        name: Start
        schema:
          format: date-time
          nullable: true
          type: string
      - description: The end of a custom period
        in: query
        name: End
        schema:
          format: date-time
          nullable: true
          type: string
      - description: The requested time period.
        in: query
        name: PresetPeriod
        schema:
          default: Last24Hours
          enum:
          - CurrentDay
          - CurrentWeek
          - CurrentMonth
          - CurrentYear
          - PreviousDay
          - PreviousWeek
          - PreviousMonth
          - PreviousYear
          - Last24Hours
          - Last48Hours
          - Last7Days
          - Last30Days
          - Last60Days
          - Last90Days
          - Last365Days
          - Last3Months
          - Last6Months
          - Last12Months
          - Last24Months
          - All
          nullable: true
          type: string
          x-schema:
            $ref: '#/definitions/PresetPeriodType'
        x-schema:
          $ref: '#/definitions/PresetPeriodType'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatisticsResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/StatisticsResponse'
          description: The request completed successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageInfo'
          description: The request failed.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageInfo'
          description: The monitor group could not be found.
      security:
      - basicauth:
        - ""
      summary: Gets the monitor group statistics.
      tags:
      - Statistics
  /Alert/Monitor/{monitorGuid}:
    get:
      operationId: Alert_GetMonitorAlerts
      parameters:
      - description: The Guid of the monitor to get alerts for.
        in: path
        name: monitorGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      - description: When true reminder alerts will be included in the results
        in: query
        name: IncludeReminders
        schema:
          default: false
          nullable: false
          type: boolean
      - description: A cursor value that should be used for traversing the dataset.
        in: query
        name: Cursor
        schema:
          nullable: true
          type: string
      - description: Sorting direction based on timestamp.
        in: query
        name: Sorting
        schema:
          default: Descending
          enum:
          - Ascending
          - Descending
          nullable: false
          type: string
          x-schema:
            $ref: '#/definitions/SortDirection'
        x-schema:
          $ref: '#/definitions/SortDirection'
      - description: The number of records to return (Max value = 100)
        in: query
        name: Take
        schema:
          default: 100
          format: int32
          maximum: 100.0
          minimum: 0.0
          nullable: false
          type: integer
      - description: The start of a custom period (can't be used together with the
          PresetPeriod parameter)
        in: query
        name: Start
        schema:
          format: date-time
          nullable: true
          type: string
      - description: The end of a custom period
        in: query
        name: End
        schema:
          format: date-time
          nullable: true
          type: string
      - description: The requested time period.
        in: query
        name: PresetPeriod
        schema:
          default: Last24Hours
          enum:
          - CurrentDay
          - CurrentWeek
          - CurrentMonth
          - CurrentYear
          - PreviousDay
          - PreviousWeek
          - PreviousMonth
          - PreviousYear
          - Last24Hours
          - Last48Hours
          - Last7Days
          - Last30Days
          - Last60Days
          - Last90Days
          - Last365Days
          - Last3Months
          - Last6Months
          - Last12Months
          - Last24Months
          - All
          nullable: true
          type: string
          x-schema:
            $ref: '#/definitions/PresetPeriodType'
        x-schema:
          $ref: '#/definitions/PresetPeriodType'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/AlertResponse'
          description: The request completed successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The specified Monitor for monitorGuid does not exist.
      security:
      - basicauth:
        - ""
      summary: Returns alerts for a specific monitor.
      tags:
      - Alert
  /Alert/MonitorGroup/{monitorGroupGuid}:
    get:
      operationId: Alert_GetMonitorGroupAlerts
      parameters:
      - description: The Guid of the monitor group to get alerts for.
        in: path
        name: monitorGroupGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      - description: When true reminder alerts will be included in the results
        in: query
        name: IncludeReminders
        schema:
          default: false
          nullable: false
          type: boolean
      - description: A cursor value that should be used for traversing the dataset.
        in: query
        name: Cursor
        schema:
          nullable: true
          type: string
      - description: Sorting direction based on timestamp.
        in: query
        name: Sorting
        schema:
          default: Descending
          enum:
          - Ascending
          - Descending
          nullable: false
          type: string
          x-schema:
            $ref: '#/definitions/SortDirection'
        x-schema:
          $ref: '#/definitions/SortDirection'
      - description: The number of records to return (Max value = 100)
        in: query
        name: Take
        schema:
          default: 100
          format: int32
          maximum: 100.0
          minimum: 0.0
          nullable: false
          type: integer
      - description: The start of a custom period (can't be used together with the
          PresetPeriod parameter)
        in: query
        name: Start
        schema:
          format: date-time
          nullable: true
          type: string
      - description: The end of a custom period
        in: query
        name: End
        schema:
          format: date-time
          nullable: true
          type: string
      - description: The requested time period.
        in: query
        name: PresetPeriod
        schema:
          default: Last24Hours
          enum:
          - CurrentDay
          - CurrentWeek
          - CurrentMonth
          - CurrentYear
          - PreviousDay
          - PreviousWeek
          - PreviousMonth
          - PreviousYear
          - Last24Hours
          - Last48Hours
          - Last7Days
          - Last30Days
          - Last60Days
          - Last90Days
          - Last365Days
          - Last3Months
          - Last6Months
          - Last12Months
          - Last24Months
          - All
          nullable: true
          type: string
          x-schema:
            $ref: '#/definitions/PresetPeriodType'
        x-schema:
          $ref: '#/definitions/PresetPeriodType'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/AlertResponse'
          description: The request completed successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The specified Monitor Group for monitorGroupGuid does not exist.
      security:
      - basicauth:
        - ""
      summary: Returns alerts for a specific monitor group.
      tags:
      - Alert
  /Integration:
    get:
      operationId: Integration_GetAllIntegrations
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Integration'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Integration'
                type: array
          description: The request completed successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
      security:
      - basicauth:
        - ""
      summary: Gets a list of all integrations.
      tags:
      - Integration
  /Status/Monitor/{monitorGuid}:
    get:
      operationId: Status_GetMonitorStatus
      parameters:
      - description: The Guid of the monitor.
        in: path
        name: monitorGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitorStatusResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/MonitorStatusResponse'
          description: The request completed successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The monitor could not be found.
      security:
      - basicauth:
        - ""
      summary: Gets all monitor status data.
      tags:
      - Status
  /Status/MonitorGroup/{monitorGroupGuid}:
    get:
      operationId: Status_GetMonitorGroupStatus
      parameters:
      - description: The Guid of the monitor group.
        in: path
        name: monitorGroupGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitorStatusListResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/MonitorStatusListResponse'
          description: The request completed successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The monitor group could not be found.
      security:
      - basicauth:
        - ""
      summary: Gets a list of all monitor group status data.
      tags:
      - Status
  /AlertDefinition:
    get:
      operationId: AlertDefinition_GetAllAlertDefinitions
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AlertDefinition'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/AlertDefinition'
                type: array
          description: The request completed successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: One or more validation errors occurred.
      security:
      - basicauth:
        - ""
      summary: Gets a list of all alert definitions.
      tags:
      - AlertDefinition
    post:
      operationId: AlertDefinition_CreateAlertDefinition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlertDefinition'
          application/xml:
            schema:
              $ref: '#/components/schemas/AlertDefinition'
        description: The details of the alert definition to create.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertDefinition'
            application/xml:
              schema:
                $ref: '#/components/schemas/AlertDefinition'
          description: The request completed successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: One or more validation errors occurred.
      security:
      - basicauth:
        - ""
      summary: Creates a new alert definition.
      tags:
      - AlertDefinition
      x-codegen-request-body-name: alertDefinition
  /AlertDefinition/{alertDefinitionGuid}:
    delete:
      operationId: AlertDefinition_DeleteAlertDefinition
      parameters:
      - description: The Guid of the alert definition to remove.
        in: path
        name: alertDefinitionGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      responses:
        "204":
          content: {}
          description: The request completed successfully. No content is returned.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: One or more validation errors occurred.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The specified alert definition could not be found.
      security:
      - basicauth:
        - ""
      summary: Deletes an existing alert definition.
      tags:
      - AlertDefinition
    get:
      operationId: AlertDefinition_GetSpecifiedAlertDefinitions
      parameters:
      - description: The Guid of the alert definition.
        in: path
        name: alertDefinitionGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertDefinition'
            application/xml:
              schema:
                $ref: '#/components/schemas/AlertDefinition'
          description: The request completed successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: One or more validation errors occurred.
      security:
      - basicauth:
        - ""
      summary: Gets the specified alert definition.
      tags:
      - AlertDefinition
    patch:
      description: This methods accepts parts of an alert definition. Fields that
        do not require changes can be omitted.
      operationId: AlertDefinition_PatchAlertDefinition
      parameters:
      - description: The Guid of the alert definition that should be updated.
        in: path
        name: alertDefinitionGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlertDefinition'
          application/xml:
            schema:
              $ref: '#/components/schemas/AlertDefinition'
        description: The partial definition for the alert definition that should be
          updated.
        required: true
      responses:
        "204":
          content: {}
          description: The request completed successfully. No content is returned.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: One or more validation errors occurred.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The specified alert definition could not be found.
      security:
      - basicauth:
        - ""
      summary: Partially updates the definition for the specified alert definition.
      tags:
      - AlertDefinition
      x-codegen-request-body-name: alertDefinition
    put:
      description: This methods only accepts a complete alert definition where all
        fields are specified.
      operationId: AlertDefinition_PutAlertDefinition
      parameters:
      - description: The Guid of the alert definition that should be updated.
        in: path
        name: alertDefinitionGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlertDefinition'
          application/xml:
            schema:
              $ref: '#/components/schemas/AlertDefinition'
        description: The partial definition for the alert definition that should be
          updated.
        required: true
      responses:
        "204":
          content: {}
          description: The request completed successfully. No content is returned.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: One or more validation errors occurred.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The specified alert definition could not be found.
      security:
      - basicauth:
        - ""
      summary: Updates the definition for the specified alert definition.
      tags:
      - AlertDefinition
      x-codegen-request-body-name: alertDefinition
  /AlertDefinition/{alertDefinitionGuid}/Member:
    get:
      operationId: AlertDefinition_GetAllMembers
      parameters:
      - description: The Guid of the alert definition for which to return the members.
        in: path
        name: alertDefinitionGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AlertDefinitionMember'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/AlertDefinitionMember'
                type: array
          description: The request completed successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: One or more validation errors occurred.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The specified alert definition could not be found.
      security:
      - basicauth:
        - ""
      summary: Gets a list of all monitor and monitor group guids for the specified
        alert definition.
      tags:
      - AlertDefinition
  /AlertDefinition/{alertDefinitionGuid}/Member/Monitor/{monitorGuid}:
    delete:
      operationId: AlertDefinition_RemoveMonitorFromAlertDefinition
      parameters:
      - description: The Guid of the alert definition to modify.
        in: path
        name: alertDefinitionGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      - description: The Guid of the monitor to remove.
        in: path
        name: monitorGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      responses:
        "204":
          content: {}
          description: The request completed successfully. No content is returned.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: One or more validation errors occurred.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: One or more of the specified entities could not be found.
      security:
      - basicauth:
        - ""
      summary: Removes a monitor for the specified alert definition.
      tags:
      - AlertDefinition
    post:
      operationId: AlertDefinition_AddMonitorToAlertDefinition
      parameters:
      - description: The Guid of the alert definition to modify.
        in: path
        name: alertDefinitionGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      - description: The Guid of the monitor to add.
        in: path
        name: monitorGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertDefinitionMonitor'
            application/xml:
              schema:
                $ref: '#/components/schemas/AlertDefinitionMonitor'
          description: The request completed successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: One or more validation errors occurred.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: One or more of the specified entities could not be found.
      security:
      - basicauth:
        - ""
      summary: Adds a monitor to the specified alert definition.
      tags:
      - AlertDefinition
  /AlertDefinition/{alertDefinitionGuid}/Member/MonitorGroup/{monitorGroupGuid}:
    delete:
      operationId: AlertDefinition_RemoveMonitorGroupFromAlertDefinition
      parameters:
      - description: The Guid of the alert definition to modify.
        in: path
        name: alertDefinitionGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      - description: The Guid of the monitor group to remove.
        in: path
        name: monitorGroupGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      responses:
        "204":
          content: {}
          description: The request completed successfully. No content is returned.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: One or more validation errors occurred.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: One or more of the specified entities could not be found.
      security:
      - basicauth:
        - ""
      summary: Removes a monitor group for the specified alert definition.
      tags:
      - AlertDefinition
    post:
      operationId: AlertDefinition_AddMonitorGroupToAlertDefinition
      parameters:
      - description: The Guid of the alert definition to modify.
        in: path
        name: alertDefinitionGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      - description: The Guid of the monitor group to add.
        in: path
        name: monitorGroupGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertDefinitionMonitorGroup'
            application/xml:
              schema:
                $ref: '#/components/schemas/AlertDefinitionMonitorGroup'
          description: The request completed successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: One or more validation errors occurred.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: One or more of the specified entities could not be found.
      security:
      - basicauth:
        - ""
      summary: Adds a monitor group to the specified alert definition.
      tags:
      - AlertDefinition
  /AlertDefinition/{alertDefinitionGuid}/EscalationLevel/{escalationLevelId}:
    get:
      operationId: AlertDefinition_GetEscalationLevel
      parameters:
      - description: The Guid of the alert definition.
        in: path
        name: alertDefinitionGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      - description: The escalation level id.
        in: path
        name: escalationLevelId
        required: true
        schema:
          nullable: false
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EscalationLevel'
            application/xml:
              schema:
                $ref: '#/components/schemas/EscalationLevel'
          description: The request completed successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: One or more validation errors occurred.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: One or more of the specified entities could not be found.
      security:
      - basicauth:
        - ""
      summary: Gets the escalation level information of the specified alert definition.
      tags:
      - AlertDefinition
    patch:
      description: This methods only accepts a complete alert definition where all
        fields are specified.
      operationId: AlertDefinition_PatchAlertDefinitionEscalation
      parameters:
      - description: The Guid of the alert definition that should be updated.
        in: path
        name: alertDefinitionGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      - description: The level number of the escalation that should be updated.
        in: path
        name: escalationLevelId
        required: true
        schema:
          nullable: false
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EscalationLevel'
          application/xml:
            schema:
              $ref: '#/components/schemas/EscalationLevel'
        description: The escalation level for the alert definition that should be
          updated.
        required: true
      responses:
        "204":
          content: {}
          description: The request completed successfully. No content is returned.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: One or more validation errors occurred.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The specified alert definition could not be found.
      security:
      - basicauth:
        - ""
      summary: Partially updates the escalation level for the specified alert definition.
      tags:
      - AlertDefinition
      x-codegen-request-body-name: escalationLevel
    put:
      description: This methods only accepts a complete alert definition where all
        fields are specified.
      operationId: AlertDefinition_PutAlertDefinitionEscalation
      parameters:
      - description: The Guid of the alert definition that should be updated.
        in: path
        name: alertDefinitionGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      - description: The level number of the escalation that should be updated.
        in: path
        name: escalationLevelId
        required: true
        schema:
          nullable: false
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EscalationLevel'
          application/xml:
            schema:
              $ref: '#/components/schemas/EscalationLevel'
        description: The escalation level for the alert definition that should be
          updated.
        required: true
      responses:
        "204":
          content: {}
          description: The request completed successfully. No content is returned.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: One or more validation errors occurred.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The specified alert definition could not be found.
      security:
      - basicauth:
        - ""
      summary: Updates the escalation level for the specified alert definition.
      tags:
      - AlertDefinition
      x-codegen-request-body-name: escalationLevel
  /AlertDefinition/{alertDefinitionGuid}/EscalationLevel:
    get:
      operationId: AlertDefinition_GetAllEscalationLevels
      parameters:
      - description: The Guid of the alert definition for which to return all escalation
          levels.
        in: path
        name: alertDefinitionGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/EscalationLevel'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/EscalationLevel'
                type: array
          description: The request completed successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: One or more validation errors occurred.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: One or more of the specified entities could not be found.
      security:
      - basicauth:
        - ""
      summary: Gets all escalation level information for the specified alert definition.
      tags:
      - AlertDefinition
  /AlertDefinition/{alertDefinitionGuid}/EscalationLevel/{escalationLevelId}/Member:
    get:
      operationId: AlertDefinition_GetEscalationLevelOperator
      parameters:
      - description: The Guid of the alert definition.
        in: path
        name: alertDefinitionGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      - description: The escalation level id.
        in: path
        name: escalationLevelId
        required: true
        schema:
          nullable: false
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AlertEscalationLevelMember'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/AlertEscalationLevelMember'
                type: array
          description: The request completed successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: One or more validation errors occurred.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: One or more of the specified entities could not be found.
      security:
      - basicauth:
        - ""
      summary: Gets the operator and operator group guids for the specified escalation
        level.
      tags:
      - AlertDefinition
  /AlertDefinition/{alertDefinitionGuid}/EscalationLevel/{escalationLevelId}/Member/Operator/{operatorGuid}:
    delete:
      operationId: AlertDefinition_RemoveOperatorFromEscalationLevel
      parameters:
      - description: The Guid of the alert definition.
        in: path
        name: alertDefinitionGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      - description: The escalation level id.
        in: path
        name: escalationLevelId
        required: true
        schema:
          nullable: false
          type: integer
      - description: The Guid of the operator to remove.
        in: path
        name: operatorGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      responses:
        "204":
          content: {}
          description: The request completed successfully. No content is returned.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: One or more validation errors occurred.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: One or more of the specified entities could not be found.
      security:
      - basicauth:
        - ""
      summary: Removes an operator for the specified escalation level.
      tags:
      - AlertDefinition
    post:
      operationId: AlertDefinition_AddOperatorToEscalationLevel
      parameters:
      - description: The Guid of the alert definition.
        in: path
        name: alertDefinitionGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      - description: The escalation level id.
        in: path
        name: escalationLevelId
        required: true
        schema:
          nullable: false
          type: integer
      - description: The Guid of the operator to add.
        in: path
        name: operatorGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertDefinitionOperator'
            application/xml:
              schema:
                $ref: '#/components/schemas/AlertDefinitionOperator'
          description: The request completed successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: One or more validation errors occurred.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: One or more of the specified entities could not be found.
      security:
      - basicauth:
        - ""
      summary: Adds an operator to the specified escalation level.
      tags:
      - AlertDefinition
  /AlertDefinition/{alertDefinitionGuid}/EscalationLevel/{escalationLevelId}/Member/OperatorGroup/{operatorGroupGuid}:
    delete:
      operationId: AlertDefinition_RemoveOperatorGroupFromEscalationLevel
      parameters:
      - description: The Guid of the alert definition.
        in: path
        name: alertDefinitionGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      - description: The escalation level id.
        in: path
        name: escalationLevelId
        required: true
        schema:
          nullable: false
          type: integer
      - description: The Guid of the operator group to remove.
        in: path
        name: operatorGroupGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      responses:
        "204":
          content: {}
          description: The request completed successfully. No content is returned.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: One or more validation errors occurred.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: One or more of the specified entities could not be found.
      security:
      - basicauth:
        - ""
      summary: Removes an operator group for the specified escalation level.
      tags:
      - AlertDefinition
    post:
      operationId: AlertDefinition_AddOperatorGroupToEscalationLevel
      parameters:
      - description: The Guid of the alert definition.
        in: path
        name: alertDefinitionGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      - description: The escalation level id.
        in: path
        name: escalationLevelId
        required: true
        schema:
          nullable: false
          type: integer
      - description: The Guid of the operator group to add.
        in: path
        name: operatorGroupGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertDefinitionOperatorGroup'
            application/xml:
              schema:
                $ref: '#/components/schemas/AlertDefinitionOperatorGroup'
          description: The request completed successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: One or more validation errors occurred.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: One or more of the specified entities could not be found.
      security:
      - basicauth:
        - ""
      summary: Adds an operator group to the specified escalation level.
      tags:
      - AlertDefinition
  /AlertDefinition/{alertDefinitionGuid}/EscalationLevel/{escalationLevelId}/Integration:
    get:
      operationId: AlertDefinition_GetAllEscalationLevelIntegrations
      parameters:
      - description: The Guid of the alert definition.
        in: path
        name: alertDefinitionGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      - description: The escalation level id.
        in: path
        name: escalationLevelId
        required: true
        schema:
          nullable: false
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Integration'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Integration'
                type: array
          description: The request completed successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: One or more validation errors occurred.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: One or more of the specified entities could not be found.
      security:
      - basicauth:
        - ""
      summary: Gets all integrations for a specified escalation level.
      tags:
      - AlertDefinition
    post:
      operationId: AlertDefinition_AddIntegrationToEscalationLevel
      parameters:
      - description: The Guid of the alert definition.
        in: path
        name: alertDefinitionGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      - description: The escalation level id.
        in: path
        name: escalationLevelId
        required: true
        schema:
          nullable: false
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EscalationLevelIntegration'
          application/xml:
            schema:
              $ref: '#/components/schemas/EscalationLevelIntegration'
        description: The integration to add.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertDefinitionMonitorGroup'
            application/xml:
              schema:
                $ref: '#/components/schemas/AlertDefinitionMonitorGroup'
          description: The request completed successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: One or more validation errors occurred.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: One or more of the specified entities could not be found.
      security:
      - basicauth:
        - ""
      summary: Adds an integration to a specified escalation level.
      tags:
      - AlertDefinition
      x-codegen-request-body-name: escalationLevelIntegration
  /AlertDefinition/{alertDefinitionGuid}/EscalationLevel/{escalationLevelId}/Integration/{integrationGuid}:
    delete:
      operationId: AlertDefinition_RemoveIntegrationFromEscalationLevel
      parameters:
      - description: The Guid of the alert definition.
        in: path
        name: alertDefinitionGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      - description: The escalation level id.
        in: path
        name: escalationLevelId
        required: true
        schema:
          nullable: false
          type: integer
      - description: The Guid of the integration to remove.
        in: path
        name: integrationGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      responses:
        "204":
          content: {}
          description: The request completed successfully. No content is returned.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: One or more validation errors occurred.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: One or more of the specified entities could not be found.
      security:
      - basicauth:
        - ""
      summary: Removes an integration from a specified escalation level.
      tags:
      - AlertDefinition
    get:
      operationId: AlertDefinition_GetEscalationLevelIntegration
      parameters:
      - description: The Guid of the alert definition.
        in: path
        name: alertDefinitionGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      - description: The escalation level id.
        in: path
        name: escalationLevelId
        required: true
        schema:
          nullable: false
          type: integer
      - description: The Guid of the integration.
        in: path
        name: integrationGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Integration'
            application/xml:
              schema:
                $ref: '#/components/schemas/Integration'
          description: The request completed successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: One or more validation errors occurred.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: One or more of the specified entities could not be found.
      security:
      - basicauth:
        - ""
      summary: Gets a single integration for a specified escalation level.
      tags:
      - AlertDefinition
    patch:
      operationId: AlertDefinition_UpdateIntegrationForEscalationWithPatch
      parameters:
      - description: The Guid of the alert definition.
        in: path
        name: alertDefinitionGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      - description: The escalation level id.
        in: path
        name: escalationLevelId
        required: true
        schema:
          nullable: false
          type: integer
      - description: The Guid of the integration to update.
        in: path
        name: integrationGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EscalationLevelIntegration'
          application/xml:
            schema:
              $ref: '#/components/schemas/EscalationLevelIntegration'
        description: The partial definition for the integration that should be updated.
        required: true
      responses:
        "204":
          content: {}
          description: The request completed successfully. No content is returned.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: One or more validation errors occurred.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: One or more of the specified entities could not be found.
      security:
      - basicauth:
        - ""
      summary: Partially updates an integration for a specified escalation level.
      tags:
      - AlertDefinition
      x-codegen-request-body-name: escalationLevelIntegration
    put:
      operationId: AlertDefinition_UpdateIntegrationForEscalationWithPut
      parameters:
      - description: The Guid of the alert definition.
        in: path
        name: alertDefinitionGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      - description: The escalation level id.
        in: path
        name: escalationLevelId
        required: true
        schema:
          nullable: false
          type: integer
      - description: The Guid of the integration to update.
        in: path
        name: integrationGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EscalationLevelIntegration'
          application/xml:
            schema:
              $ref: '#/components/schemas/EscalationLevelIntegration'
        description: The definition for the integration that should be updated.
        required: true
      responses:
        "204":
          content: {}
          description: The request completed successfully. No content is returned
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: One or more validation errors occurred.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: One or more of the specified entities could not be found.
      security:
      - basicauth:
        - ""
      summary: Updates an integration for a specified escalation level.
      tags:
      - AlertDefinition
      x-codegen-request-body-name: escalationLevelIntegration
  /Checkpoint:
    get:
      operationId: Checkpoint_GetAllCheckpoints
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckpointListResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CheckpointListResponse'
          description: The request completed successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
      security:
      - basicauth:
        - ""
      summary: 'Returns all the checkpoints. '
      tags:
      - Checkpoint
  /Checkpoint/{checkpointId}:
    get:
      operationId: Checkpoint_GetCheckpoint
      parameters:
      - description: The Id of the requested checkpoint.
        in: path
        name: checkpointId
        required: true
        schema:
          nullable: false
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckpointResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CheckpointResponse'
          description: The request completed successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The specified checkpoint doesn't exist.
      security:
      - basicauth:
        - ""
      summary: 'Returns the specified checkpoint. '
      tags:
      - Checkpoint
  /Checkpoint/Server/{serverId}:
    get:
      operationId: CheckpointServer_GetServer
      parameters:
      - description: The Id of the requested server.
        in: path
        name: serverId
        required: true
        schema:
          nullable: false
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckpoinServerResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CheckpoinServerResponse'
          description: The request completed successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
      security:
      - basicauth:
        - ""
      summary: Returns the requested checkpoint server.
      tags:
      - Checkpoint
  /Checkpoint/Server/Ipv4:
    get:
      operationId: CheckpointServer_GetAllServerIpv4Addresses
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListStringResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ListStringResponse'
          description: The request completed successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
      summary: 'Anonymous call that returns all the IPv4 addresses of all the checkpoint
        servers. '
      tags:
      - Checkpoint
  /Checkpoint/Server/Ipv6:
    get:
      operationId: CheckpointServer_GetAllServerIpv6Addresses
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListStringResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ListStringResponse'
          description: The request completed successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
      summary: 'Anonymous call that returns all the IPv6 addresses of all the checkpoint
        servers. '
      tags:
      - Checkpoint
  /MonitorGroup:
    get:
      operationId: MonitorGroup_GetAllMonitorGroups
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MonitorGroup'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/MonitorGroup'
                type: array
          description: The request completed successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
      security:
      - basicauth:
        - ""
      summary: Gets all monitor groups
      tags:
      - MonitorGroup
    post:
      operationId: MonitorGroup_CreateMonitorGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MonitorGroup'
          application/xml:
            schema:
              $ref: '#/components/schemas/MonitorGroup'
        description: The MonitorGroup object to be created
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitorGroup'
            application/xml:
              schema:
                $ref: '#/components/schemas/MonitorGroup'
          description: The request completed successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
      security:
      - basicauth:
        - ""
      summary: Creates a new monitor group
      tags:
      - MonitorGroup
      x-codegen-request-body-name: monitorGroup
  /MonitorGroup/{monitorGroupGuid}:
    delete:
      operationId: MonitorGroup_DeleteMonitorGroup
      parameters:
      - description: The Guid of the monitor group to be deleted
        in: path
        name: monitorGroupGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      responses:
        "204":
          content: {}
          description: The request completed successfully. No content is returned.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: |-
            The request failed.
            or
            Deleting the AllMonitors group is not allowed.
          x-expectedSchemas:
          - description: The request failed.
            schema:
              $ref: '#/definitions/MessageList'
          - description: Deleting the AllMonitors group is not allowed.
            schema:
              $ref: '#/definitions/MessageList'
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The requested monitor group was not found.
      security:
      - basicauth:
        - ""
      summary: Deletes the specified monitor group
      tags:
      - MonitorGroup
    get:
      operationId: MonitorGroup_GetMonitorGroup
      parameters:
      - description: The Guid of the monitor group to be retrieved
        in: path
        name: monitorGroupGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitorGroup'
            application/xml:
              schema:
                $ref: '#/components/schemas/MonitorGroup'
          description: The request completed successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The requested monitor group was not found.
      security:
      - basicauth:
        - ""
      summary: Gets the details of a monitor group
      tags:
      - MonitorGroup
    put:
      operationId: MonitorGroup_UpdateMonitorGroup
      parameters:
      - description: The Guid of the monitor group to be updated
        in: path
        name: monitorGroupGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MonitorGroup'
          application/xml:
            schema:
              $ref: '#/components/schemas/MonitorGroup'
        description: The monitor group to be updated
        required: true
      responses:
        "204":
          content: {}
          description: The request completed successfully. No content is returned.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: |-
            The request failed.
            or
            The All Monitors group cannot be changed or deleted.
            or
            The All Monitors group already exists.
          x-expectedSchemas:
          - description: The request failed.
            schema:
              $ref: '#/definitions/MessageList'
          - description: The All Monitors group cannot be changed or deleted.
            schema:
              $ref: '#/definitions/MessageList'
          - description: The All Monitors group already exists.
            schema:
              $ref: '#/definitions/MessageList'
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The requested monitor group was not found.
      security:
      - basicauth:
        - ""
      summary: Updates the monitor group with the Guid specified
      tags:
      - MonitorGroup
      x-codegen-request-body-name: item
  /MonitorGroup/{monitorGroupGuid}/Member:
    get:
      operationId: MonitorGroup_GetMonitorGroupMembers
      parameters:
      - description: The Guid of the monitor group to retrieve the members for
        in: path
        name: monitorGroupGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitorGroupMember'
            application/xml:
              schema:
                $ref: '#/components/schemas/MonitorGroupMember'
          description: The request completed successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The requested monitor group was not found.
      security:
      - basicauth:
        - ""
      summary: Gets a list of all members of a monitor group
      tags:
      - MonitorGroup
  /MonitorGroup/{monitorGroupGuid}/AddMaintenancePeriodToAllMembers:
    post:
      operationId: MonitorGroup_AddMaintenancePeriodToAllMembers
      parameters:
      - in: path
        name: monitorGroupGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MaintenancePeriod'
          application/xml:
            schema:
              $ref: '#/components/schemas/MaintenancePeriod'
        required: true
      responses:
        "204":
          content: {}
          description: The request completed successfully. No content is returned.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The requested monitor group was not found.
      security:
      - basicauth:
        - ""
      summary: 'Adds the provided maintenance period to all monitors in the group
        specified '
      tags:
      - MonitorGroup
      x-codegen-request-body-name: maintenancePeriod
  /MonitorGroup/{monitorGroupGuid}/Member/{monitorGuid}:
    delete:
      operationId: MonitorGroup_RemoveMonitorFromMonitorGroup
      parameters:
      - description: The Guid of the monitor group to remove the monitor from
        in: path
        name: monitorGroupGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      - description: The monitor Guid to be removed
        in: path
        name: monitorGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      responses:
        "204":
          content: {}
          description: The request completed successfully. No content is returned.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: |-
            The request failed.
            or
            A monitor cannot be removed from the All Monitors group.
          x-expectedSchemas:
          - description: The request failed.
            schema:
              $ref: '#/definitions/MessageList'
          - description: A monitor cannot be removed from the All Monitors group.
            schema:
              $ref: '#/definitions/MessageList'
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The requested monitor group was not found.
      security:
      - basicauth:
        - ""
      summary: Removes the specified monitor from the monitor group
      tags:
      - MonitorGroup
    post:
      operationId: MonitorGroup_AddMonitorToMonitorGroup
      parameters:
      - description: The Guid of the monitor group to add the monitor to
        in: path
        name: monitorGroupGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      - description: The monitor Guid
        in: path
        name: monitorGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      responses:
        "201":
          content: {}
          description: The request completed successfully. No content is returned.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The requested monitor group was not found.
      security:
      - basicauth:
        - ""
      summary: 'Adds the specified monitor to the monitor group '
      tags:
      - MonitorGroup
  /MonitorGroup/{monitorGroupGuid}/StopAllMonitors:
    post:
      operationId: MonitorGroup_StopAllMonitorsInGroup
      parameters:
      - description: The monitor group GUID
        in: path
        name: monitorGroupGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      responses:
        "204":
          content: {}
          description: The request completed successfully. No content is returned.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The requested monitor group was not found.
      security:
      - basicauth:
        - ""
      summary: Stops all monitors that are a member of the monitor group specified
        by the monitor group GUID
      tags:
      - MonitorGroup
  /MonitorGroup/{monitorGroupGuid}/StartAllMonitors:
    post:
      operationId: MonitorGroup_StartAllMonitorsInGroup
      parameters:
      - description: The monitor group GUID
        in: path
        name: monitorGroupGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      responses:
        "204":
          content: {}
          description: The request completed successfully. No content is returned.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The requested monitor group was not found.
      security:
      - basicauth:
        - ""
      summary: Starts all monitors that are a member of the monitor group specified
        by the monitor group GUID
      tags:
      - MonitorGroup
  /MonitorGroup/{monitorGroupGuid}/StopAllMonitorAlerts:
    post:
      operationId: MonitorGroup_StopAllMonitorAlertsInGroup
      parameters:
      - description: The monitor group GUID
        in: path
        name: monitorGroupGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      responses:
        "204":
          content: {}
          description: The request completed successfully. No content is returned.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The requested monitor group was not found.
      security:
      - basicauth:
        - ""
      summary: Stops alerting for all monitors that are a member of the monitor group
        specified by the monitor group GUID
      tags:
      - MonitorGroup
  /MonitorGroup/{monitorGroupGuid}/StartAllMonitorAlerts:
    post:
      operationId: MonitorGroup_StartAllMonitorAlertsInGroup
      parameters:
      - description: The monitor group GUID
        in: path
        name: monitorGroupGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      responses:
        "204":
          content: {}
          description: The request completed successfully. No content is returned.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The requested monitor group was not found.
      security:
      - basicauth:
        - ""
      summary: Starts alerting for all monitors that are a member of the monitor group
        specified by the monitor group GUID
      tags:
      - MonitorGroup
  /Operator:
    get:
      operationId: Operator_GetAllOperators
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Operator'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Operator'
                type: array
          description: The request completed successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
      security:
      - basicauth:
        - ""
      summary: Gets a list of all operators.
      tags:
      - Operator
    post:
      operationId: Operator_CreateOperator
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Operator'
          application/xml:
            schema:
              $ref: '#/components/schemas/Operator'
        description: The details of the operator to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operator'
            application/xml:
              schema:
                $ref: '#/components/schemas/Operator'
          description: The request completed successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: One or more validation errors occurred.
      security:
      - basicauth:
        - ""
      summary: Creates a new operator.
      tags:
      - Operator
      x-codegen-request-body-name: uptrendsOperator
  /Operator/{operatorGuid}:
    delete:
      operationId: Operator_DeleteOperator
      parameters:
      - description: The Guid of the operator to delete
        in: path
        name: operatorGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      responses:
        "204":
          content: {}
          description: The request completed successfully. No content is returned.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: Deleting the current operator is not allowed.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The specified operator was not found.
      security:
      - basicauth:
        - ""
      summary: Deletes an existing operator.
      tags:
      - Operator
    get:
      operationId: Operator_GetOperator
      parameters:
      - description: The Guid of the operator for which to retrieve the details
        in: path
        name: operatorGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operator'
            application/xml:
              schema:
                $ref: '#/components/schemas/Operator'
          description: The request completed successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The specified operator was not found.
      security:
      - basicauth:
        - ""
      summary: Gets the details of the operator with the provided OperatorGuid.
      tags:
      - Operator
    patch:
      operationId: Operator_UpdateOperatorWithPatch
      parameters:
      - description: The Guid of the operator to update
        in: path
        name: operatorGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Operator'
          application/xml:
            schema:
              $ref: '#/components/schemas/Operator'
        description: The updated details of the operator
        required: true
      responses:
        "204":
          content: {}
          description: The request completed successfully. No content is returned.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: One or more validation errors occurred.
      security:
      - basicauth:
        - ""
      summary: Updates an existing operator.
      tags:
      - Operator
      x-codegen-request-body-name: uptrendsOperator
    put:
      operationId: Operator_UpdateOperator
      parameters:
      - description: The Guid of the operator to update
        in: path
        name: operatorGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Operator'
          application/xml:
            schema:
              $ref: '#/components/schemas/Operator'
        description: The updated details of the operator
        required: true
      responses:
        "204":
          content: {}
          description: The request completed successfully. No content is returned.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: One or more validation errors occurred.
      security:
      - basicauth:
        - ""
      summary: Updates an existing operator.
      tags:
      - Operator
      x-codegen-request-body-name: uptrendsOperator
  /Operator/{operatorGuid}/OperatorGroup:
    get:
      operationId: Operator_GetOperatorGroupsForOperator
      parameters:
      - description: The Guid of the operator for which to retrieve the operator group
          guids
        in: path
        name: operatorGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/OperatorMember'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/OperatorMember'
                type: array
          description: The request completed successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The specified operator was not found.
      security:
      - basicauth:
        - ""
      summary: Gets a list of all operator groups for the specified operator.
      tags:
      - Operator
  /Operator/{operatorGuid}/Authorization:
    get:
      operationId: Operator_GetAuthorizationsForOperator
      parameters:
      - description: The Guid of the operator
        in: path
        name: operatorGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/OperatorAuthorizationType'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/OperatorAuthorizationType'
                type: array
          description: The request completed successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The specified operator was not found.
      security:
      - basicauth:
        - ""
      summary: Gets all authorizations for the specified operator.
      tags:
      - Operator
  /Operator/{operatorGuid}/Authorization/{authorizationType}:
    delete:
      operationId: Operator_DeleteAuthorizationForOperator
      parameters:
      - description: The Guid of the operator
        in: path
        name: operatorGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      - description: The type of authorization
        in: path
        name: authorizationType
        required: true
        schema:
          enum:
          - AccountAccess
          nullable: false
          type: string
          x-schema:
            $ref: '#/definitions/OperatorAuthorizationType'
        x-schema:
          $ref: '#/definitions/OperatorAuthorizationType'
      responses:
        "204":
          content: {}
          description: The request completed successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The specified operator was not found.
      security:
      - basicauth:
        - ""
      summary: Removes the specified authorization of this operator.
      tags:
      - Operator
    post:
      operationId: Operator_PostAuthorizationForOperator
      parameters:
      - description: The Guid of the operator
        in: path
        name: operatorGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      - description: The type of authorization
        in: path
        name: authorizationType
        required: true
        schema:
          enum:
          - AccountAccess
          nullable: false
          type: string
          x-schema:
            $ref: '#/definitions/OperatorAuthorizationType'
        x-schema:
          $ref: '#/definitions/OperatorAuthorizationType'
      responses:
        "204":
          content: {}
          description: The request completed successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The specified operator was not found.
      security:
      - basicauth:
        - ""
      summary: Assigns the specified authorization to this operator.
      tags:
      - Operator
  /Operator/{operatorGuid}/DutySchedule:
    get:
      operationId: Operator_GetDutyScheduleForOperator
      parameters:
      - description: The Guid of the operator to get the duty schedule for
        in: path
        name: operatorGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/OperatorDutySchedule'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/OperatorDutySchedule'
                type: array
          description: The request completed successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The specified operator was not found.
      security:
      - basicauth:
        - ""
      summary: Gets the duty schedules for an specified operator.
      tags:
      - Operator
    post:
      operationId: Operator_AddDutyPeriodForOperator
      parameters:
      - description: The Guid of the operator to add the duty schedule to
        in: path
        name: operatorGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OperatorDutySchedule'
          application/xml:
            schema:
              $ref: '#/components/schemas/OperatorDutySchedule'
        description: The duty schedule to add
        required: true
      responses:
        "201":
          content: {}
          description: The request completed successfully. No content is returned.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: One or more validation errors occurred.
      security:
      - basicauth:
        - ""
      summary: Adds a duty schedule to the specified operator.
      tags:
      - Operator
      x-codegen-request-body-name: schedule
  /Operator/{operatorGuid}/DutySchedule/{dutyScheduleId}:
    delete:
      operationId: Operator_DeleteDutyScheduleFromOperator
      parameters:
      - in: path
        name: operatorGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      - in: path
        name: dutyScheduleId
        required: true
        schema:
          format: int32
          nullable: false
          type: integer
      responses:
        "204":
          content: {}
          description: The request completed successfully. No content is returned.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The specified operator or duty schedule item does not exist.
      security:
      - basicauth:
        - ""
      summary: Deletes the specified duty schedule of the specified operator.
      tags:
      - Operator
    put:
      operationId: Operator_UpdateDutyPeriodForOperator
      parameters:
      - in: path
        name: operatorGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      - in: path
        name: dutyScheduleId
        required: true
        schema:
          format: int32
          nullable: false
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OperatorDutySchedule'
          application/xml:
            schema:
              $ref: '#/components/schemas/OperatorDutySchedule'
        required: true
      responses:
        "204":
          content: {}
          description: The request completed successfully. No content is returned.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The specified operator or duty schedule does not exist.
      security:
      - basicauth:
        - ""
      summary: Updates the specified duty schedule of the specified operator.
      tags:
      - Operator
      x-codegen-request-body-name: schedule
  /Timezone:
    get:
      operationId: Miscellaneous_GetAllTimezones
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Timezone'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Timezone'
                type: array
          description: The request completed successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
      security:
      - basicauth:
        - ""
      summary: Gets all timezones available.
      tags:
      - Miscellaneous
  /Timezone/{timezoneId}:
    get:
      operationId: Miscellaneous_GetTimezoneById
      parameters:
      - in: path
        name: timezoneId
        required: true
        schema:
          nullable: false
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Timezone'
            application/xml:
              schema:
                $ref: '#/components/schemas/Timezone'
          description: The request completed successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
      security:
      - basicauth:
        - ""
      summary: Gets the timezone with the specified Id.
      tags:
      - Miscellaneous
  /OutgoingPhoneNumber:
    get:
      operationId: Miscellaneous_GetAllOutgoingPhoneNumbers
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/OutgoingPhoneNumberDetails'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/OutgoingPhoneNumberDetails'
                type: array
          description: The request completed successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
      security:
      - basicauth:
        - ""
      summary: Gets a list of all outgoing phone numbers available.
      tags:
      - Miscellaneous
  /OperatorGroup:
    get:
      operationId: OperatorGroup_GetAllOperatorGroups
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/OperatorGroup'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/OperatorGroup'
                type: array
          description: The request completed successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
      security:
      - basicauth:
        - ""
      summary: Gets all operator groups
      tags:
      - OperatorGroup
    post:
      operationId: OperatorGroup_CreateOperatorGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OperatorGroup'
          application/xml:
            schema:
              $ref: '#/components/schemas/OperatorGroup'
        description: The operatorGroup object to be created
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperatorGroup'
            application/xml:
              schema:
                $ref: '#/components/schemas/OperatorGroup'
          description: The request completed successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
      security:
      - basicauth:
        - ""
      summary: Creates a new operator group
      tags:
      - OperatorGroup
      x-codegen-request-body-name: operatorGroup
  /OperatorGroup/{operatorGroupGuid}:
    delete:
      operationId: OperatorGroup_DeleteOperatorGroup
      parameters:
      - description: The Guid of the operator group to be deleted
        in: path
        name: operatorGroupGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      responses:
        "204":
          content: {}
          description: The request completed successfully. No content is returned.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: |-
            The request failed.
            or
            Deleting the Alloperators group is not allowed.
          x-expectedSchemas:
          - description: The request failed.
            schema:
              $ref: '#/definitions/MessageList'
          - description: Deleting the Alloperators group is not allowed.
            schema:
              $ref: '#/definitions/MessageList'
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The requested operator group was not found.
      security:
      - basicauth:
        - ""
      summary: Deletes the specified operator group
      tags:
      - OperatorGroup
    get:
      operationId: OperatorGroup_GetOperatorGroup
      parameters:
      - description: The Guid of the operator group to be retrieved
        in: path
        name: operatorGroupGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperatorGroup'
            application/xml:
              schema:
                $ref: '#/components/schemas/OperatorGroup'
          description: The request completed successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The requested operator group was not found.
      security:
      - basicauth:
        - ""
      summary: Gets the details of a operator group
      tags:
      - OperatorGroup
    put:
      operationId: OperatorGroup_UpdateOperatorGroup
      parameters:
      - description: The Guid of the operator group to be updated
        in: path
        name: operatorGroupGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OperatorGroup'
          application/xml:
            schema:
              $ref: '#/components/schemas/OperatorGroup'
        description: The operator group to be updated
        required: true
      responses:
        "204":
          content: {}
          description: The request completed successfully. No content is returned.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: |-
            The request failed.
            or
            The All operators group cannot be changed or deleted.
            or
            The All operators group already exists.
          x-expectedSchemas:
          - description: The request failed.
            schema:
              $ref: '#/definitions/MessageList'
          - description: The All operators group cannot be changed or deleted.
            schema:
              $ref: '#/definitions/MessageList'
          - description: The All operators group already exists.
            schema:
              $ref: '#/definitions/MessageList'
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The requested operator group was not found.
      security:
      - basicauth:
        - ""
      summary: Updates the operator group with the Guid specified
      tags:
      - OperatorGroup
      x-codegen-request-body-name: operatorGroup
  /OperatorGroup/{operatorGroupGuid}/Member:
    get:
      operationId: OperatorGroup_GetOperatorGroupMembers
      parameters:
      - description: The Guid of the operator group to retrieve the members for
        in: path
        name: operatorGroupGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperatorGroupMember'
            application/xml:
              schema:
                $ref: '#/components/schemas/OperatorGroupMember'
          description: The request completed successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The requested operator group was not found.
      security:
      - basicauth:
        - ""
      summary: Gets a list of all members of an operator group
      tags:
      - OperatorGroup
  /OperatorGroup/{operatorGroupGuid}/DutySchedule/AddDutyScheduleForAllMembers:
    post:
      operationId: OperatorGroup_AddDutyScheduleToAllMembers
      parameters:
      - in: path
        name: operatorGroupGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OperatorDutySchedule'
          application/xml:
            schema:
              $ref: '#/components/schemas/OperatorDutySchedule'
        required: true
      responses:
        "204":
          content: {}
          description: The request completed successfully. No content is returned.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The requested operator group was not found.
      security:
      - basicauth:
        - ""
      summary: 'Adds the provided duty schedule to all operators in the group specified '
      tags:
      - OperatorGroup
      x-codegen-request-body-name: dutySchedule
  /OperatorGroup/{operatorGroupGuid}/Member/{operatorGuid}:
    delete:
      operationId: OperatorGroup_RemoveOperatorFromOperatorGroup
      parameters:
      - description: The Guid of the operator group to remove the operator from
        in: path
        name: operatorGroupGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      - description: The operator Guid to be removed
        in: path
        name: operatorGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      responses:
        "204":
          content: {}
          description: The request completed successfully. No content is returned.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: |-
            The request failed.
            or
            A operator cannot be removed from the All operators group.
          x-expectedSchemas:
          - description: The request failed.
            schema:
              $ref: '#/definitions/MessageList'
          - description: A operator cannot be removed from the All operators group.
            schema:
              $ref: '#/definitions/MessageList'
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The requested operator group was not found.
      security:
      - basicauth:
        - ""
      summary: Removes the specified operator from the operator group
      tags:
      - OperatorGroup
    post:
      operationId: OperatorGroup_AddOperatorToOperatorGroup
      parameters:
      - description: The Guid of the operator group to add the operator to
        in: path
        name: operatorGroupGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      - description: The operator Guid
        in: path
        name: operatorGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      responses:
        "201":
          content: {}
          description: The request completed successfully. No content is returned.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The requested operator group was not found.
      security:
      - basicauth:
        - ""
      summary: 'Adds the specified operator to the operator group '
      tags:
      - OperatorGroup
  /OperatorGroup/{operatorGroupGuid}/AllOperatorsOnDuty:
    post:
      operationId: OperatorGroup_AllOperatorsInGroupOnDuty
      parameters:
      - description: The operator group GUID
        in: path
        name: operatorGroupGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      responses:
        "204":
          content: {}
          description: The request completed successfully. No content is returned.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageInfo'
          description: The request failed.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageInfo'
          description: The requested operator group was not found.
      security:
      - basicauth:
        - ""
      summary: Set the OnDuty flag to on for all operators that are a member of the
        operator group specified by the operator group GUID
      tags:
      - OperatorGroup
  /OperatorGroup/{operatorGroupGuid}/AllOperatorsOffDuty:
    post:
      operationId: OperatorGroup_AllOperatorsInGroupOffDuty
      parameters:
      - description: The operator group GUID
        in: path
        name: operatorGroupGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      responses:
        "204":
          content: {}
          description: The request completed successfully. No content is returned.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageInfo'
          description: The request failed.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageInfo'
          description: The requested operator group was not found.
      security:
      - basicauth:
        - ""
      summary: Set the OnDuty flag to off for all operators that are a member of the
        operator group specified by the operator group GUID
      tags:
      - OperatorGroup
  /OperatorGroup/{operatorGroupGuid}/Authorization:
    get:
      operationId: OperatorGroup_GetAuthorizationsForOperatorGroup
      parameters:
      - description: The Guid of the operatorgroup for which to return authorizations.
        in: path
        name: operatorGroupGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperatorGroupAuthorization'
            application/xml:
              schema:
                $ref: '#/components/schemas/OperatorGroupAuthorization'
          description: The request completed successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The requested vault section does not exist.
      security:
      - basicauth:
        - ""
      summary: Returns all authorizations for the specified operator group
      tags:
      - OperatorGroup
    post:
      description: The AuthorizationId attribute should be omitted in the request
        body. The newly created authorization will be returned in the response. An
        authorization should be granted to an operator group. Therefore, either specify
        the OperatorGroupGuid attribute. The OperatorGuid attribute is not used for
        this endpoint
      operationId: OperatorGroup_CreateAuthorizationForOperatorGroup
      parameters:
      - description: The Guid of the operator group for which to create the new authorization.
        in: path
        name: operatorGroupGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OperatorGroupAuthorization'
          application/xml:
            schema:
              $ref: '#/components/schemas/OperatorGroupAuthorization'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperatorGroupAuthorization'
            application/xml:
              schema:
                $ref: '#/components/schemas/OperatorGroupAuthorization'
          description: The request completed successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The requested vault section does not exist.
      security:
      - basicauth:
        - ""
      summary: Creates a new authorization for the specified operator group
      tags:
      - OperatorGroup
      x-codegen-request-body-name: authorization
  /OperatorGroup/{operatorGroupGuid}/Authorization/{authorizationGuid}:
    delete:
      operationId: OperatorGroup_DeleteAuthorizationForOperatorGroup
      parameters:
      - description: The Guid of the operator group for which the authorization should
          be deleted.
        in: path
        name: operatorGroupGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      - description: The Guid of the authorization that should be deleted.
        in: path
        name: authorizationGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      responses:
        "204":
          content: {}
          description: The request completed successfully. No content is returned.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: |-
            The requested vault section does not exist.
            or
            The requested vault section authorization does not exist.
          x-expectedSchemas:
          - description: The requested vault section does not exist.
            schema:
              $ref: '#/definitions/MessageList'
          - description: The requested vault section authorization does not exist.
            schema:
              $ref: '#/definitions/MessageList'
      security:
      - basicauth:
        - ""
      summary: Deletes the specified authorization for the specified operator group
      tags:
      - OperatorGroup
  /MonitorCheck:
    get:
      operationId: MonitorCheck_GetAccountMonitorChecks
      parameters:
      - description: Error level filter that should be applied. (default = NoError
          and above)
        in: query
        name: ErrorLevel
        schema:
          enum:
          - NoError
          - Unconfirmed
          - Confirmed
          nullable: false
          type: string
          x-schema:
            $ref: '#/definitions/ErrorLevelFilter'
        x-schema:
          $ref: '#/definitions/ErrorLevelFilter'
      - description: Show partial measurements from concurrent monitors
        in: query
        name: ShowPartialMeasurements
        schema:
          nullable: false
          type: boolean
      - description: A cursor value that should be used for traversing the dataset.
        in: query
        name: Cursor
        schema:
          nullable: true
          type: string
      - description: Sorting direction based on timestamp.
        in: query
        name: Sorting
        schema:
          default: Descending
          enum:
          - Ascending
          - Descending
          nullable: false
          type: string
          x-schema:
            $ref: '#/definitions/SortDirection'
        x-schema:
          $ref: '#/definitions/SortDirection'
      - description: The number of records to return (Max value = 100)
        in: query
        name: Take
        schema:
          default: 100
          format: int32
          maximum: 100.0
          minimum: 0.0
          nullable: false
          type: integer
      - description: The start of a custom period (can't be used together with the
          PresetPeriod parameter)
        in: query
        name: Start
        schema:
          format: date-time
          nullable: true
          type: string
      - description: The end of a custom period
        in: query
        name: End
        schema:
          format: date-time
          nullable: true
          type: string
      - description: The requested time period.
        in: query
        name: PresetPeriod
        schema:
          default: Last24Hours
          enum:
          - CurrentDay
          - CurrentWeek
          - CurrentMonth
          - CurrentYear
          - PreviousDay
          - PreviousWeek
          - PreviousMonth
          - PreviousYear
          - Last24Hours
          - Last48Hours
          - Last7Days
          - Last30Days
          - Last60Days
          - Last90Days
          - Last365Days
          - Last3Months
          - Last6Months
          - Last12Months
          - Last24Months
          - All
          nullable: true
          type: string
          x-schema:
            $ref: '#/definitions/PresetPeriodType'
        x-schema:
          $ref: '#/definitions/PresetPeriodType'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitorCheckResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/MonitorCheckResponse'
          description: The request completed successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
      security:
      - basicauth:
        - ""
      summary: Returns all monitor check data.
      tags:
      - MonitorCheck
  /MonitorCheck/{monitorCheckId}:
    get:
      operationId: MonitorCheck_GetSingleMonitorCheck
      parameters:
      - description: The Id of the monitor check to get the data for.
        in: path
        name: monitorCheckId
        required: true
        schema:
          format: int64
          nullable: false
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleMonitorCheckResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/SingleMonitorCheckResponse'
          description: The request completed successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
      security:
      - basicauth:
        - ""
      summary: Returns a single monitor check.
      tags:
      - MonitorCheck
  /MonitorCheck/Monitor/{monitorGuid}:
    get:
      operationId: MonitorCheck_GetMonitorCheck
      parameters:
      - description: The Guid of the monitor to get monitor checks for.
        in: path
        name: monitorGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      - description: Error level filter that should be applied. (default = NoError
          and above)
        in: query
        name: ErrorLevel
        schema:
          enum:
          - NoError
          - Unconfirmed
          - Confirmed
          nullable: false
          type: string
          x-schema:
            $ref: '#/definitions/ErrorLevelFilter'
        x-schema:
          $ref: '#/definitions/ErrorLevelFilter'
      - description: Show partial measurements from concurrent monitors
        in: query
        name: ShowPartialMeasurements
        schema:
          nullable: false
          type: boolean
      - description: A cursor value that should be used for traversing the dataset.
        in: query
        name: Cursor
        schema:
          nullable: true
          type: string
      - description: Sorting direction based on timestamp.
        in: query
        name: Sorting
        schema:
          default: Descending
          enum:
          - Ascending
          - Descending
          nullable: false
          type: string
          x-schema:
            $ref: '#/definitions/SortDirection'
        x-schema:
          $ref: '#/definitions/SortDirection'
      - description: The number of records to return (Max value = 100)
        in: query
        name: Take
        schema:
          default: 100
          format: int32
          maximum: 100.0
          minimum: 0.0
          nullable: false
          type: integer
      - description: The start of a custom period (can't be used together with the
          PresetPeriod parameter)
        in: query
        name: Start
        schema:
          format: date-time
          nullable: true
          type: string
      - description: The end of a custom period
        in: query
        name: End
        schema:
          format: date-time
          nullable: true
          type: string
      - description: The requested time period.
        in: query
        name: PresetPeriod
        schema:
          default: Last24Hours
          enum:
          - CurrentDay
          - CurrentWeek
          - CurrentMonth
          - CurrentYear
          - PreviousDay
          - PreviousWeek
          - PreviousMonth
          - PreviousYear
          - Last24Hours
          - Last48Hours
          - Last7Days
          - Last30Days
          - Last60Days
          - Last90Days
          - Last365Days
          - Last3Months
          - Last6Months
          - Last12Months
          - Last24Months
          - All
          nullable: true
          type: string
          x-schema:
            $ref: '#/definitions/PresetPeriodType'
        x-schema:
          $ref: '#/definitions/PresetPeriodType'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitorCheckResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/MonitorCheckResponse'
          description: The request completed successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
      security:
      - basicauth:
        - ""
      summary: Returns monitor check data for a specific monitor.
      tags:
      - MonitorCheck
  /MonitorCheck/MonitorGroup/{monitorGroupGuid}:
    get:
      operationId: MonitorCheck_GetMonitorGroupData
      parameters:
      - description: The Guid of the monitor group to get monitor checks for.
        in: path
        name: monitorGroupGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      - description: Error level filter that should be applied. (default = NoError
          and above)
        in: query
        name: ErrorLevel
        schema:
          enum:
          - NoError
          - Unconfirmed
          - Confirmed
          nullable: false
          type: string
          x-schema:
            $ref: '#/definitions/ErrorLevelFilter'
        x-schema:
          $ref: '#/definitions/ErrorLevelFilter'
      - description: Show partial measurements from concurrent monitors
        in: query
        name: ShowPartialMeasurements
        schema:
          nullable: false
          type: boolean
      - description: A cursor value that should be used for traversing the dataset.
        in: query
        name: Cursor
        schema:
          nullable: true
          type: string
      - description: Sorting direction based on timestamp.
        in: query
        name: Sorting
        schema:
          default: Descending
          enum:
          - Ascending
          - Descending
          nullable: false
          type: string
          x-schema:
            $ref: '#/definitions/SortDirection'
        x-schema:
          $ref: '#/definitions/SortDirection'
      - description: The number of records to return (Max value = 100)
        in: query
        name: Take
        schema:
          default: 100
          format: int32
          maximum: 100.0
          minimum: 0.0
          nullable: false
          type: integer
      - description: The start of a custom period (can't be used together with the
          PresetPeriod parameter)
        in: query
        name: Start
        schema:
          format: date-time
          nullable: true
          type: string
      - description: The end of a custom period
        in: query
        name: End
        schema:
          format: date-time
          nullable: true
          type: string
      - description: The requested time period.
        in: query
        name: PresetPeriod
        schema:
          default: Last24Hours
          enum:
          - CurrentDay
          - CurrentWeek
          - CurrentMonth
          - CurrentYear
          - PreviousDay
          - PreviousWeek
          - PreviousMonth
          - PreviousYear
          - Last24Hours
          - Last48Hours
          - Last7Days
          - Last30Days
          - Last60Days
          - Last90Days
          - Last365Days
          - Last3Months
          - Last6Months
          - Last12Months
          - Last24Months
          - All
          nullable: true
          type: string
          x-schema:
            $ref: '#/definitions/PresetPeriodType'
        x-schema:
          $ref: '#/definitions/PresetPeriodType'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitorCheckResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/MonitorCheckResponse'
          description: The request completed successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
      security:
      - basicauth:
        - ""
      summary: Returns monitor check data for a specific monitor group.
      tags:
      - MonitorCheck
  /MonitorCheck/{monitorCheckId}/Http:
    get:
      operationId: MonitorCheck_GetHttpDetails
      parameters:
      - description: The monitor check Id to get the detailed data for.
        in: path
        name: monitorCheckId
        required: true
        schema:
          format: int64
          nullable: false
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpDetailsResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/HttpDetailsResponse'
          description: The request completed successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
      security:
      - basicauth:
        - ""
      summary: Returns HTTP details for a monitor check.
      tags:
      - MonitorCheck
  /MonitorCheck/{monitorCheckId}/MultiStepAPI:
    get:
      operationId: MonitorCheck_GetMultistepDetails
      parameters:
      - description: The monitor check Id to get the detailed data for.
        in: path
        name: monitorCheckId
        required: true
        schema:
          format: int64
          nullable: false
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsaDetailsResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/MsaDetailsResponse'
          description: The request completed successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
      security:
      - basicauth:
        - ""
      summary: Returns Multi-Step API details for a monitor check.
      tags:
      - MonitorCheck
  /MonitorCheck/{monitorCheckId}/Transaction:
    get:
      operationId: MonitorCheck_GetTransactionDetails
      parameters:
      - description: The monitor check Id to get the detailed data for.
        in: path
        name: monitorCheckId
        required: true
        schema:
          format: int64
          nullable: false
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionDetailsResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/TransactionDetailsResponse'
          description: The request completed successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
      security:
      - basicauth:
        - ""
      summary: Returns transaction step details for a monitor check.
      tags:
      - MonitorCheck
  /MonitorCheck/{monitorCheckId}/Waterfall:
    get:
      operationId: MonitorCheck_GetWaterfallInfo
      parameters:
      - description: The monitor check Id to get the detailed data for.
        in: path
        name: monitorCheckId
        required: true
        schema:
          format: int64
          nullable: false
          type: integer
      - description: 'For transaction waterfalls only: the transaction step to get
          the waterfall for.'
        in: query
        name: step
        schema:
          format: int32
          nullable: true
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WaterfallResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/WaterfallResponse'
          description: The request completed successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
      security:
      - basicauth:
        - ""
      summary: Returns waterfall information for a monitor check.
      tags:
      - MonitorCheck
  /MonitorCheck/{monitorCheckId}/PageSource:
    get:
      operationId: MonitorCheck_GetPageSourceInfo
      parameters:
      - description: The monitor check Id to get the detailed data for.
        in: path
        name: monitorCheckId
        required: true
        schema:
          format: int64
          nullable: false
          type: integer
      - description: 'For transactions only: the transaction step to get the page
          source for.'
        in: query
        name: step
        schema:
          format: int32
          nullable: true
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WaterfallResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/WaterfallResponse'
          description: The request completed successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
      security:
      - basicauth:
        - ""
      summary: Returns page source information for a monitor check.
      tags:
      - MonitorCheck
  /MonitorCheck/{monitorCheckId}/ConsoleLog:
    get:
      operationId: MonitorCheck_GetConsoleLogInfo
      parameters:
      - description: The monitor check Id to get the detailed data for.
        in: path
        name: monitorCheckId
        required: true
        schema:
          format: int64
          nullable: false
          type: integer
      - description: 'For transactions only: the transaction step to get the console
          log for.'
        in: query
        name: step
        schema:
          format: int32
          nullable: true
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WaterfallResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/WaterfallResponse'
          description: The request completed successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
      security:
      - basicauth:
        - ""
      summary: Returns console log information for a monitor check.
      tags:
      - MonitorCheck
  /MonitorCheck/{monitorCheckId}/Screenshot/{screenshotId}:
    get:
      operationId: MonitorCheck_GetScreenshots
      parameters:
      - description: The monitor check Id to get the screenshot data for.
        in: path
        name: monitorCheckId
        required: true
        schema:
          format: int64
          nullable: false
          type: integer
      - description: The screenshot Id of the screenshot to get.
        in: path
        name: screenshotId
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScreenshotResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ScreenshotResponse'
          description: The request completed successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
      security:
      - basicauth:
        - ""
      summary: Gets a specific screenshot for a specified monitor check
      tags:
      - MonitorCheck
  /MonitorCheck/{monitorCheckId}/Concurrent:
    get:
      operationId: MonitorCheck_GetConcurrentMonitorPartialChecks
      parameters:
      - description: The monitor check Id to get the partial checks for.
        in: path
        name: monitorCheckId
        required: true
        schema:
          format: int64
          nullable: false
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitorCheckResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/MonitorCheckResponse'
          description: The request completed successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
      security:
      - basicauth:
        - ""
      summary: Gets all partial checks for a concurrent monitor check
      tags:
      - MonitorCheck
  /Monitor:
    get:
      operationId: Monitor_GetMonitors
      parameters:
      - description: Provide the option to only retrieve the requested fields. E.g.
          "Name,IsActive".
        in: query
        name: filter
        schema:
          nullable: true
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Monitor'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Monitor'
                type: array
          description: The request completed successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The specified monitor does not exist.
      security:
      - basicauth:
        - ""
      summary: Returns the definition of all monitors available in the account.
      tags:
      - Monitor
    post:
      operationId: Monitor_PostMonitor
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Monitor'
          application/xml:
            schema:
              $ref: '#/components/schemas/Monitor'
        description: The complete definition of the monitor that should be created.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Monitor'
            application/xml:
              schema:
                $ref: '#/components/schemas/Monitor'
          description: The request completed successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
      security:
      - basicauth:
        - ""
      summary: Creates a new monitor.
      tags:
      - Monitor
      x-codegen-request-body-name: monitor
  /Monitor/MonitorGroup/{monitorGroupGuid}:
    get:
      operationId: Monitor_GetMonitorsByMonitorGroup
      parameters:
      - description: The Guid of the requested monitor group to retrieve the monitors
          of.
        in: path
        name: monitorGroupGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      - description: Provide the option to only retrieve the requested fields. E.g.
          "Name,IsActive".
        in: query
        name: filter
        schema:
          nullable: true
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Monitor'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Monitor'
                type: array
          description: The request completed successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The specified monitor does not exist.
      security:
      - basicauth:
        - ""
      summary: Returns the definition of all monitors available in the account that
        are a member of the specified monitor group.
      tags:
      - Monitor
  /Monitor/{monitorGuid}:
    delete:
      operationId: Monitor_DeleteMonitor
      parameters:
      - description: The guid of the monitor you want to delete.
        in: path
        name: monitorGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      responses:
        "204":
          content: {}
          description: The request completed successfully. No content is returned.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The specified monitor does not exist.
      security:
      - basicauth:
        - ""
      summary: Deletes the specified monitor.
      tags:
      - Monitor
    get:
      operationId: Monitor_GetMonitor
      parameters:
      - description: The Guid of the requested monitor.
        in: path
        name: monitorGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      - description: Provide the option to only retrieve the requested fields. E.g.
          "Name,IsActive".
        in: query
        name: filter
        schema:
          nullable: true
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Monitor'
            application/xml:
              schema:
                $ref: '#/components/schemas/Monitor'
          description: The request completed successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The specified monitor does not exist.
      security:
      - basicauth:
        - ""
      summary: 'Returns the definition of the specified monitor. '
      tags:
      - Monitor
    patch:
      description: This methods accepts parts of a monitor definition. We recommend
        retrieving the existing definition first (using the GET method). You can then
        process the changes you want to make and send back these changes only using
        this PATCH method.
      operationId: Monitor_PatchMonitor
      parameters:
      - description: The Guid of the monitor that should be updated.
        in: path
        name: monitorGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Monitor'
          application/xml:
            schema:
              $ref: '#/components/schemas/Monitor'
        description: The partial definition for the monitor that should be updated.
        required: true
      responses:
        "204":
          content: {}
          description: The request was successful. No content is returned.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The specified monitor does not exist.
      security:
      - basicauth:
        - ""
      summary: Partially updates the definition of the specified monitor.
      tags:
      - Monitor
      x-codegen-request-body-name: monitor
    put:
      description: This methods only accepts a complete monitor definition. We recommend
        retrieving the existing definition first (using the GET method). You can then
        process the changes you want to make and send back the updated definition
        using this PUT method.
      operationId: Monitor_PutMonitor
      parameters:
      - description: The Guid of the monitor that should be updated.
        in: path
        name: monitorGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Monitor'
          application/xml:
            schema:
              $ref: '#/components/schemas/Monitor'
        description: The complete definition for the monitor that should be updated.
        required: true
      responses:
        "204":
          content: {}
          description: The request was successful. No content is returned.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The specified monitor does not exist.
      security:
      - basicauth:
        - ""
      summary: Updates the definition of the specified monitor.
      tags:
      - Monitor
      x-codegen-request-body-name: monitor
  /Monitor/{monitorGuid}/MonitorGroup:
    get:
      operationId: Monitor_GetMonitorGroups
      parameters:
      - description: The Guid of the requested monitor.
        in: path
        name: monitorGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Monitor'
            application/xml:
              schema:
                $ref: '#/components/schemas/Monitor'
          description: The request completed successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The specified monitor does not exist.
      security:
      - basicauth:
        - ""
      summary: 'Returns the Guid of each monitor group where the specified monitor
        is a member of. '
      tags:
      - Monitor
  /Monitor/{monitorGuid}/Clone:
    post:
      description: Upon creation, the new monitor will be inactive. This allows you
        to make the necessary changes before you activate it. All other settings will
        be transferred to the new monitor as-is.
      operationId: Monitor_CloneMonitor
      parameters:
      - description: The guid of the monitor you want to clone.
        in: path
        name: monitorGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      - description: Whether or not to also copy the maintenance periods into the
          clone.
        in: query
        name: includeMaintenancePeriods
        schema:
          default: true
          nullable: false
          type: boolean
      - description: Whether or not to also copy the monitor group memberships into
          the clone.
        in: query
        name: includeMonitorGroups
        schema:
          default: true
          nullable: false
          type: boolean
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Monitor'
            application/xml:
              schema:
                $ref: '#/components/schemas/Monitor'
          description: The request completed successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The specified monitor does not exist.
      security:
      - basicauth:
        - ""
      summary: Creates a clone (duplicate) of the specified monitor.
      tags:
      - Monitor
  /Monitor/{monitorGuid}/MaintenancePeriod:
    get:
      operationId: Monitor_GetAllMaintenancePeriodsForMonitor
      parameters:
      - description: The guid of the monitor you want to find the maintenance periods
          of.
        in: path
        name: monitorGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MaintenancePeriod'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/MaintenancePeriod'
                type: array
          description: The request completed successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The specified monitor does not exist.
      security:
      - basicauth:
        - ""
      summary: Finds all maintenance periods for a monitor.
      tags:
      - Monitor
    post:
      operationId: Monitor_CreateMaintenancePeriodForMonitor
      parameters:
      - in: path
        name: monitorGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MaintenancePeriod'
          application/xml:
            schema:
              $ref: '#/components/schemas/MaintenancePeriod'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaintenancePeriod'
            application/xml:
              schema:
                $ref: '#/components/schemas/MaintenancePeriod'
          description: The request completed successfully. No content is returned.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The specified monitor does not exist.
      security:
      - basicauth:
        - ""
      summary: Saves the new maintenance period provided for the specified monitor
      tags:
      - Monitor
      x-codegen-request-body-name: maintenancePeriod
  /Monitor/{monitorGuid}/MaintenancePeriod/{maintenancePeriodId}:
    delete:
      operationId: Monitor_DeleteMaintenancePeriodFromMonitor
      parameters:
      - in: path
        name: monitorGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      - in: path
        name: maintenancePeriodId
        required: true
        schema:
          format: int32
          nullable: false
          type: integer
      responses:
        "204":
          content: {}
          description: The request completed successfully. No content is returned.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The specified monitor or maintenance period does not exist.
      security:
      - basicauth:
        - ""
      summary: Deletes the specified maintenance period from the specified monitor
      tags:
      - Monitor
    put:
      operationId: Monitor_UpdateMaintenancePeriodForMonitor
      parameters:
      - in: path
        name: monitorGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      - in: path
        name: maintenancePeriodId
        required: true
        schema:
          format: int32
          nullable: false
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MaintenancePeriod'
          application/xml:
            schema:
              $ref: '#/components/schemas/MaintenancePeriod'
        required: true
      responses:
        "204":
          content: {}
          description: The request completed successfully. No content is returned.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The specified monitor or maintenanceperiod does not exist.
      security:
      - basicauth:
        - ""
      summary: Updates the specified maintenance schedule for the specified monitor
      tags:
      - Monitor
      x-codegen-request-body-name: maintenancePeriod
  /Monitor/{monitorGuid}/MaintenancePeriod/Cleanup/{beforeDate}:
    post:
      operationId: Monitor_CleanupMaintenancePeriods
      parameters:
      - in: path
        name: monitorGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      - description: A string representing the date, formatted as "yyyy-MM-dd"
        in: path
        name: beforeDate
        required: true
        schema:
          format: date-time
          nullable: false
          type: string
      responses:
        "204":
          content: {}
          description: The request completed successfully. No content is returned.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The specified monitor does not exist.
      security:
      - basicauth:
        - ""
      summary: Clears out all one-time maintenance periods for the specified monitor
        older than the specified date
      tags:
      - Monitor
  /Register:
    post:
      description: This method requires that you specify the username and password
        of an Uptrends operator login as authentication. When registration is successful,
        please save the UserName and Password fields from the response; these are
        your new API credentials.
      operationId: Register_Post
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegistrationResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/RegistrationResponse'
          description: If you get this response, a new API account was created successfully.
      security:
      - user-basicauth:
        - ""
      summary: Creates a new API account.
      tags:
      - Register
  /VaultItem:
    get:
      operationId: Vault_GetAllVaultItems
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/VaultItem'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/VaultItem'
                type: array
          description: The request completed successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
      security:
      - basicauth:
        - ""
      summary: Returns all vault items.
      tags:
      - Vault
    post:
      description: The VaultItemGuid field should be omitted
      operationId: Vault_CreateNewVaultItem
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VaultItem'
          application/xml:
            schema:
              $ref: '#/components/schemas/VaultItem'
        description: The item to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VaultItem'
            application/xml:
              schema:
                $ref: '#/components/schemas/VaultItem'
          description: The request completed successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
      security:
      - basicauth:
        - ""
      summary: Creates a new vault item.
      tags:
      - Vault
      x-codegen-request-body-name: item
  /VaultItem/{vaultItemGuid}:
    delete:
      operationId: Vault_DeleteVaultItem
      parameters:
      - description: The Guid of the vault item that should be deleted.
        in: path
        name: vaultItemGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      responses:
        "204":
          content: {}
          description: The request completed successfully. No content is returned.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The requested vault item does not exist.
      security:
      - basicauth:
        - ""
      summary: Deletes the specified vault item.
      tags:
      - Vault
    get:
      operationId: Vault_GetVaultItem
      parameters:
      - description: The Guid of the requested vault item.
        in: path
        name: vaultItemGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VaultItem'
            application/xml:
              schema:
                $ref: '#/components/schemas/VaultItem'
          description: The request completed successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The requested vault item does not exist.
      security:
      - basicauth:
        - ""
      summary: Returns the specified vault item.
      tags:
      - Vault
    patch:
      description: The vault item type cannot be changed with this operation.
      operationId: Vault_PartiallyUpdateVaultItem
      parameters:
      - description: The Guid of the vault item that should be updated.
        in: path
        name: vaultItemGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VaultItem'
          application/xml:
            schema:
              $ref: '#/components/schemas/VaultItem'
        description: Part of the definition of the vault item that should be updated.
        required: true
      responses:
        "204":
          content: {}
          description: The request completed successfully. No content is returned.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The requested vault item does not exist.
      security:
      - basicauth:
        - ""
      summary: Partially updates the specified vault item.
      tags:
      - Vault
      x-codegen-request-body-name: item
    put:
      description: Only complete definitions are accepted. Fields not specified will
        be NULLed.
      operationId: Vault_UpdateVaultItem
      parameters:
      - description: The Guid of the vault item that should be updated.
        in: path
        name: vaultItemGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VaultItem'
          application/xml:
            schema:
              $ref: '#/components/schemas/VaultItem'
        description: The complete definition of the vault item that should be updated.
        required: true
      responses:
        "204":
          content: {}
          description: The request completed successfully. No content is returned.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The requested vault item does not exist.
      security:
      - basicauth:
        - ""
      summary: Updates the specified vault item.
      tags:
      - Vault
      x-codegen-request-body-name: item
  /VaultSection:
    get:
      operationId: Vault_GetAllVaultSections
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/VaultSection'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/VaultSection'
                type: array
          description: The request completed successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
      security:
      - basicauth:
        - ""
      summary: Returns all vault sections.
      tags:
      - Vault
    post:
      description: When a new vault section is created, the user that created the
        section is granted View and Edit authorizations to that section. The VaultSectionGuid
        attribute should be omitted in the request body. The Guid of the newly created
        section will be returned in the response.
      operationId: Vault_CreateNewVaultSection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VaultSection'
          application/xml:
            schema:
              $ref: '#/components/schemas/VaultSection'
        description: The attributes of the vault section that should be created.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VaultSection'
            application/xml:
              schema:
                $ref: '#/components/schemas/VaultSection'
          description: The request completed successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
      security:
      - basicauth:
        - ""
      summary: Creates a new vault section.
      tags:
      - Vault
      x-codegen-request-body-name: section
  /VaultSection/{vaultSectionGuid}:
    delete:
      operationId: Vault_DeleteVaultSection
      parameters:
      - description: The Guid of the vault section that should be deleted.
        in: path
        name: vaultSectionGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      responses:
        "204":
          content: {}
          description: The request completed successfully. No content is returned.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The requested vault section does not exist.
      security:
      - basicauth:
        - ""
      summary: Deletes the specified vault section.
      tags:
      - Vault
    get:
      operationId: Vault_GetVaultSection
      parameters:
      - description: The Guid of the requested vault section.
        in: path
        name: vaultSectionGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VaultSection'
            application/xml:
              schema:
                $ref: '#/components/schemas/VaultSection'
          description: The request completed successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The requested vault section does not exist.
      security:
      - basicauth:
        - ""
      summary: Returns the specified vault section.
      tags:
      - Vault
    put:
      operationId: Vault_UpdateVaultSection
      parameters:
      - description: The Guid of the vault section that should be updated.
        in: path
        name: vaultSectionGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VaultSection'
          application/xml:
            schema:
              $ref: '#/components/schemas/VaultSection'
        required: true
      responses:
        "204":
          content: {}
          description: The request completed successfully. No content is returned
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The requested vault section does not exist.
      security:
      - basicauth:
        - ""
      summary: Updates the specified vault section.
      tags:
      - Vault
      x-codegen-request-body-name: item
  /VaultSection/{vaultSectionGuid}/Authorization:
    get:
      operationId: Vault_GetAuthorizationsForVaultSection
      parameters:
      - description: The Guid of the vault section for which to return authorizations.
        in: path
        name: vaultSectionGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VaultSectionAuthorization'
            application/xml:
              schema:
                $ref: '#/components/schemas/VaultSectionAuthorization'
          description: The request completed successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The requested vault section does not exist.
      security:
      - basicauth:
        - ""
      summary: Returns all authorizations for the specified vault section.
      tags:
      - Vault
    post:
      description: The AuthorizationId attribute should be omitted in the request
        body. The newly created authorization will be returned in the response. An
        authorization should be granted to either an individual operator, or an operator
        group. Therefore, either specify the OperatorGuid attribute or the OperatorGroupGuid
        attribute.
      operationId: Vault_CreateAuthorizationForVaultSection
      parameters:
      - description: The Guid of the vault section for which to create the new authorization.
        in: path
        name: vaultSectionGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VaultSectionAuthorization'
          application/xml:
            schema:
              $ref: '#/components/schemas/VaultSectionAuthorization'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VaultSectionAuthorization'
            application/xml:
              schema:
                $ref: '#/components/schemas/VaultSectionAuthorization'
          description: The request completed successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The requested vault section does not exist.
      security:
      - basicauth:
        - ""
      summary: 'Creates a new authorization for the specified vault section. '
      tags:
      - Vault
      x-codegen-request-body-name: authorization
  /VaultSection/{vaultSectionGuid}/Authorization/{authorizationGuid}:
    delete:
      operationId: Vault_DeleteAuthorizationForVaultSection
      parameters:
      - description: The Guid of the vault section for which the authorization should
          be deleted.
        in: path
        name: vaultSectionGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      - description: The Guid of the authorization that should be deleted.
        in: path
        name: authorizationGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      responses:
        "204":
          content: {}
          description: The request completed successfully. No content is returned.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: The request failed.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageList'
            application/xml:
              schema:
                $ref: '#/components/schemas/MessageList'
          description: |-
            The requested vault section does not exist.
            or
            The requested vault section authorization does not exist.
          x-expectedSchemas:
          - description: The requested vault section does not exist.
            schema:
              $ref: '#/definitions/MessageList'
          - description: The requested vault section authorization does not exist.
            schema:
              $ref: '#/definitions/MessageList'
      security:
      - basicauth:
        - ""
      summary: 'Deletes the specified authorization for the specified vault section. '
      tags:
      - Vault
components:
  schemas:
    AccountStatistics:
      example:
        OperatorQuota:
          Operators: 4
          OperatorsInUse: 7
        AccountId: AccountId
        ExpirationDate: 2000-01-23T04:56:07.000+00:00
        MonitorQuota:
          ApiMonitoringCreditsInUse: 2
          TransactionCredits: 7
          TransactionCreditsInUse: 9
          BrowserMonitors: 1
          Monitors: 3
          ApiMonitoringCredits: 5
          BasicMonitors: 0
          BasicMonitorsInUse: 6
          MonitorsInUse: 2
          BrowserMonitorsInUse: 5
        RemainingMessageCredits: 1
      properties:
        AccountId:
          type: string
        ExpirationDate:
          format: date-time
          type: string
        MonitorQuota:
          $ref: '#/components/schemas/MonitorQuota'
        OperatorQuota:
          $ref: '#/components/schemas/OperatorQuota'
        RemainingMessageCredits:
          format: int32
          type: integer
      type: object
    MonitorQuota:
      example:
        ApiMonitoringCreditsInUse: 2
        TransactionCredits: 7
        TransactionCreditsInUse: 9
        BrowserMonitors: 1
        Monitors: 3
        ApiMonitoringCredits: 5
        BasicMonitors: 0
        BasicMonitorsInUse: 6
        MonitorsInUse: 2
        BrowserMonitorsInUse: 5
      properties:
        BasicMonitors:
          format: int32
          type: integer
        BasicMonitorsInUse:
          format: int32
          type: integer
        BrowserMonitors:
          format: int32
          type: integer
        BrowserMonitorsInUse:
          format: int32
          type: integer
        ApiMonitoringCredits:
          format: int32
          type: integer
        ApiMonitoringCreditsInUse:
          format: int32
          type: integer
        TransactionCredits:
          format: int32
          type: integer
        TransactionCreditsInUse:
          format: int32
          type: integer
        Monitors:
          format: int32
          type: integer
        MonitorsInUse:
          format: int32
          type: integer
      type: object
    OperatorQuota:
      example:
        Operators: 4
        OperatorsInUse: 7
      properties:
        Operators:
          format: int32
          type: integer
        OperatorsInUse:
          format: int32
          type: integer
      type: object
    MessageList:
      properties:
        Messages:
          items:
            $ref: '#/components/schemas/MessageInfo'
          type: array
      type: object
    MessageInfo:
      properties:
        Message:
          type: string
      type: object
    CheckpointRegion:
      example:
        Id: 0
        ChildRegions:
        - 6
        - 6
        Name: Name
      properties:
        Id:
          type: integer
        Name:
          type: string
        ChildRegions:
          items:
            type: integer
          type: array
      required:
      - Id
      type: object
    Checkpoint:
      description: Checkpoint
      example:
        Ipv4Addresses:
        - Ipv4Addresses
        - Ipv4Addresses
        CheckpointId: 0
        IsPrimaryCheckpoint: true
        SupportsIpv6: true
        Ipv6Addresses:
        - IsNative: true
          IpAddress: IpAddress
        - IsNative: true
          IpAddress: IpAddress
        CheckpointName: CheckpointName
        Code: Code
        HasHighAvailability: true
      properties:
        CheckpointId:
          description: The Id of the checkpoint
          type: integer
        CheckpointName:
          description: The name of the checkpoint
          type: string
        Code:
          description: The location code of the checkpoint
          type: string
        Ipv4Addresses:
          description: 'The IPv4 addresses of the checkpoint '
          items:
            type: string
          type: array
        Ipv6Addresses:
          description: The IPv6 addresses of the checkpoint
          items:
            $ref: '#/components/schemas/Ipv6Address'
          type: array
        IsPrimaryCheckpoint:
          description: Checkpoint is primary
          type: boolean
        SupportsIpv6:
          description: Checkpoint supports IPv6
          type: boolean
        HasHighAvailability:
          description: Checkpoint has high availability
          type: boolean
      required:
      - CheckpointId
      - HasHighAvailability
      - IsPrimaryCheckpoint
      - SupportsIpv6
      type: object
    Ipv6Address:
      description: Ipv6 address
      example:
        IsNative: true
        IpAddress: IpAddress
      properties:
        IpAddress:
          description: The IPv6 address
          type: string
        IsNative:
          description: This indicates whether this is a native IPv6 address
          type: boolean
      required:
      - IsNative
      type: object
    Dashboard:
      example:
        DashboardGuid: DashboardGuid
        DashboardFilter:
          SelectedPeriod:
            SelectedPeriodType: '{}'
            PresetPeriod: '{}'
            Start: 2000-01-23T04:56:07.000+00:00
            End: 2000-01-23T04:56:07.000+00:00
          Checkpoints:
          - 0
          - 0
          Monitors:
          - Monitors
          - Monitors
          MonitorGroups:
          - MonitorGroups
          - MonitorGroups
        AutoRefresh: true
        Name: Name
      properties:
        DashboardGuid:
          format: guid
          type: string
        Name:
          type: string
        DashboardFilter:
          $ref: '#/components/schemas/DashboardFilter'
        AutoRefresh:
          type: boolean
      type: object
    DashboardFilter:
      example:
        SelectedPeriod:
          SelectedPeriodType: '{}'
          PresetPeriod: '{}'
          Start: 2000-01-23T04:56:07.000+00:00
          End: 2000-01-23T04:56:07.000+00:00
        Checkpoints:
        - 0
        - 0
        Monitors:
        - Monitors
        - Monitors
        MonitorGroups:
        - MonitorGroups
        - MonitorGroups
      properties:
        SelectedPeriod:
          $ref: '#/components/schemas/SelectedPeriod'
        Monitors:
          items:
            format: guid
            type: string
          type: array
        MonitorGroups:
          items:
            format: guid
            type: string
          type: array
        Checkpoints:
          items:
            type: integer
          type: array
      type: object
    SelectedPeriod:
      example:
        SelectedPeriodType: '{}'
        PresetPeriod: '{}'
        Start: 2000-01-23T04:56:07.000+00:00
        End: 2000-01-23T04:56:07.000+00:00
      properties:
        SelectedPeriodType:
          allOf:
          - $ref: '#/components/schemas/SelectedPeriodType'
          description: The type of period
          type: object
        Start:
          description: The start of a custom period (can't be used together with the
            SelectedPeriodType parameter)
          format: date-time
          type: string
        End:
          description: The end of a custom period
          format: date-time
          type: string
        PresetPeriod:
          allOf:
          - $ref: '#/components/schemas/PresetPeriodType'
          description: The requested time period.
          type: object
      type: object
    SelectedPeriodType:
      description: ""
      enum:
      - PresetPeriod
      - SpecificDates
      type: string
      x-enumNames:
      - PresetPeriod
      - SpecificDates
    PresetPeriodType:
      description: ""
      enum:
      - CurrentDay
      - CurrentWeek
      - CurrentMonth
      - CurrentYear
      - PreviousDay
      - PreviousWeek
      - PreviousMonth
      - PreviousYear
      - Last24Hours
      - Last48Hours
      - Last7Days
      - Last30Days
      - Last60Days
      - Last90Days
      - Last365Days
      - Last3Months
      - Last6Months
      - Last12Months
      - Last24Months
      - All
      type: string
      x-enumNames:
      - CurrentDay
      - CurrentWeek
      - CurrentMonth
      - CurrentYear
      - PreviousDay
      - PreviousWeek
      - PreviousMonth
      - PreviousYear
      - Last24Hours
      - Last48Hours
      - Last7Days
      - Last30Days
      - Last60Days
      - Last90Days
      - Last365Days
      - Last3Months
      - Last6Months
      - Last12Months
      - Last24Months
      - All
    PublicStatusPage:
      example:
        MonitorGroupGuids:
        - MonitorGroupGuids
        - MonitorGroupGuids
        SlaGuidSpecified: true
        IsPublished: true
        SlaGuid: SlaGuid
        MonitorGuids:
        - MonitorGuids
        - MonitorGuids
        CustomizationInfo:
          TitleText: TitleText
          MainColor: MainColor
          FooterText: FooterText
          SortColumnsNewToOld: true
          CommentText: CommentText
          TextColor: TextColor
          CommentTitle: CommentTitle
          BackgroundColor: BackgroundColor
        PublicDashboardGuid: PublicDashboardGuid
        Name: Name
      properties:
        PublicDashboardGuid:
          format: guid
          type: string
        Name:
          type: string
        IsPublished:
          type: boolean
        PresetPeriodType:
          $ref: '#/components/schemas/PresetPeriodType'
        CustomizationInfo:
          $ref: '#/components/schemas/CustomizationInfo'
        SlaGuid:
          format: guid
          type: string
        SlaGuidSpecified:
          type: boolean
        MonitorGuids:
          items:
            format: guid
            type: string
          type: array
        MonitorGroupGuids:
          items:
            format: guid
            type: string
          type: array
      type: object
    CustomizationInfo:
      example:
        TitleText: TitleText
        MainColor: MainColor
        FooterText: FooterText
        SortColumnsNewToOld: true
        CommentText: CommentText
        TextColor: TextColor
        CommentTitle: CommentTitle
        BackgroundColor: BackgroundColor
      properties:
        MainColor:
          type: string
        BackgroundColor:
          type: string
        TextColor:
          type: string
        TitleText:
          type: string
        FooterText:
          type: string
        SortColumnsNewToOld:
          type: boolean
        SortRowsProperty:
          $ref: '#/components/schemas/SortOrderEnum'
        CommentTitle:
          type: string
        CommentText:
          type: string
      required:
      - SortColumnsNewToOld
      - SortRowsProperty
      type: object
    SortOrderEnum:
      description: ""
      enum:
      - Alphabetical
      - ByStatus
      type: string
      x-enumNames:
      - Alphabetical
      - ByStatus
    PSPAuthorization:
      example:
        AuthorizationId: AuthorizationId
        OperatorGuid: OperatorGuid
        OperatorGroupGuid: OperatorGroupGuid
      properties:
        AuthorizationId:
          format: guid
          type: string
        AuthorizationType:
          $ref: '#/components/schemas/PSPAuthorizationType'
        OperatorGuid:
          format: guid
          type: string
        OperatorGroupGuid:
          format: guid
          type: string
      required:
      - AuthorizationType
      type: object
    PSPAuthorizationType:
      description: ""
      enum:
      - ViewPublicDashboard
      type: string
      x-enumNames:
      - ViewPublicDashboard
    ScheduledReport:
      example:
        DashboardGuid: DashboardGuid
        DashboardGuidSpecified: true
        Recipients:
          Operators:
          - Operators
          - Operators
          OperatorGroups:
          - OperatorGroups
          - OperatorGroups
          ExtraEmailAddresses:
          - ExtraEmailAddresses
          - ExtraEmailAddresses
        IsActive: true
        Schedule:
          Time: Time
          MonthDay: 0
        InternalNotes: InternalNotes
        ScheduledReportGuid: ScheduledReportGuid
        Hash: Hash
        Notes: Notes
      properties:
        ScheduledReportGuid:
          format: guid
          type: string
        Hash:
          type: string
        DashboardGuid:
          format: guid
          type: string
        DashboardGuidSpecified:
          type: boolean
        FileType:
          $ref: '#/components/schemas/ScheduledReportFileType'
        IsActive:
          type: boolean
        Schedule:
          $ref: '#/components/schemas/Schedule'
        SelectedPeriod:
          $ref: '#/components/schemas/PresetPeriodTypeWithExclusive'
        InternalNotes:
          type: string
        Notes:
          type: string
        Recipients:
          $ref: '#/components/schemas/Recipients'
      type: object
    ScheduledReportFileType:
      description: ""
      enum:
      - PDF
      - Excel
      - Html
      type: string
      x-enumNames:
      - PDF
      - Excel
      - Html
    Schedule:
      example:
        Time: Time
        MonthDay: 0
      properties:
        ScheduleType:
          $ref: '#/components/schemas/ScheduleType'
        Time:
          format: time-span
          type: string
        WeekDay:
          $ref: '#/components/schemas/DayOfWeek'
        MonthDay:
          format: int32
          type: integer
      type: object
    ScheduleType:
      description: ""
      enum:
      - Daily
      - Weekly
      - Monthly
      type: string
      x-enumNames:
      - Daily
      - Weekly
      - Monthly
    DayOfWeek:
      description: ""
      enum:
      - Sunday
      - Monday
      - Tuesday
      - Wednesday
      - Thursday
      - Friday
      - Saturday
      type: string
      x-enumNames:
      - Sunday
      - Monday
      - Tuesday
      - Wednesday
      - Thursday
      - Friday
      - Saturday
    PresetPeriodTypeWithExclusive:
      description: ""
      enum:
      - CurrentDay
      - CurrentWeek
      - CurrentMonth
      - CurrentYear
      - PreviousDay
      - PreviousWeek
      - PreviousMonth
      - PreviousYear
      - Last24Hours
      - Last48Hours
      - Last7Days
      - Last30Days
      - Last60Days
      - Last90Days
      - Last365Days
      - Last3Months
      - Last6Months
      - Last12Months
      - Last24Months
      - Last24HoursExcl
      - Last48HoursExcl
      - Last7DaysExcl
      - Last30DaysExcl
      - Last60DaysExcl
      - Last90DaysExcl
      - Last365DaysExcl
      - Last3MonthsExcl
      - Last6MonthsExcl
      - Last12MonthsExcl
      - Last24MonthsExcl
      - All
      type: string
      x-enumNames:
      - CurrentDay
      - CurrentWeek
      - CurrentMonth
      - CurrentYear
      - PreviousDay
      - PreviousWeek
      - PreviousMonth
      - PreviousYear
      - Last24Hours
      - Last48Hours
      - Last7Days
      - Last30Days
      - Last60Days
      - Last90Days
      - Last365Days
      - Last3Months
      - Last6Months
      - Last12Months
      - Last24Months
      - Last24HoursExcl
      - Last48HoursExcl
      - Last7DaysExcl
      - Last30DaysExcl
      - Last60DaysExcl
      - Last90DaysExcl
      - Last365DaysExcl
      - Last3MonthsExcl
      - Last6MonthsExcl
      - Last12MonthsExcl
      - Last24MonthsExcl
      - All
    Recipients:
      example:
        Operators:
        - Operators
        - Operators
        OperatorGroups:
        - OperatorGroups
        - OperatorGroups
        ExtraEmailAddresses:
        - ExtraEmailAddresses
        - ExtraEmailAddresses
      properties:
        Operators:
          items:
            format: guid
            type: string
          type: array
        OperatorGroups:
          items:
            format: guid
            type: string
          type: array
        ExtraEmailAddresses:
          items:
            type: string
          type: array
      type: object
    Sla:
      example:
        Description: Description
        UptimeWarningThreshold: 6.027456183070403
        OperatorReponseTimeThreshold: 5
        SlaGuid: SlaGuid
        Hash: Hash
        UptimeErrorThreshold: 0.8008281904610115
        LoadTimeErrorThreshold: 1.4658129805029452
      properties:
        SlaGuid:
          description: The unique key of this sla.
          format: guid
          type: string
        Hash:
          description: Hash corresponding with this sla.
          type: string
        Description:
          description: The description name of this sla.
          type: string
        UptimeErrorThreshold:
          format: double
          type: number
        UptimeWarningThreshold:
          format: double
          type: number
        LoadTimeErrorThreshold:
          format: double
          type: number
        OperatorReponseTimeThreshold:
          format: int32
          type: integer
      type: object
    ExclusionPeriod:
      example:
        Description: Description
        From: 2000-01-23T04:56:07.000+00:00
        Hash: Hash
        ExclusionPeriodId: 0
        Until: 2000-01-23T04:56:07.000+00:00
      properties:
        ExclusionPeriodId:
          format: int32
          type: integer
        Description:
          type: string
        From:
          format: date-time
          type: string
        Until:
          format: date-time
          type: string
        Hash:
          type: string
      type: object
    StatisticsResponse:
      example:
        Meta:
          Period:
            Warning: Warning
            MaximumRetentionDays: 1
          Timestamp: 2000-01-23T04:56:07.000+00:00
        Relationships:
        - Type: Type
          Relationships:
          - null
          - null
          Attributes: '{}'
          Links:
            key: Links
          Id: '{}'
        - Type: Type
          Relationships:
          - null
          - null
          Attributes: '{}'
          Links:
            key: Links
          Id: '{}'
        Links:
          Next: Next
          Self: Self
        Data:
        - Type: Type
          Relationships:
          - Type: Type
            Relationships:
            - null
            - null
            Attributes: '{}'
            Links:
              key: Links
            Id: '{}'
          - Type: Type
            Relationships:
            - null
            - null
            Attributes: '{}'
            Links:
              key: Links
            Id: '{}'
          Attributes:
            OperatorResponseTarget: 5.962133916683182
            UnconfirmedErrors: 2
            Uptime: 4
            OperatorResponseTime: 5.637376656633329
            UptimePercentage: 7.061401241503109
            StartDateTime: 2000-01-23T04:56:07.000+00:00
            DownloadTime: 6.84685269835264
            EndDateTime: 2000-01-23T04:56:07.000+00:00
            Checks: 9
            ResolveTime: 1.0246457001441578
            SlaTarget: 6.027456183070403
            Downtime: 7
            ConnectionTime: 1.4894159098541704
            TotalBytes: 7
            TotalTime: 1.2315135367772556
            SlaTargetTotalTime: 1.4658129805029452
            Alerts: 0
            ConfirmedErrors: 3
            DowntimePercentage: 2.3021358869347655
          Links:
            key: Links
          Id: Id
        - Type: Type
          Relationships:
          - Type: Type
            Relationships:
            - null
            - null
            Attributes: '{}'
            Links:
              key: Links
            Id: '{}'
          - Type: Type
            Relationships:
            - null
            - null
            Attributes: '{}'
            Links:
              key: Links
            Id: '{}'
          Attributes:
            OperatorResponseTarget: 5.962133916683182
            UnconfirmedErrors: 2
            Uptime: 4
            OperatorResponseTime: 5.637376656633329
            UptimePercentage: 7.061401241503109
            StartDateTime: 2000-01-23T04:56:07.000+00:00
            DownloadTime: 6.84685269835264
            EndDateTime: 2000-01-23T04:56:07.000+00:00
            Checks: 9
            ResolveTime: 1.0246457001441578
            SlaTarget: 6.027456183070403
            Downtime: 7
            ConnectionTime: 1.4894159098541704
            TotalBytes: 7
            TotalTime: 1.2315135367772556
            SlaTargetTotalTime: 1.4658129805029452
            Alerts: 0
            ConfirmedErrors: 3
            DowntimePercentage: 2.3021358869347655
          Links:
            key: Links
          Id: Id
      properties:
        Data:
          items:
            $ref: '#/components/schemas/Statistics'
          type: array
        Links:
          $ref: '#/components/schemas/LinksData'
        Relationships:
          items:
            $ref: '#/components/schemas/RelationObject'
          type: array
        Meta:
          $ref: '#/components/schemas/MetaData'
      type: object
    Statistics:
      example:
        Type: Type
        Relationships:
        - Type: Type
          Relationships:
          - null
          - null
          Attributes: '{}'
          Links:
            key: Links
          Id: '{}'
        - Type: Type
          Relationships:
          - null
          - null
          Attributes: '{}'
          Links:
            key: Links
          Id: '{}'
        Attributes:
          OperatorResponseTarget: 5.962133916683182
          UnconfirmedErrors: 2
          Uptime: 4
          OperatorResponseTime: 5.637376656633329
          UptimePercentage: 7.061401241503109
          StartDateTime: 2000-01-23T04:56:07.000+00:00
          DownloadTime: 6.84685269835264
          EndDateTime: 2000-01-23T04:56:07.000+00:00
          Checks: 9
          ResolveTime: 1.0246457001441578
          SlaTarget: 6.027456183070403
          Downtime: 7
          ConnectionTime: 1.4894159098541704
          TotalBytes: 7
          TotalTime: 1.2315135367772556
          SlaTargetTotalTime: 1.4658129805029452
          Alerts: 0
          ConfirmedErrors: 3
          DowntimePercentage: 2.3021358869347655
        Links:
          key: Links
        Id: Id
      properties:
        Attributes:
          $ref: '#/components/schemas/StatisticsAttributes'
        Id:
          type: string
        Type:
          type: string
        Relationships:
          items:
            $ref: '#/components/schemas/RelationObject'
          type: array
        Links:
          additionalProperties:
            type: string
          type: object
      type: object
    StatisticsAttributes:
      example:
        OperatorResponseTarget: 5.962133916683182
        UnconfirmedErrors: 2
        Uptime: 4
        OperatorResponseTime: 5.637376656633329
        UptimePercentage: 7.061401241503109
        StartDateTime: 2000-01-23T04:56:07.000+00:00
        DownloadTime: 6.84685269835264
        EndDateTime: 2000-01-23T04:56:07.000+00:00
        Checks: 9
        ResolveTime: 1.0246457001441578
        SlaTarget: 6.027456183070403
        Downtime: 7
        ConnectionTime: 1.4894159098541704
        TotalBytes: 7
        TotalTime: 1.2315135367772556
        SlaTargetTotalTime: 1.4658129805029452
        Alerts: 0
        ConfirmedErrors: 3
        DowntimePercentage: 2.3021358869347655
      properties:
        StartDateTime:
          format: date-time
          type: string
        EndDateTime:
          format: date-time
          type: string
        Alerts:
          format: int32
          type: integer
        SlaTarget:
          format: double
          type: number
        SlaTargetTotalTime:
          format: double
          type: number
        OperatorResponseTarget:
          format: double
          type: number
        OperatorResponseTime:
          format: double
          type: number
        DowntimePercentage:
          format: double
          type: number
        UptimePercentage:
          format: double
          type: number
        Checks:
          format: int64
          type: integer
        ConfirmedErrors:
          format: int32
          type: integer
        UnconfirmedErrors:
          format: int32
          type: integer
        Uptime:
          format: int64
          type: integer
        Downtime:
          format: int64
          type: integer
        TotalTime:
          format: decimal
          type: number
        ResolveTime:
          format: decimal
          type: number
        ConnectionTime:
          format: decimal
          type: number
        DownloadTime:
          format: decimal
          type: number
        TotalBytes:
          format: int64
          type: integer
      required:
      - EndDateTime
      - StartDateTime
      type: object
    RelationObject:
      example:
        Type: Type
        Relationships:
        - null
        - null
        Attributes: '{}'
        Links:
          key: Links
        Id: '{}'
      properties:
        Attributes:
          type: object
        Id:
          type: object
        Type:
          type: string
        Relationships:
          items:
            $ref: '#/components/schemas/RelationObject'
          type: array
        Links:
          additionalProperties:
            type: string
          type: object
      type: object
    LinksData:
      description: Links with reference to self and next data set
      example:
        Next: Next
        Self: Self
      properties:
        Next:
          description: Url for next data set
          type: string
        Self:
          description: Url for this data set (data might get updated, depending on
            your parameters)
          type: string
      type: object
    MetaData:
      example:
        Period:
          Warning: Warning
          MaximumRetentionDays: 1
        Timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        Timestamp:
          format: date-time
          type: string
        Period:
          $ref: '#/components/schemas/PeriodMetaData'
      type: object
    PeriodMetaData:
      example:
        Warning: Warning
        MaximumRetentionDays: 1
      properties:
        Warning:
          type: string
        MaximumRetentionDays:
          format: int32
          type: integer
      required:
      - MaximumRetentionDays
      type: object
    AlertResponse:
      example:
        Meta:
          Period:
            Warning: Warning
            MaximumRetentionDays: 1
          Timestamp: 2000-01-23T04:56:07.000+00:00
        Relationships:
        - Type: Type
          Relationships:
          - null
          - null
          Attributes: '{}'
          Links:
            key: Links
          Id: '{}'
        - Type: Type
          Relationships:
          - null
          - null
          Attributes: '{}'
          Links:
            key: Links
          Id: '{}'
        Links:
          Next: Next
          Self: Self
        Cursors: '{}'
        Data:
        - Type: Type
          Relationships:
          - Type: Type
            Relationships:
            - null
            - null
            Attributes: '{}'
            Links:
              key: Links
            Id: '{}'
          - Type: Type
            Relationships:
            - null
            - null
            Attributes: '{}'
            Links:
              key: Links
            Id: '{}'
          Attributes:
            ErrorDescription: ErrorDescription
            AlertType: '{}'
            MonitorCheckId: 0
            FirstErrorMonitorCheckId: 6
            FirstError: 2000-01-23T04:56:07.000+00:00
            MonitorGuid: MonitorGuid
            IncidentKey: IncidentKey
            ErrorMessage: ErrorMessage
            Timestamp: 2000-01-23T04:56:07.000+00:00
          Links:
            key: Links
          Id: Id
        - Type: Type
          Relationships:
          - Type: Type
            Relationships:
            - null
            - null
            Attributes: '{}'
            Links:
              key: Links
            Id: '{}'
          - Type: Type
            Relationships:
            - null
            - null
            Attributes: '{}'
            Links:
              key: Links
            Id: '{}'
          Attributes:
            ErrorDescription: ErrorDescription
            AlertType: '{}'
            MonitorCheckId: 0
            FirstErrorMonitorCheckId: 6
            FirstError: 2000-01-23T04:56:07.000+00:00
            MonitorGuid: MonitorGuid
            IncidentKey: IncidentKey
            ErrorMessage: ErrorMessage
            Timestamp: 2000-01-23T04:56:07.000+00:00
          Links:
            key: Links
          Id: Id
      properties:
        Data:
          items:
            $ref: '#/components/schemas/Alert'
          type: array
        Links:
          $ref: '#/components/schemas/LinksData'
        Relationships:
          items:
            $ref: '#/components/schemas/RelationObject'
          type: array
        Meta:
          $ref: '#/components/schemas/MetaData'
        Cursors:
          allOf:
          - $ref: '#/components/schemas/CursorsData'
          description: Cursors can be used to navigate the dataset in a fixed manner
          type: object
      type: object
    Alert:
      description: Represents the values/results of a single check done by a monitor
      example:
        Type: Type
        Relationships:
        - Type: Type
          Relationships:
          - null
          - null
          Attributes: '{}'
          Links:
            key: Links
          Id: '{}'
        - Type: Type
          Relationships:
          - null
          - null
          Attributes: '{}'
          Links:
            key: Links
          Id: '{}'
        Attributes:
          ErrorDescription: ErrorDescription
          AlertType: '{}'
          MonitorCheckId: 0
          FirstErrorMonitorCheckId: 6
          FirstError: 2000-01-23T04:56:07.000+00:00
          MonitorGuid: MonitorGuid
          IncidentKey: IncidentKey
          ErrorMessage: ErrorMessage
          Timestamp: 2000-01-23T04:56:07.000+00:00
        Links:
          key: Links
        Id: Id
      properties:
        Attributes:
          $ref: '#/components/schemas/AlertAttributes'
        Id:
          format: guid
          type: string
        Type:
          type: string
        Relationships:
          items:
            $ref: '#/components/schemas/RelationObject'
          type: array
        Links:
          additionalProperties:
            type: string
          type: object
      required:
      - Id
      type: object
    AlertAttributes:
      description: 'Alert attributes '
      example:
        ErrorDescription: ErrorDescription
        AlertType: '{}'
        MonitorCheckId: 0
        FirstErrorMonitorCheckId: 6
        FirstError: 2000-01-23T04:56:07.000+00:00
        MonitorGuid: MonitorGuid
        IncidentKey: IncidentKey
        ErrorMessage: ErrorMessage
        Timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        AlertType:
          allOf:
          - $ref: '#/components/schemas/AlertType'
          description: Alert type indicating if this was an Error or Ok alert.
          type: object
        MonitorGuid:
          description: The monitor identifier.
          format: guid
          type: string
        Timestamp:
          description: Date/time stamp of the alert.
          format: date-time
          type: string
        FirstError:
          description: Date/time stamp of the first monitor check.
          format: date-time
          type: string
        MonitorCheckId:
          description: The Id of the monitor check that triggered this alert.
          format: int64
          type: integer
        FirstErrorMonitorCheckId:
          description: The Id of the first monitor check error that led to this alert.
          format: int64
          type: integer
        ErrorDescription:
          description: A text value that describes the error that was found, or OK
            if no error was found.
          type: string
        ErrorMessage:
          description: Any additional error information, if available.
          type: string
        IncidentKey:
          description: The incident key of this alert.
          type: string
      required:
      - AlertType
      - FirstError
      - FirstErrorMonitorCheckId
      - MonitorCheckId
      - MonitorGuid
      - Timestamp
      type: object
    AlertType:
      description: ""
      enum:
      - Ok
      - Error
      - Reminder
      type: string
      x-enumNames:
      - Ok
      - Error
      - Reminder
    CursorsData:
      description: Cursors can be used to navigate the dataset in a fixed manner
      properties:
        Next:
          description: Cursor for next data set
          type: string
        Self:
          description: Cursor for this data set (data might get updated, depending
            on your parameters)
          type: string
      type: object
    SortDirection:
      description: ""
      enum:
      - Ascending
      - Descending
      type: string
      x-enumNames:
      - Ascending
      - Descending
    Integration:
      example:
        StatusHubServiceList:
        - MonitorGuid: MonitorGuid
          IntegrationServiceGuid: IntegrationServiceGuid
        - MonitorGuid: MonitorGuid
          IntegrationServiceGuid: IntegrationServiceGuid
        Type: '{}'
        IntegrationServices:
        - IntegrationServices
        - IntegrationServices
        IntegrationGuid: IntegrationGuid
        Hash: Hash
        ExtraEmailAddresses: ExtraEmailAddresses
        Name: Name
      properties:
        IntegrationGuid:
          description: Guid of Integration in Alert Definition Escalation Level
          format: guid
          type: string
        Name:
          description: Name of Integration in Alert Definition Escalation Level
          type: string
        Type:
          allOf:
          - $ref: '#/components/schemas/IntegrationTypeEnum'
          description: Type of Integration in Alert Definition Escalation Level
          type: object
        ExtraEmailAddresses:
          description: Extra emailadresses for this integration (if type == email)
          type: string
        StatusHubServiceList:
          description: All statushubs for this integration (if type == statushub)
          items:
            $ref: '#/components/schemas/IntegrationServiceMap'
          type: array
        IntegrationServices:
          description: All integrations services.
          items:
            format: guid
            type: string
          type: array
        Hash:
          type: string
      required:
      - IntegrationGuid
      - Type
      type: object
    IntegrationTypeEnum:
      description: ""
      enum:
      - Slack
      - PagerDuty
      - Sms
      - Email
      - Phone
      - Statushub
      - GenericWebhook
      type: string
      x-enumNames:
      - Slack
      - PagerDuty
      - Sms
      - Email
      - Phone
      - Statushub
      - GenericWebhook
    IntegrationServiceMap:
      example:
        MonitorGuid: MonitorGuid
        IntegrationServiceGuid: IntegrationServiceGuid
      properties:
        MonitorGuid:
          format: guid
          type: string
        IntegrationServiceGuid:
          format: guid
          type: string
      required:
      - IntegrationServiceGuid
      - MonitorGuid
      type: object
    MonitorStatusResponse:
      example:
        Meta:
          Period:
            Warning: Warning
            MaximumRetentionDays: 1
          Timestamp: 2000-01-23T04:56:07.000+00:00
        Relationships:
        - Type: Type
          Relationships:
          - null
          - null
          Attributes: '{}'
          Links:
            key: Links
          Id: '{}'
        - Type: Type
          Relationships:
          - null
          - null
          Attributes: '{}'
          Links:
            key: Links
          Id: '{}'
        Links:
          Next: Next
          Self: Self
        Data:
          Type: Type
          Relationships:
          - Type: Type
            Relationships:
            - null
            - null
            Attributes: '{}'
            Links:
              key: Links
            Id: '{}'
          - Type: Type
            Relationships:
            - null
            - null
            Attributes: '{}'
            Links:
              key: Links
            Id: '{}'
          Attributes:
            LastCheck: 2000-01-23T04:56:07.000+00:00
            ErrorDescription: ErrorDescription
            UptimePercentage: 6.027456183070403
            CheckpointId: 0
            LastMonitorCheckId: 5
            ErrorLevel: '{}'
            ErrorCode: 1
          Links:
            key: Links
          Id: Id
      properties:
        Data:
          $ref: '#/components/schemas/MonitorStatus'
        Links:
          $ref: '#/components/schemas/LinksData'
        Relationships:
          items:
            $ref: '#/components/schemas/RelationObject'
          type: array
        Meta:
          $ref: '#/components/schemas/MetaData'
      type: object
    MonitorStatus:
      example:
        Type: Type
        Relationships:
        - Type: Type
          Relationships:
          - null
          - null
          Attributes: '{}'
          Links:
            key: Links
          Id: '{}'
        - Type: Type
          Relationships:
          - null
          - null
          Attributes: '{}'
          Links:
            key: Links
          Id: '{}'
        Attributes:
          LastCheck: 2000-01-23T04:56:07.000+00:00
          ErrorDescription: ErrorDescription
          UptimePercentage: 6.027456183070403
          CheckpointId: 0
          LastMonitorCheckId: 5
          ErrorLevel: '{}'
          ErrorCode: 1
        Links:
          key: Links
        Id: Id
      properties:
        Attributes:
          $ref: '#/components/schemas/MonitorStatusAttributes'
        Id:
          format: guid
          type: string
        Type:
          type: string
        Relationships:
          items:
            $ref: '#/components/schemas/RelationObject'
          type: array
        Links:
          additionalProperties:
            type: string
          type: object
      required:
      - Id
      type: object
    MonitorStatusAttributes:
      description: Monitor Status attributes
      example:
        LastCheck: 2000-01-23T04:56:07.000+00:00
        ErrorDescription: ErrorDescription
        UptimePercentage: 6.027456183070403
        CheckpointId: 0
        LastMonitorCheckId: 5
        ErrorLevel: '{}'
        ErrorCode: 1
      properties:
        ErrorLevel:
          allOf:
          - $ref: '#/components/schemas/LastErrorLevel'
          description: The error level for the monitor status
          type: object
        LastCheck:
          description: Last checked timeStamp for this monitor
          format: date-time
          type: string
        CheckpointId:
          description: Checkpoint id for the monitor status
          format: int32
          type: integer
        ErrorDescription:
          description: Error description for the monitor status
          type: string
        UptimePercentage:
          description: Uptime percentage for the monitor status
          format: double
          type: number
        ErrorCode:
          description: Error code for the monitor status
          format: int32
          type: integer
        LastMonitorCheckId:
          description: Last monitor check id
          format: int64
          type: integer
      required:
      - ErrorCode
      - ErrorLevel
      - UptimePercentage
      type: object
    LastErrorLevel:
      description: ""
      enum:
      - NoError
      - Unconfirmed
      - Confirmed
      - Inactive
      - Inconclusive
      type: string
      x-enumNames:
      - NoError
      - Unconfirmed
      - Confirmed
      - Inactive
      - Inconclusive
    MonitorStatusListResponse:
      example:
        Meta:
          Period:
            Warning: Warning
            MaximumRetentionDays: 1
          Timestamp: 2000-01-23T04:56:07.000+00:00
        Relationships:
        - Type: Type
          Relationships:
          - null
          - null
          Attributes: '{}'
          Links:
            key: Links
          Id: '{}'
        - Type: Type
          Relationships:
          - null
          - null
          Attributes: '{}'
          Links:
            key: Links
          Id: '{}'
        Links:
          Next: Next
          Self: Self
        Data:
        - Type: Type
          Relationships:
          - Type: Type
            Relationships:
            - null
            - null
            Attributes: '{}'
            Links:
              key: Links
            Id: '{}'
          - Type: Type
            Relationships:
            - null
            - null
            Attributes: '{}'
            Links:
              key: Links
            Id: '{}'
          Attributes:
            LastCheck: 2000-01-23T04:56:07.000+00:00
            ErrorDescription: ErrorDescription
            UptimePercentage: 6.027456183070403
            CheckpointId: 0
            LastMonitorCheckId: 5
            ErrorLevel: '{}'
            ErrorCode: 1
          Links:
            key: Links
          Id: Id
        - Type: Type
          Relationships:
          - Type: Type
            Relationships:
            - null
            - null
            Attributes: '{}'
            Links:
              key: Links
            Id: '{}'
          - Type: Type
            Relationships:
            - null
            - null
            Attributes: '{}'
            Links:
              key: Links
            Id: '{}'
          Attributes:
            LastCheck: 2000-01-23T04:56:07.000+00:00
            ErrorDescription: ErrorDescription
            UptimePercentage: 6.027456183070403
            CheckpointId: 0
            LastMonitorCheckId: 5
            ErrorLevel: '{}'
            ErrorCode: 1
          Links:
            key: Links
          Id: Id
      properties:
        Data:
          items:
            $ref: '#/components/schemas/MonitorStatus'
          type: array
        Links:
          $ref: '#/components/schemas/LinksData'
        Relationships:
          items:
            $ref: '#/components/schemas/RelationObject'
          type: array
        Meta:
          $ref: '#/components/schemas/MetaData'
      type: object
    AlertDefinition:
      example:
        AlertName: AlertName
        IsActive: true
        AlertDefinitionGuid: AlertDefinitionGuid
        Hash: Hash
      properties:
        AlertDefinitionGuid:
          description: The unique key of this Alert Definition.
          format: guid
          type: string
        Hash:
          description: Hash corresponding with this alert definition.
          type: string
        AlertName:
          description: Name of this Alert Definition.
          type: string
        IsActive:
          description: Indicates whether this Alert Definition is active.
          type: boolean
      type: object
    AlertDefinitionMember:
      example:
        MonitorGuid: MonitorGuid
        MonitorGroupGuid: MonitorGroupGuid
      properties:
        MonitorGuid:
          description: Guid of Monitor in Alert Definition
          format: guid
          type: string
        MonitorGroupGuid:
          description: Guid of GroupMonitor in Alert Definition
          format: guid
          type: string
      type: object
    AlertDefinitionMonitor:
      example:
        Monitor: Monitor
        AlertDefinition: AlertDefinition
      properties:
        AlertDefinition:
          format: guid
          type: string
        Monitor:
          format: guid
          type: string
      required:
      - AlertDefinition
      - Monitor
      type: object
    AlertDefinitionMonitorGroup:
      example:
        AlertDefinition: AlertDefinition
        MonitorGroup: MonitorGroup
      properties:
        AlertDefinition:
          format: guid
          type: string
        MonitorGroup:
          format: guid
          type: string
      required:
      - AlertDefinition
      - MonitorGroup
      type: object
    EscalationLevel:
      example:
        Message: Message
        IncludeTraceRoute: true
        IsActive: true
        NumberOfReminders: 5
        ReminderDelay: 5
        ThresholdErrorCount: 6
        Id: 0
        Hash: Hash
        ThresholdMinutes: 1
      properties:
        EscalationMode:
          $ref: '#/components/schemas/EscalationMode'
        Id:
          type: integer
        ThresholdErrorCount:
          format: int32
          type: integer
        ThresholdMinutes:
          format: int32
          type: integer
        IsActive:
          type: boolean
        Message:
          type: string
        NumberOfReminders:
          format: int32
          type: integer
        ReminderDelay:
          format: int32
          type: integer
        IncludeTraceRoute:
          type: boolean
        Hash:
          description: Hash corresponding with this escalation level.
          type: string
      type: object
    EscalationMode:
      description: ""
      enum:
      - AlertOnErrorCount
      - AlertOnErrorDuration
      type: string
      x-enumNames:
      - AlertOnErrorCount
      - AlertOnErrorDuration
    AlertEscalationLevelMember:
      example:
        OperatorGuid: OperatorGuid
        OperatorGroupGuid: OperatorGroupGuid
      properties:
        OperatorGuid:
          description: Guid of Operator in Alert Definition Escalation Level
          format: guid
          type: string
        OperatorGroupGuid:
          description: Guid of Group Operator in Alert Definition Escalation Level
          format: guid
          type: string
      type: object
    AlertDefinitionOperator:
      example:
        Operator: Operator
        Escalationlevel: 0
        AlertDefinition: AlertDefinition
      properties:
        AlertDefinition:
          format: guid
          type: string
        Escalationlevel:
          type: integer
        Operator:
          format: guid
          type: string
      required:
      - AlertDefinition
      - Escalationlevel
      - Operator
      type: object
    AlertDefinitionOperatorGroup:
      example:
        Escalationlevel: 0
        OperatorGroup: OperatorGroup
        AlertDefinition: AlertDefinition
      properties:
        AlertDefinition:
          format: guid
          type: string
        Escalationlevel:
          type: integer
        OperatorGroup:
          format: guid
          type: string
      required:
      - AlertDefinition
      - Escalationlevel
      - OperatorGroup
      type: object
    EscalationLevelIntegration:
      example:
        StatusHubServiceList:
        - MonitorGuid: MonitorGuid
          IntegrationServiceGuid: IntegrationServiceGuid
        - MonitorGuid: MonitorGuid
          IntegrationServiceGuid: IntegrationServiceGuid
        IsActive: true
        IntegrationGuid: IntegrationGuid
        Hash: Hash
        ExtraEmailAddresses:
        - ExtraEmailAddresses
        - ExtraEmailAddresses
        ExtraEmailAddressesSpecified: true
        StatusHubServiceListSpecified: true
      properties:
        IntegrationGuid:
          description: The unique key of this Integration.
          format: guid
          type: string
        ExtraEmailAddresses:
          description: Extra email addresses
          items:
            type: string
          type: array
        ExtraEmailAddressesSpecified:
          description: Specified Extra EmailAddresses For Patch request
          type: boolean
        StatusHubServiceList:
          description: StatusHub Service Mapping
          items:
            $ref: '#/components/schemas/IntegrationServiceMap'
          type: array
        StatusHubServiceListSpecified:
          description: Specified StatusHubServiceList For Patch request
          type: boolean
        IsActive:
          description: Indicates whether this Integration is active.
          type: boolean
        Hash:
          type: string
      type: object
    CheckpointListResponse:
      example:
        Meta:
          Period:
            Warning: Warning
            MaximumRetentionDays: 1
          Timestamp: 2000-01-23T04:56:07.000+00:00
        Relationships:
        - Type: Type
          Relationships:
          - null
          - null
          Attributes: '{}'
          Links:
            key: Links
          Id: '{}'
        - Type: Type
          Relationships:
          - null
          - null
          Attributes: '{}'
          Links:
            key: Links
          Id: '{}'
        Links:
          Next: Next
          Self: Self
        Data:
        - Type: Type
          Relationships:
          - Type: Type
            Relationships:
            - null
            - null
            Attributes: '{}'
            Links:
              key: Links
            Id: '{}'
          - Type: Type
            Relationships:
            - null
            - null
            Attributes: '{}'
            Links:
              key: Links
            Id: '{}'
          Attributes:
            Ipv4Addresses:
            - Ipv4Addresses
            - Ipv4Addresses
            IpV6Addresses:
            - IsNative: true
              IpAddress: IpAddress
            - IsNative: true
              IpAddress: IpAddress
            IsPrimaryCheckpoint: true
            SupportsIpv6: true
            CheckpointName: CheckpointName
            Code: Code
            HasHighAvailability: true
          Links:
            key: Links
          Id: 0
        - Type: Type
          Relationships:
          - Type: Type
            Relationships:
            - null
            - null
            Attributes: '{}'
            Links:
              key: Links
            Id: '{}'
          - Type: Type
            Relationships:
            - null
            - null
            Attributes: '{}'
            Links:
              key: Links
            Id: '{}'
          Attributes:
            Ipv4Addresses:
            - Ipv4Addresses
            - Ipv4Addresses
            IpV6Addresses:
            - IsNative: true
              IpAddress: IpAddress
            - IsNative: true
              IpAddress: IpAddress
            IsPrimaryCheckpoint: true
            SupportsIpv6: true
            CheckpointName: CheckpointName
            Code: Code
            HasHighAvailability: true
          Links:
            key: Links
          Id: 0
      properties:
        Data:
          items:
            $ref: '#/components/schemas/Checkpoint2'
          type: array
        Links:
          $ref: '#/components/schemas/LinksData'
        Relationships:
          items:
            $ref: '#/components/schemas/RelationObject'
          type: array
        Meta:
          $ref: '#/components/schemas/MetaData'
      type: object
    Checkpoint2:
      example:
        Type: Type
        Relationships:
        - Type: Type
          Relationships:
          - null
          - null
          Attributes: '{}'
          Links:
            key: Links
          Id: '{}'
        - Type: Type
          Relationships:
          - null
          - null
          Attributes: '{}'
          Links:
            key: Links
          Id: '{}'
        Attributes:
          Ipv4Addresses:
          - Ipv4Addresses
          - Ipv4Addresses
          IpV6Addresses:
          - IsNative: true
            IpAddress: IpAddress
          - IsNative: true
            IpAddress: IpAddress
          IsPrimaryCheckpoint: true
          SupportsIpv6: true
          CheckpointName: CheckpointName
          Code: Code
          HasHighAvailability: true
        Links:
          key: Links
        Id: 0
      properties:
        Attributes:
          $ref: '#/components/schemas/CheckpointAttributes'
        Id:
          type: integer
        Type:
          type: string
        Relationships:
          items:
            $ref: '#/components/schemas/RelationObject'
          type: array
        Links:
          additionalProperties:
            type: string
          type: object
      required:
      - Id
      type: object
    CheckpointAttributes:
      description: Checkpoint attributes
      example:
        Ipv4Addresses:
        - Ipv4Addresses
        - Ipv4Addresses
        IpV6Addresses:
        - IsNative: true
          IpAddress: IpAddress
        - IsNative: true
          IpAddress: IpAddress
        IsPrimaryCheckpoint: true
        SupportsIpv6: true
        CheckpointName: CheckpointName
        Code: Code
        HasHighAvailability: true
      properties:
        CheckpointName:
          description: The name of the checkpoint
          type: string
        Code:
          description: Location code of the checkpoint
          type: string
        Ipv4Addresses:
          description: 'Ipv4 addresses of the checkpoint '
          items:
            type: string
          type: array
        IpV6Addresses:
          description: Ipv6 addresses of the checkpoint
          items:
            $ref: '#/components/schemas/IPv6Address'
          type: array
        IsPrimaryCheckpoint:
          description: Checkpoint is primary
          type: boolean
        SupportsIpv6:
          description: Checkpoint supports IPv6
          type: boolean
        HasHighAvailability:
          description: Checkpoint has high availability
          type: boolean
      required:
      - HasHighAvailability
      - IsPrimaryCheckpoint
      - SupportsIpv6
      type: object
    IPv6Address:
      description: Ipv6 address
      example:
        IsNative: true
        IpAddress: IpAddress
      properties:
        IpAddress:
          description: The Ipv6 address
          type: string
        IsNative:
          description: Is this a native v6 address?
          type: boolean
      required:
      - IsNative
      type: object
    CheckpointResponse:
      example:
        Meta:
          Period:
            Warning: Warning
            MaximumRetentionDays: 1
          Timestamp: 2000-01-23T04:56:07.000+00:00
        Relationships:
        - Type: Type
          Relationships:
          - null
          - null
          Attributes: '{}'
          Links:
            key: Links
          Id: '{}'
        - Type: Type
          Relationships:
          - null
          - null
          Attributes: '{}'
          Links:
            key: Links
          Id: '{}'
        Links:
          Next: Next
          Self: Self
        Data:
          Type: Type
          Relationships:
          - Type: Type
            Relationships:
            - null
            - null
            Attributes: '{}'
            Links:
              key: Links
            Id: '{}'
          - Type: Type
            Relationships:
            - null
            - null
            Attributes: '{}'
            Links:
              key: Links
            Id: '{}'
          Attributes:
            Ipv4Addresses:
            - Ipv4Addresses
            - Ipv4Addresses
            IpV6Addresses:
            - IsNative: true
              IpAddress: IpAddress
            - IsNative: true
              IpAddress: IpAddress
            IsPrimaryCheckpoint: true
            SupportsIpv6: true
            CheckpointName: CheckpointName
            Code: Code
            HasHighAvailability: true
          Links:
            key: Links
          Id: 0
      properties:
        Data:
          $ref: '#/components/schemas/Checkpoint2'
        Links:
          $ref: '#/components/schemas/LinksData'
        Relationships:
          items:
            $ref: '#/components/schemas/RelationObject'
          type: array
        Meta:
          $ref: '#/components/schemas/MetaData'
      type: object
    CheckpoinServerResponse:
      example:
        Meta:
          Period:
            Warning: Warning
            MaximumRetentionDays: 1
          Timestamp: 2000-01-23T04:56:07.000+00:00
        Relationships:
        - Type: Type
          Relationships:
          - null
          - null
          Attributes: '{}'
          Links:
            key: Links
          Id: '{}'
        - Type: Type
          Relationships:
          - null
          - null
          Attributes: '{}'
          Links:
            key: Links
          Id: '{}'
        Links:
          Next: Next
          Self: Self
        Data:
          Type: Type
          Relationships:
          - Type: Type
            Relationships:
            - null
            - null
            Attributes: '{}'
            Links:
              key: Links
            Id: '{}'
          - Type: Type
            Relationships:
            - null
            - null
            Attributes: '{}'
            Links:
              key: Links
            Id: '{}'
          Attributes:
            Capabilities:
            - null
            - null
            Ip4Address: Ip4Address
            IpV6Address: IpV6Address
          Links:
            key: Links
          Id: 0
      properties:
        Data:
          $ref: '#/components/schemas/CheckpointServer'
        Links:
          $ref: '#/components/schemas/LinksData'
        Relationships:
          items:
            $ref: '#/components/schemas/RelationObject'
          type: array
        Meta:
          $ref: '#/components/schemas/MetaData'
      type: object
    CheckpointServer:
      example:
        Type: Type
        Relationships:
        - Type: Type
          Relationships:
          - null
          - null
          Attributes: '{}'
          Links:
            key: Links
          Id: '{}'
        - Type: Type
          Relationships:
          - null
          - null
          Attributes: '{}'
          Links:
            key: Links
          Id: '{}'
        Attributes:
          Capabilities:
          - null
          - null
          Ip4Address: Ip4Address
          IpV6Address: IpV6Address
        Links:
          key: Links
        Id: 0
      properties:
        Attributes:
          $ref: '#/components/schemas/CheckpointServerAttributes'
        Id:
          type: integer
        Type:
          type: string
        Relationships:
          items:
            $ref: '#/components/schemas/RelationObject'
          type: array
        Links:
          additionalProperties:
            type: string
          type: object
      required:
      - Id
      type: object
    CheckpointServerAttributes:
      description: Checkpoint server attributes
      example:
        Capabilities:
        - null
        - null
        Ip4Address: Ip4Address
        IpV6Address: IpV6Address
      properties:
        Ip4Address:
          description: The ipv4 address
          type: string
        IpV6Address:
          description: The ipv6 address
          type: string
        Capabilities:
          description: List of server's capabilities
          items:
            $ref: '#/components/schemas/CapabilityFilterEnum'
          type: array
      type: object
    CapabilityFilterEnum:
      description: ""
      enum:
      - IPv6
      - NativeIPv6
      - PrimaryServer
      - HighAvailability
      type: string
      x-enumNames:
      - IPv6
      - NativeIPv6
      - PrimaryServer
      - HighAvailability
    ListStringResponse:
      example:
        Meta:
          Period:
            Warning: Warning
            MaximumRetentionDays: 1
          Timestamp: 2000-01-23T04:56:07.000+00:00
        Relationships:
        - Type: Type
          Relationships:
          - null
          - null
          Attributes: '{}'
          Links:
            key: Links
          Id: '{}'
        - Type: Type
          Relationships:
          - null
          - null
          Attributes: '{}'
          Links:
            key: Links
          Id: '{}'
        Links:
          Next: Next
          Self: Self
        Data:
        - Data
        - Data
      properties:
        Data:
          items:
            type: string
          type: array
        Links:
          $ref: '#/components/schemas/LinksData'
        Relationships:
          items:
            $ref: '#/components/schemas/RelationObject'
          type: array
        Meta:
          $ref: '#/components/schemas/MetaData'
      type: object
    MonitorGroup:
      example:
        Description: Description
        IsAll: true
        MonitorGroupGuid: MonitorGroupGuid
      properties:
        MonitorGroupGuid:
          description: The unique identifier of this monitor group
          format: guid
          type: string
        Description:
          description: The descriptive name of this probe group
          type: string
        IsAll:
          description: Indicates whether this is the default group for all probes
          type: boolean
      required:
      - IsAll
      type: object
    MonitorGroupMember:
      example:
        MonitorGuid: MonitorGuid
      properties:
        MonitorGuid:
          description: The unique identifier of this monitor
          format: guid
          type: string
      required:
      - MonitorGuid
      type: object
    MaintenancePeriod:
      example:
        WeekDay: '{}'
        StartDateTime: 2000-01-23T04:56:07.000+00:00
        EndTime: EndTime
        EndDateTime: 2000-01-23T04:56:07.000+00:00
        ScheduleMode: '{}'
        StartTime: StartTime
        MonthDay: 6
        Id: 0
        MaintenanceType: '{}'
      properties:
        Id:
          description: The unique ID of this maintenance period
          format: int32
          type: integer
        ScheduleMode:
          allOf:
          - $ref: '#/components/schemas/ScheduleMode'
          description: The schedule mode (one time, daily, weekly, monthly)
          type: object
        StartDateTime:
          description: The start date/time for this schedule (for one-time schedules
            only)
          format: date-time
          type: string
        EndDateTime:
          description: The end date/time for this maintenance period (for one-time
            maintenance periods only)
          format: date-time
          type: string
        WeekDay:
          allOf:
          - $ref: '#/components/schemas/DayOfWeek'
          description: The weekday for this maintenance period (for weekly maintenance
            periods only)
          type: object
        MonthDay:
          description: the month day for this maintenance period (for montly maintenance
            periods only)
          format: int32
          type: integer
        StartTime:
          description: The start time of this maintenance period
          type: string
        EndTime:
          description: The end time of this maintenance period
          type: string
        MaintenanceType:
          allOf:
          - $ref: '#/components/schemas/MaintenanceTypes'
          description: Indicates whether, during the maintenance periods, only alerting
            will be disabled, or if the entire monitor will be stopped
          type: object
      required:
      - Id
      - MaintenanceType
      - ScheduleMode
      type: object
    ScheduleMode:
      description: ""
      enum:
      - OneTime
      - Daily
      - Weekly
      - Monthly
      type: string
      x-enumNames:
      - OneTime
      - Daily
      - Weekly
      - Monthly
    MaintenanceTypes:
      description: ""
      enum:
      - DisableMonitoring
      - DisableNotifications
      type: string
      x-enumNames:
      - DisableMonitoring
      - DisableNotifications
    Operator:
      description: Operator
      example:
        UseNumericSender: true
        Email: Email
        UseNumericSenderSpecified: true
        AllowNativeLogin: true
        OutgoingPhoneNumberIdSpecified: true
        OperatorGuid: OperatorGuid
        OutgoingPhoneNumberId: 0
        AllowNativeLoginSpecified: true
        AllowSingleSignonSpecified: true
        Hash: Hash
        SmsProvider: '{}'
        MobilePhone: MobilePhone
        BackupEmail: BackupEmail
        DefaultDashboard: DefaultDashboard
        CultureName: CultureName
        CultureNameSpecified: true
        FullName: FullName
        TimeZoneId: 6
        AllowSingleSignon: true
        TimeZoneIdSpecified: true
        Password: Password
        IsAccountAdministrator: true
        IsOnDuty: true
      properties:
        OperatorGuid:
          description: The unique identifier of this operator
          format: guid
          type: string
        Hash:
          description: The hash of this operator.
          type: string
        Password:
          description: The password is a required field if AllowNativeLogin is set
            to True
          type: string
        FullName:
          description: The full name of this operator
          type: string
        Email:
          description: The email address of this operator. This also serves as the
            username
          type: string
        MobilePhone:
          description: The phone number of this operator to which SMS and phone alerts
            can be sent. Start with a plus (+) sign and your country code
          type: string
        OutgoingPhoneNumberId:
          description: The id of the phone number that will be used to send phone
            alerts (See /OutgoingPhoneNumber API under Miscellaneous for available
            ids)
          format: int32
          type: integer
        OutgoingPhoneNumberIdSpecified:
          type: boolean
        IsAccountAdministrator:
          description: This indicates if the operator is the account administrator.
          type: boolean
        BackupEmail:
          description: The backup email address of this operator
          type: string
        IsOnDuty:
          description: Indicates whether the operator is currently active
          type: boolean
        CultureName:
          description: If ommitted the operator will use the account culture. If set
            it will override the account default
          type: string
        CultureNameSpecified:
          type: boolean
        TimeZoneId:
          description: The id of the timezone of this operator (See /Timezone API
            under Miscellaneous for available timezones)
          type: integer
        TimeZoneIdSpecified:
          type: boolean
        SmsProvider:
          allOf:
          - $ref: '#/components/schemas/SmsProvider'
          description: The SMS provider used to send out SMS alerts
          type: object
        UseNumericSender:
          description: Set to True to override the default behavior of sending SMS
            alerts with textual sender ID
          type: boolean
        UseNumericSenderSpecified:
          type: boolean
        AllowNativeLogin:
          description: This can only be set to false if the account has SSO enabled.
            Ommitting or providing null will use the account default
          type: boolean
        AllowNativeLoginSpecified:
          type: boolean
        AllowSingleSignon:
          description: This can only be set to true if the account has SSO enabled.
            Ommitting or providing null will use the account default
          type: boolean
        AllowSingleSignonSpecified:
          type: boolean
        DefaultDashboard:
          type: string
      type: object
    SmsProvider:
      description: ""
      enum:
      - UseAccountSetting
      - SmsProviderEurope
      - SmsProviderInternational
      - SmsProviderEurope2
      - SmsProviderUSA
      type: string
      x-enumNames:
      - UseAccountSetting
      - SmsProviderEurope
      - SmsProviderInternational
      - SmsProviderEurope2
      - SmsProviderUSA
    OperatorMember:
      example:
        OperatorGroupGuid: OperatorGroupGuid
      properties:
        OperatorGroupGuid:
          description: The unique identifier of this Operator
          format: guid
          type: string
      required:
      - OperatorGroupGuid
      type: object
    OperatorAuthorizationType:
      description: ""
      enum:
      - AccountAccess
      type: string
      x-enumNames:
      - AccountAccess
    OperatorDutySchedule:
      example:
        WeekDay: '{}'
        StartDateTime: 2000-01-23T04:56:07.000+00:00
        EndTime: EndTime
        EndDateTime: 2000-01-23T04:56:07.000+00:00
        ScheduleMode: '{}'
        StartTime: StartTime
        MonthDay: 6
        Id: 0
      properties:
        Id:
          description: The unique ID of this maintenance period
          format: int32
          type: integer
        ScheduleMode:
          allOf:
          - $ref: '#/components/schemas/OperatorScheduleMode'
          description: The schedule mode (one time, daily, weekly, monthly)
          type: object
        StartDateTime:
          description: The start date/time for this schedule (for one-time schedules
            only)
          format: date-time
          type: string
        EndDateTime:
          description: The end date/time for this maintenance period (for one-time
            maintenance periods only)
          format: date-time
          type: string
        WeekDay:
          allOf:
          - $ref: '#/components/schemas/DayOfWeek'
          description: The weekday for this maintenance period (for weekly maintenance
            periods only)
          type: object
        MonthDay:
          description: the month day for this maintenance period (for montly maintenance
            periods only)
          format: int32
          type: integer
        StartTime:
          description: The start time of this maintenance period
          type: string
        EndTime:
          description: The end time of this maintenance period
          type: string
      required:
      - Id
      - ScheduleMode
      type: object
    OperatorScheduleMode:
      description: ""
      enum:
      - OneTime
      - Daily
      - Weekly
      - Monthly
      type: string
      x-enumNames:
      - OneTime
      - Daily
      - Weekly
      - Monthly
    Timezone:
      description: Time zone available in Uptrends
      example:
        OffsetFromUtc: 6
        Description: Description
        TimezoneId: 0
        HasDaylightSaving: true
        DaylightSavingOffset: 1
      properties:
        TimezoneId:
          description: The time zone unique identifier
          type: integer
        Description:
          description: The description of the time zone
          type: string
        OffsetFromUtc:
          description: The offset from UTC in minutes (if this time zone runs behind
            UTC, the number is negative)
          type: integer
        HasDaylightSaving:
          description: Indicates whether or not this time zone uses Daylight Saving
            Time
          type: boolean
        DaylightSavingOffset:
          description: The time offset for Daylight Saving Time in minutes
          type: integer
      required:
      - HasDaylightSaving
      - OffsetFromUtc
      - TimezoneId
      type: object
    OutgoingPhoneNumberDetails:
      example:
        Description: Description
        PhoneNumber: PhoneNumber
        Id: 0
      properties:
        Id:
          format: int32
          type: integer
        PhoneNumber:
          type: string
        Description:
          type: string
      required:
      - Id
      type: object
    OperatorGroup:
      example:
        Description: Description
        IsAdministratorsGroup: true
        IsEveryone: true
        OperatorGroupGuid: OperatorGroupGuid
      properties:
        OperatorGroupGuid:
          description: The unique identifier of this Operator group
          format: guid
          type: string
        Description:
          description: The descriptive name of this operator group
          type: string
        IsEveryone:
          description: Indicates whether this is the default group for all operators
          type: boolean
        IsAdministratorsGroup:
          type: boolean
      type: object
    OperatorGroupMember:
      example:
        OperatorGuid: OperatorGuid
      properties:
        OperatorGuid:
          description: The unique identifier of this Operator
          format: guid
          type: string
      required:
      - OperatorGuid
      type: object
    OperatorGroupAuthorization:
      example:
        AuthorizationId: AuthorizationId
        OperatorGuid: OperatorGuid
        OperatorGroupGuid: OperatorGroupGuid
      properties:
        AuthorizationId:
          format: guid
          type: string
        AuthorizationType:
          $ref: '#/components/schemas/OperatorGroupAuthorizationType'
        OperatorGuid:
          format: guid
          type: string
        OperatorGroupGuid:
          format: guid
          type: string
      required:
      - AuthorizationType
      type: object
    OperatorGroupAuthorizationType:
      description: ""
      enum:
      - ShareDashboards
      - AllowInfra
      - Administrator
      - TechnicalContact
      - FinancialOperator
      - BasicOperator
      type: string
      x-enumNames:
      - ShareDashboards
      - AllowInfra
      - Administrator
      - TechnicalContact
      - FinancialOperator
      - BasicOperator
    MonitorCheckResponse:
      description: Response of the MonitorCheck endpoint
      example:
        Meta:
          Period:
            Warning: Warning
            MaximumRetentionDays: 1
          Timestamp: 2000-01-23T04:56:07.000+00:00
        Relationships:
        - Type: Type
          Relationships:
          - null
          - null
          Attributes: '{}'
          Links:
            key: Links
          Id: '{}'
        - Type: Type
          Relationships:
          - null
          - null
          Attributes: '{}'
          Links:
            key: Links
          Id: '{}'
        Links:
          Next: Next
          Self: Self
        Cursors: '{}'
        Data:
        - Type: Type
          Relationships:
          - Type: Type
            Relationships:
            - null
            - null
            Attributes: '{}'
            Links:
              key: Links
            Id: '{}'
          - Type: Type
            Relationships:
            - null
            - null
            Attributes: '{}'
            Links:
              key: Links
            Id: '{}'
          Attributes:
            ErrorDescription: ErrorDescription
            MonitorGuid: MonitorGuid
            Timestamp: 2000-01-23T04:56:07.000+00:00
            ResolvedIpAddress: ResolvedIpAddress
            IsPartialCheck: true
            DownloadTime: 5.637376656633329
            ServerId: 7
            ResolveTime: 1.4658129805029452
            ConnectionTime: 5.962133916683182
            TotalBytes: 2
            TotalTime: 6.027456183070403
            HttpStatusCode: 9
            ErrorLevel: '{}'
            StagingMode: true
            ErrorCode: 0
            ErrorMessage: ErrorMessage
            IsConcurrentCheck: true
          Links:
            key: Links
          Id: 3
        - Type: Type
          Relationships:
          - Type: Type
            Relationships:
            - null
            - null
            Attributes: '{}'
            Links:
              key: Links
            Id: '{}'
          - Type: Type
            Relationships:
            - null
            - null
            Attributes: '{}'
            Links:
              key: Links
            Id: '{}'
          Attributes:
            ErrorDescription: ErrorDescription
            MonitorGuid: MonitorGuid
            Timestamp: 2000-01-23T04:56:07.000+00:00
            ResolvedIpAddress: ResolvedIpAddress
            IsPartialCheck: true
            DownloadTime: 5.637376656633329
            ServerId: 7
            ResolveTime: 1.4658129805029452
            ConnectionTime: 5.962133916683182
            TotalBytes: 2
            TotalTime: 6.027456183070403
            HttpStatusCode: 9
            ErrorLevel: '{}'
            StagingMode: true
            ErrorCode: 0
            ErrorMessage: ErrorMessage
            IsConcurrentCheck: true
          Links:
            key: Links
          Id: 3
      properties:
        Data:
          items:
            $ref: '#/components/schemas/MonitorCheck'
          type: array
        Links:
          $ref: '#/components/schemas/LinksData'
        Relationships:
          items:
            $ref: '#/components/schemas/RelationObject'
          type: array
        Meta:
          $ref: '#/components/schemas/MetaData'
        Cursors:
          allOf:
          - $ref: '#/components/schemas/CursorsData'
          description: Cursors can be used to navigate the dataset in a fixed manner
          type: object
      type: object
    MonitorCheck:
      description: Represents the values/results of a single check done by a monitor
      example:
        Type: Type
        Relationships:
        - Type: Type
          Relationships:
          - null
          - null
          Attributes: '{}'
          Links:
            key: Links
          Id: '{}'
        - Type: Type
          Relationships:
          - null
          - null
          Attributes: '{}'
          Links:
            key: Links
          Id: '{}'
        Attributes:
          ErrorDescription: ErrorDescription
          MonitorGuid: MonitorGuid
          Timestamp: 2000-01-23T04:56:07.000+00:00
          ResolvedIpAddress: ResolvedIpAddress
          IsPartialCheck: true
          DownloadTime: 5.637376656633329
          ServerId: 7
          ResolveTime: 1.4658129805029452
          ConnectionTime: 5.962133916683182
          TotalBytes: 2
          TotalTime: 6.027456183070403
          HttpStatusCode: 9
          ErrorLevel: '{}'
          StagingMode: true
          ErrorCode: 0
          ErrorMessage: ErrorMessage
          IsConcurrentCheck: true
        Links:
          key: Links
        Id: 3
      properties:
        Attributes:
          $ref: '#/components/schemas/MonitorCheckAttributes'
        Id:
          format: int64
          type: integer
        Type:
          type: string
        Relationships:
          items:
            $ref: '#/components/schemas/RelationObject'
          type: array
        Links:
          additionalProperties:
            type: string
          type: object
      required:
      - Id
      type: object
    MonitorCheckAttributes:
      description: 'Monitor check attributes '
      example:
        ErrorDescription: ErrorDescription
        MonitorGuid: MonitorGuid
        Timestamp: 2000-01-23T04:56:07.000+00:00
        ResolvedIpAddress: ResolvedIpAddress
        IsPartialCheck: true
        DownloadTime: 5.637376656633329
        ServerId: 7
        ResolveTime: 1.4658129805029452
        ConnectionTime: 5.962133916683182
        TotalBytes: 2
        TotalTime: 6.027456183070403
        HttpStatusCode: 9
        ErrorLevel: '{}'
        StagingMode: true
        ErrorCode: 0
        ErrorMessage: ErrorMessage
        IsConcurrentCheck: true
      properties:
        MonitorGuid:
          description: Monitor identifier
          format: guid
          type: string
        Timestamp:
          description: Date/time stamp of the check
          format: date-time
          type: string
        ErrorCode:
          description: The numeric Uptrends error code in case of an error result,
            or 0 in case of an OK result.
          format: int32
          type: integer
        TotalTime:
          description: The number of milliseconds needed to complete the monitor check.
          format: double
          type: number
        ResolveTime:
          description: The number of milliseconds needed to perform the DNS query
            for this check, when appropriate.
          format: double
          type: number
        ConnectionTime:
          description: The number of milliseconds needed to establish a connection.
          format: double
          type: number
        DownloadTime:
          description: The number of milliseconds needed to download the response
            data.
          format: double
          type: number
        TotalBytes:
          description: The number of downloaded bytes for this check.
          format: int32
          type: integer
        ResolvedIpAddress:
          description: The IP address that was found for the specified domain name
            as part of this monitor check.
          type: string
        ErrorLevel:
          allOf:
          - $ref: '#/components/schemas/ErrorLevel'
          description: 'A value that represents the OK/Error state for this check:
            NoError if the result was OK, Unconfirmed if an error was found, Confirmed
            if an error was found as a double check, right after an Unconfirmed error.'
          type: object
        ErrorDescription:
          description: A text value that describes the error that was found, or OK
            if no error was found.
          type: string
        ErrorMessage:
          description: Any additional error information, if available.
          type: string
        StagingMode:
          description: Did the check come from a staging monitor?
          type: boolean
        ServerId:
          description: The Id of the Uptrends checkpoint server that performed this
            check.
          format: int32
          type: integer
        HttpStatusCode:
          description: The HTTP status code returned (if applicable)
          format: int32
          type: integer
        IsPartialCheck:
          description: This is a partial concurrent measurement, part of a concurrent
            check
          type: boolean
        IsConcurrentCheck:
          description: Is this a master concurrent check record
          type: boolean
      required:
      - ConnectionTime
      - DownloadTime
      - ErrorCode
      - ErrorLevel
      - IsPartialCheck
      - MonitorGuid
      - ResolveTime
      - StagingMode
      - Timestamp
      - TotalTime
      type: object
    ErrorLevel:
      description: ""
      enum:
      - NoError
      - Unconfirmed
      - Confirmed
      type: string
      x-enumNames:
      - NoError
      - Unconfirmed
      - Confirmed
    ErrorLevelFilter:
      description: ""
      enum:
      - NoError
      - Unconfirmed
      - Confirmed
      type: string
      x-enumNames:
      - NoError
      - Unconfirmed
      - Confirmed
    SingleMonitorCheckResponse:
      example:
        Meta:
          Period:
            Warning: Warning
            MaximumRetentionDays: 1
          Timestamp: 2000-01-23T04:56:07.000+00:00
        Relationships:
        - Type: Type
          Relationships:
          - null
          - null
          Attributes: '{}'
          Links:
            key: Links
          Id: '{}'
        - Type: Type
          Relationships:
          - null
          - null
          Attributes: '{}'
          Links:
            key: Links
          Id: '{}'
        Links:
          Next: Next
          Self: Self
        Data:
          Type: Type
          Relationships:
          - Type: Type
            Relationships:
            - null
            - null
            Attributes: '{}'
            Links:
              key: Links
            Id: '{}'
          - Type: Type
            Relationships:
            - null
            - null
            Attributes: '{}'
            Links:
              key: Links
            Id: '{}'
          Attributes:
            ErrorDescription: ErrorDescription
            MonitorGuid: MonitorGuid
            Timestamp: 2000-01-23T04:56:07.000+00:00
            ResolvedIpAddress: ResolvedIpAddress
            IsPartialCheck: true
            DownloadTime: 5.637376656633329
            ServerId: 7
            ResolveTime: 1.4658129805029452
            ConnectionTime: 5.962133916683182
            TotalBytes: 2
            TotalTime: 6.027456183070403
            HttpStatusCode: 9
            ErrorLevel: '{}'
            StagingMode: true
            ErrorCode: 0
            ErrorMessage: ErrorMessage
            IsConcurrentCheck: true
          Links:
            key: Links
          Id: 3
      properties:
        Data:
          $ref: '#/components/schemas/MonitorCheck'
        Links:
          $ref: '#/components/schemas/LinksData'
        Relationships:
          items:
            $ref: '#/components/schemas/RelationObject'
          type: array
        Meta:
          $ref: '#/components/schemas/MetaData'
      type: object
    HttpDetailsResponse:
      example:
        Meta:
          Period:
            Warning: Warning
            MaximumRetentionDays: 1
          Timestamp: 2000-01-23T04:56:07.000+00:00
        Relationships:
        - Type: Type
          Relationships:
          - null
          - null
          Attributes: '{}'
          Links:
            key: Links
          Id: '{}'
        - Type: Type
          Relationships:
          - null
          - null
          Attributes: '{}'
          Links:
            key: Links
          Id: '{}'
        Links:
          Next: Next
          Self: Self
        Data:
          Type: Type
          Relationships:
          - Type: Type
            Relationships:
            - null
            - null
            Attributes: '{}'
            Links:
              key: Links
            Id: '{}'
          - Type: Type
            Relationships:
            - null
            - null
            Attributes: '{}'
            Links:
              key: Links
            Id: '{}'
          Attributes:
            ResponseHeaders: ResponseHeaders
            ResponseBody: ResponseBody
          Links:
            key: Links
          Id: 0
      properties:
        Data:
          $ref: '#/components/schemas/HttpCheckDetails'
        Links:
          $ref: '#/components/schemas/LinksData'
        Relationships:
          items:
            $ref: '#/components/schemas/RelationObject'
          type: array
        Meta:
          $ref: '#/components/schemas/MetaData'
      type: object
    HttpCheckDetails:
      example:
        Type: Type
        Relationships:
        - Type: Type
          Relationships:
          - null
          - null
          Attributes: '{}'
          Links:
            key: Links
          Id: '{}'
        - Type: Type
          Relationships:
          - null
          - null
          Attributes: '{}'
          Links:
            key: Links
          Id: '{}'
        Attributes:
          ResponseHeaders: ResponseHeaders
          ResponseBody: ResponseBody
        Links:
          key: Links
        Id: 0
      properties:
        Attributes:
          $ref: '#/components/schemas/HttpAttributes'
        Id:
          format: int64
          type: integer
        Type:
          type: string
        Relationships:
          items:
            $ref: '#/components/schemas/RelationObject'
          type: array
        Links:
          additionalProperties:
            type: string
          type: object
      required:
      - Id
      type: object
    HttpAttributes:
      description: Http details attributes
      example:
        ResponseHeaders: ResponseHeaders
        ResponseBody: ResponseBody
      properties:
        ResponseBody:
          description: The HTML code retrieved from the target
          type: string
        ResponseHeaders:
          description: 'The HTTP response headers retrieved from the target '
          type: string
      type: object
    MsaDetailsResponse:
      example:
        Meta:
          Period:
            Warning: Warning
            MaximumRetentionDays: 1
          Timestamp: 2000-01-23T04:56:07.000+00:00
        Relationships:
        - Type: Type
          Relationships:
          - null
          - null
          Attributes: '{}'
          Links:
            key: Links
          Id: '{}'
        - Type: Type
          Relationships:
          - null
          - null
          Attributes: '{}'
          Links:
            key: Links
          Id: '{}'
        Links:
          Next: Next
          Self: Self
        Data:
          Type: Type
          Relationships:
          - Type: Type
            Relationships:
            - null
            - null
            Attributes: '{}'
            Links:
              key: Links
            Id: '{}'
          - Type: Type
            Relationships:
            - null
            - null
            Attributes: '{}'
            Links:
              key: Links
            Id: '{}'
          Attributes:
            TimingInfo: '{}'
            PassedSteps: 1
            StepResults:
            - StepName: StepName
              ResponseHeaders: ResponseHeaders
              Url: Url
              ResponseBody: ResponseBody
              ResponseCompleted: true
              HttpStatusCode: HttpStatusCode
              TotalTime: 0
              AssertionResultsInfo: '{}'
              RequestHeaders: RequestHeaders
              HttpMethod: HttpMethod
              HttpStatusDescription: HttpStatusDescription
              StepExecuted: true
              RequestBody: RequestBody
            - StepName: StepName
              ResponseHeaders: ResponseHeaders
              Url: Url
              ResponseBody: ResponseBody
              ResponseCompleted: true
              HttpStatusCode: HttpStatusCode
              TotalTime: 0
              AssertionResultsInfo: '{}'
              RequestHeaders: RequestHeaders
              HttpMethod: HttpMethod
              HttpStatusDescription: HttpStatusDescription
              StepExecuted: true
              RequestBody: RequestBody
            TotalSteps: 6
          Links:
            key: Links
          Id: 5
      properties:
        Data:
          $ref: '#/components/schemas/HttpEngineCheckDetails'
        Links:
          $ref: '#/components/schemas/LinksData'
        Relationships:
          items:
            $ref: '#/components/schemas/RelationObject'
          type: array
        Meta:
          $ref: '#/components/schemas/MetaData'
      type: object
    HttpEngineCheckDetails:
      example:
        Type: Type
        Relationships:
        - Type: Type
          Relationships:
          - null
          - null
          Attributes: '{}'
          Links:
            key: Links
          Id: '{}'
        - Type: Type
          Relationships:
          - null
          - null
          Attributes: '{}'
          Links:
            key: Links
          Id: '{}'
        Attributes:
          TimingInfo: '{}'
          PassedSteps: 1
          StepResults:
          - StepName: StepName
            ResponseHeaders: ResponseHeaders
            Url: Url
            ResponseBody: ResponseBody
            ResponseCompleted: true
            HttpStatusCode: HttpStatusCode
            TotalTime: 0
            AssertionResultsInfo: '{}'
            RequestHeaders: RequestHeaders
            HttpMethod: HttpMethod
            HttpStatusDescription: HttpStatusDescription
            StepExecuted: true
            RequestBody: RequestBody
          - StepName: StepName
            ResponseHeaders: ResponseHeaders
            Url: Url
            ResponseBody: ResponseBody
            ResponseCompleted: true
            HttpStatusCode: HttpStatusCode
            TotalTime: 0
            AssertionResultsInfo: '{}'
            RequestHeaders: RequestHeaders
            HttpMethod: HttpMethod
            HttpStatusDescription: HttpStatusDescription
            StepExecuted: true
            RequestBody: RequestBody
          TotalSteps: 6
        Links:
          key: Links
        Id: 5
      properties:
        Attributes:
          $ref: '#/components/schemas/HttpEngineAttributes'
        Id:
          format: int64
          type: integer
        Type:
          type: string
        Relationships:
          items:
            $ref: '#/components/schemas/RelationObject'
          type: array
        Links:
          additionalProperties:
            type: string
          type: object
      required:
      - Id
      type: object
    HttpEngineAttributes:
      description: HttpEngineAttributes describes the attributes of a Multi-step Api
        monitor check
      example:
        TimingInfo: '{}'
        PassedSteps: 1
        StepResults:
        - StepName: StepName
          ResponseHeaders: ResponseHeaders
          Url: Url
          ResponseBody: ResponseBody
          ResponseCompleted: true
          HttpStatusCode: HttpStatusCode
          TotalTime: 0
          AssertionResultsInfo: '{}'
          RequestHeaders: RequestHeaders
          HttpMethod: HttpMethod
          HttpStatusDescription: HttpStatusDescription
          StepExecuted: true
          RequestBody: RequestBody
        - StepName: StepName
          ResponseHeaders: ResponseHeaders
          Url: Url
          ResponseBody: ResponseBody
          ResponseCompleted: true
          HttpStatusCode: HttpStatusCode
          TotalTime: 0
          AssertionResultsInfo: '{}'
          RequestHeaders: RequestHeaders
          HttpMethod: HttpMethod
          HttpStatusDescription: HttpStatusDescription
          StepExecuted: true
          RequestBody: RequestBody
        TotalSteps: 6
      properties:
        StepResults:
          description: 'The results of the steps '
          items:
            $ref: '#/components/schemas/HttpEngineStep'
          type: array
        TimingInfo:
          allOf:
          - $ref: '#/components/schemas/StepTimingInfo'
          description: Timing info
          type: object
        TotalSteps:
          description: Number of total steps
          format: int32
          type: integer
        PassedSteps:
          description: Number of passed/succeed tests
          format: int32
          type: integer
      required:
      - PassedSteps
      - TotalSteps
      type: object
    HttpEngineStep:
      description: HttpEngineStep descriobes the results of a step in a Multi-step
        Api monitor
      example:
        StepName: StepName
        ResponseHeaders: ResponseHeaders
        Url: Url
        ResponseBody: ResponseBody
        ResponseCompleted: true
        HttpStatusCode: HttpStatusCode
        TotalTime: 0
        AssertionResultsInfo: '{}'
        RequestHeaders: RequestHeaders
        HttpMethod: HttpMethod
        HttpStatusDescription: HttpStatusDescription
        StepExecuted: true
        RequestBody: RequestBody
      properties:
        StepName:
          description: The name of the step
          type: string
        Url:
          description: Url the step was executed on
          type: string
        HttpStatusCode:
          description: The HTTP status code returned
          type: string
        HttpMethod:
          description: Http method used in this step
          type: string
        HttpStatusDescription:
          description: Step description
          type: string
        ResponseCompleted:
          description: Did the response complete?
          type: boolean
        StepExecuted:
          description: Was this step executed?
          type: boolean
        AssertionResultsInfo:
          allOf:
          - $ref: '#/components/schemas/AssertionResultsInfo'
          description: Results of the assertions in this step
          type: object
        TotalTime:
          description: Number of milliseconds it took for this step to succeed
          format: int64
          type: integer
        ResponseHeaders:
          description: Response headers
          type: string
        ResponseBody:
          description: Response body
          type: string
        RequestHeaders:
          description: Request headers send
          type: string
        RequestBody:
          description: Request body send
          type: string
      required:
      - ResponseCompleted
      - StepExecuted
      - TotalTime
      type: object
    AssertionResultsInfo:
      properties:
        TotalAssertions:
          format: int32
          type: integer
        PassedAssertions:
          format: int32
          type: integer
        AssertionInfos:
          items:
            $ref: '#/components/schemas/AssertionInfo'
          type: array
      required:
      - PassedAssertions
      - TotalAssertions
      type: object
    AssertionInfo:
      description: Information about a single assertion
      properties:
        Completed:
          description: Was the assertion completed?
          type: boolean
        Passed:
          description: Did the assertion pass?
          type: boolean
        Description:
          description: Description
          type: string
        ExceptionDescription:
          description: Discription of the exception trown if applicable
          type: string
      required:
      - Completed
      - Passed
      type: object
    StepTimingInfo:
      properties:
        Description:
          type: string
        StartUtc:
          format: date-time
          type: string
        EndUtc:
          format: date-time
          type: string
        ElapsedMilliseconds:
          format: int64
          type: integer
        DelayMilliseconds:
          format: int64
          type: integer
        SubTimingInfos:
          items:
            $ref: '#/components/schemas/StepTimingInfo'
          type: array
        IsValid:
          description: If true, this TimingInfo should be counted as part of the sum
            of its siblings. If false, the TimingInfo should be discarded (e.g. for
            PreDelays we don't want to count).
          type: boolean
      required:
      - DelayMilliseconds
      - ElapsedMilliseconds
      - EndUtc
      - IsValid
      - StartUtc
      type: object
    TransactionDetailsResponse:
      example:
        Meta:
          Period:
            Warning: Warning
            MaximumRetentionDays: 1
          Timestamp: 2000-01-23T04:56:07.000+00:00
        Relationships:
        - Type: Type
          Relationships:
          - null
          - null
          Attributes: '{}'
          Links:
            key: Links
          Id: '{}'
        - Type: Type
          Relationships:
          - null
          - null
          Attributes: '{}'
          Links:
            key: Links
          Id: '{}'
        Links:
          Next: Next
          Self: Self
        Data:
          Type: Type
          Relationships:
          - Type: Type
            Relationships:
            - null
            - null
            Attributes: '{}'
            Links:
              key: Links
            Id: '{}'
          - Type: Type
            Relationships:
            - null
            - null
            Attributes: '{}'
            Links:
              key: Links
            Id: '{}'
          Attributes:
            StepResults:
            - Type: Type
              Relationships:
              - Type: Type
                Relationships:
                - null
                - null
                Attributes: '{}'
                Links:
                  key: Links
                Id: '{}'
              - Type: Type
                Relationships:
                - null
                - null
                Attributes: '{}'
                Links:
                  key: Links
                Id: '{}'
              Attributes:
                StepNumber: 0
                TotalTime: 6.027456183070403
                StepName: StepName
                Elements:
                - Elements
                - Elements
                HasError: true
              Links:
                key: Links
              Id: 1
            - Type: Type
              Relationships:
              - Type: Type
                Relationships:
                - null
                - null
                Attributes: '{}'
                Links:
                  key: Links
                Id: '{}'
              - Type: Type
                Relationships:
                - null
                - null
                Attributes: '{}'
                Links:
                  key: Links
                Id: '{}'
              Attributes:
                StepNumber: 0
                TotalTime: 6.027456183070403
                StepName: StepName
                Elements:
                - Elements
                - Elements
                HasError: true
              Links:
                key: Links
              Id: 1
            ResponseBody: ResponseBody
          Links:
            key: Links
          Id: 5
      properties:
        Data:
          $ref: '#/components/schemas/TransactionCheckDetails'
        Links:
          $ref: '#/components/schemas/LinksData'
        Relationships:
          items:
            $ref: '#/components/schemas/RelationObject'
          type: array
        Meta:
          $ref: '#/components/schemas/MetaData'
      type: object
    TransactionCheckDetails:
      example:
        Type: Type
        Relationships:
        - Type: Type
          Relationships:
          - null
          - null
          Attributes: '{}'
          Links:
            key: Links
          Id: '{}'
        - Type: Type
          Relationships:
          - null
          - null
          Attributes: '{}'
          Links:
            key: Links
          Id: '{}'
        Attributes:
          StepResults:
          - Type: Type
            Relationships:
            - Type: Type
              Relationships:
              - null
              - null
              Attributes: '{}'
              Links:
                key: Links
              Id: '{}'
            - Type: Type
              Relationships:
              - null
              - null
              Attributes: '{}'
              Links:
                key: Links
              Id: '{}'
            Attributes:
              StepNumber: 0
              TotalTime: 6.027456183070403
              StepName: StepName
              Elements:
              - Elements
              - Elements
              HasError: true
            Links:
              key: Links
            Id: 1
          - Type: Type
            Relationships:
            - Type: Type
              Relationships:
              - null
              - null
              Attributes: '{}'
              Links:
                key: Links
              Id: '{}'
            - Type: Type
              Relationships:
              - null
              - null
              Attributes: '{}'
              Links:
                key: Links
              Id: '{}'
            Attributes:
              StepNumber: 0
              TotalTime: 6.027456183070403
              StepName: StepName
              Elements:
              - Elements
              - Elements
              HasError: true
            Links:
              key: Links
            Id: 1
          ResponseBody: ResponseBody
        Links:
          key: Links
        Id: 5
      properties:
        Attributes:
          $ref: '#/components/schemas/TransactionAttributes'
        Id:
          format: int64
          type: integer
        Type:
          type: string
        Relationships:
          items:
            $ref: '#/components/schemas/RelationObject'
          type: array
        Links:
          additionalProperties:
            type: string
          type: object
      required:
      - Id
      type: object
    TransactionAttributes:
      example:
        StepResults:
        - Type: Type
          Relationships:
          - Type: Type
            Relationships:
            - null
            - null
            Attributes: '{}'
            Links:
              key: Links
            Id: '{}'
          - Type: Type
            Relationships:
            - null
            - null
            Attributes: '{}'
            Links:
              key: Links
            Id: '{}'
          Attributes:
            StepNumber: 0
            TotalTime: 6.027456183070403
            StepName: StepName
            Elements:
            - Elements
            - Elements
            HasError: true
          Links:
            key: Links
          Id: 1
        - Type: Type
          Relationships:
          - Type: Type
            Relationships:
            - null
            - null
            Attributes: '{}'
            Links:
              key: Links
            Id: '{}'
          - Type: Type
            Relationships:
            - null
            - null
            Attributes: '{}'
            Links:
              key: Links
            Id: '{}'
          Attributes:
            StepNumber: 0
            TotalTime: 6.027456183070403
            StepName: StepName
            Elements:
            - Elements
            - Elements
            HasError: true
          Links:
            key: Links
          Id: 1
        ResponseBody: ResponseBody
      properties:
        StepResults:
          description: Results of the transaction steps
          items:
            $ref: '#/components/schemas/TransactionStepOResourceObject'
          type: array
        ResponseBody:
          description: The HTML code returned in case of errors
          type: string
      type: object
    TransactionStepOResourceObject:
      example:
        Type: Type
        Relationships:
        - Type: Type
          Relationships:
          - null
          - null
          Attributes: '{}'
          Links:
            key: Links
          Id: '{}'
        - Type: Type
          Relationships:
          - null
          - null
          Attributes: '{}'
          Links:
            key: Links
          Id: '{}'
        Attributes:
          StepNumber: 0
          TotalTime: 6.027456183070403
          StepName: StepName
          Elements:
          - Elements
          - Elements
          HasError: true
        Links:
          key: Links
        Id: 1
      properties:
        Attributes:
          $ref: '#/components/schemas/TransactionStep'
        Id:
          format: int32
          type: integer
        Type:
          type: string
        Relationships:
          items:
            $ref: '#/components/schemas/RelationObject'
          type: array
        Links:
          additionalProperties:
            type: string
          type: object
      required:
      - Id
      type: object
    TransactionStep:
      description: Describes one step in a transaction
      example:
        StepNumber: 0
        TotalTime: 6.027456183070403
        StepName: StepName
        Elements:
        - Elements
        - Elements
        HasError: true
      properties:
        StepNumber:
          description: Step (index) number
          format: int32
          type: integer
        StepName:
          description: The name of the step
          type: string
        TotalTime:
          description: Number of milliseconds it took for this step to succeed
          format: double
          type: number
        Elements:
          description: Text representation of the step element results
          items:
            type: string
          type: array
        HasError:
          description: Did this step result in an error?
          type: boolean
      required:
      - HasError
      - StepNumber
      - TotalTime
      type: object
    WaterfallResponse:
      example:
        Type: Type
        Relationships:
        - Type: Type
          Relationships:
          - null
          - null
          Attributes: '{}'
          Links:
            key: Links
          Id: '{}'
        - Type: Type
          Relationships:
          - null
          - null
          Attributes: '{}'
          Links:
            key: Links
          Id: '{}'
        Attributes:
          Elements:
          - HttpsHandshakeTime: 2
            SendTime: 7
            ElementType: ElementType
            TimeoutTime: 2
            StartTime: 6
            Index: 0
            ResponseHeaders: ResponseHeaders
            Url: Url
            ResolvedIpAddress: '{}'
            StaleTime: 5
            GroupIds:
            - 1
            - 1
            ResolveTime: 1
            TotalBytes: 1
            TotalTime: 4
            HttpStatusCode: 7
            UrlIsBlocked: true
            ReceiveTime: 3
            WaitTime: 9
            ConnectTime: 5
            RequestHeaders: RequestHeaders
          - HttpsHandshakeTime: 2
            SendTime: 7
            ElementType: ElementType
            TimeoutTime: 2
            StartTime: 6
            Index: 0
            ResponseHeaders: ResponseHeaders
            Url: Url
            ResolvedIpAddress: '{}'
            StaleTime: 5
            GroupIds:
            - 1
            - 1
            ResolveTime: 1
            TotalBytes: 1
            TotalTime: 4
            HttpStatusCode: 7
            UrlIsBlocked: true
            ReceiveTime: 3
            WaitTime: 9
            ConnectTime: 5
            RequestHeaders: RequestHeaders
          DomainGroupNames:
          - DomainGroupNames
          - DomainGroupNames
        Links:
          key: Links
        Id: 1
      properties:
        Attributes:
          $ref: '#/components/schemas/WaterfallInfo'
        Id:
          format: int64
          type: integer
        Type:
          type: string
        Relationships:
          items:
            $ref: '#/components/schemas/RelationObject'
          type: array
        Links:
          additionalProperties:
            type: string
          type: object
      required:
      - Id
      type: object
    WaterfallInfo:
      example:
        Elements:
        - HttpsHandshakeTime: 2
          SendTime: 7
          ElementType: ElementType
          TimeoutTime: 2
          StartTime: 6
          Index: 0
          ResponseHeaders: ResponseHeaders
          Url: Url
          ResolvedIpAddress: '{}'
          StaleTime: 5
          GroupIds:
          - 1
          - 1
          ResolveTime: 1
          TotalBytes: 1
          TotalTime: 4
          HttpStatusCode: 7
          UrlIsBlocked: true
          ReceiveTime: 3
          WaitTime: 9
          ConnectTime: 5
          RequestHeaders: RequestHeaders
        - HttpsHandshakeTime: 2
          SendTime: 7
          ElementType: ElementType
          TimeoutTime: 2
          StartTime: 6
          Index: 0
          ResponseHeaders: ResponseHeaders
          Url: Url
          ResolvedIpAddress: '{}'
          StaleTime: 5
          GroupIds:
          - 1
          - 1
          ResolveTime: 1
          TotalBytes: 1
          TotalTime: 4
          HttpStatusCode: 7
          UrlIsBlocked: true
          ReceiveTime: 3
          WaitTime: 9
          ConnectTime: 5
          RequestHeaders: RequestHeaders
        DomainGroupNames:
        - DomainGroupNames
        - DomainGroupNames
      properties:
        Elements:
          description: Elements in the waterfall
          items:
            $ref: '#/components/schemas/PageElement'
          type: array
        DomainGroupNames:
          description: List of domain groups used in the waterfall elements
          items:
            type: string
          type: array
      type: object
    PageElement:
      description: Page element describes a page load/request (in a waterfall)
      example:
        HttpsHandshakeTime: 2
        SendTime: 7
        ElementType: ElementType
        TimeoutTime: 2
        StartTime: 6
        Index: 0
        ResponseHeaders: ResponseHeaders
        Url: Url
        ResolvedIpAddress: '{}'
        StaleTime: 5
        GroupIds:
        - 1
        - 1
        ResolveTime: 1
        TotalBytes: 1
        TotalTime: 4
        HttpStatusCode: 7
        UrlIsBlocked: true
        ReceiveTime: 3
        WaitTime: 9
        ConnectTime: 5
        RequestHeaders: RequestHeaders
      properties:
        Index:
          description: Index of the element in the waterfall context
          format: int32
          type: integer
        StartTime:
          description: Starting time in milliseconds
          format: int32
          type: integer
        ResolveTime:
          description: Number of milliseconds needed to perform the DNS query for
            this element, when appropriate.
          format: int32
          type: integer
        ConnectTime:
          description: Number of milliseconds needed to establish a connection.
          format: int32
          type: integer
        StaleTime:
          description: Number of milliseconds the connection was stale
          format: int32
          type: integer
        HttpsHandshakeTime:
          description: Number of milliseconds needed for the HTTPS handshake
          format: int32
          type: integer
        SendTime:
          description: Number of milliseconds it took to send data
          format: int32
          type: integer
        WaitTime:
          description: Number of milliseconds the connection was in waiting state
          format: int32
          type: integer
        ReceiveTime:
          description: Number of milliseconds it took to retrieve the data
          format: int32
          type: integer
        TimeoutTime:
          description: 'Number of milliseconds the connection was timed-out '
          format: int32
          type: integer
        TotalTime:
          description: Total number of milliseconds it took for the connection to
            complete
          format: int32
          type: integer
        HttpStatusCode:
          description: The Http status code
          format: int32
          type: integer
        Url:
          description: The requested resource url
          type: string
        TotalBytes:
          description: Total number of downloaded bytes
          format: int32
          type: integer
        ElementType:
          description: Requested resource element type, can be HTML, scripts, CSS,
            images, frames, objects, data and other
          type: string
        RequestHeaders:
          description: The HTTP request headers used
          type: string
        ResponseHeaders:
          description: The HTTP response headers retrieved
          type: string
        ResolvedIpAddress:
          description: The IP address that was found for the specified domain name
            as part of this monitor check.
          type: object
        GroupIds:
          items:
            format: int32
            type: integer
          type: array
        UrlIsBlocked:
          description: Was the Url excluded from waterfall (timing) data by the user?
          type: boolean
      required:
      - ConnectTime
      - HttpStatusCode
      - HttpsHandshakeTime
      - Index
      - ReceiveTime
      - ResolveTime
      - SendTime
      - StaleTime
      - StartTime
      - TimeoutTime
      - TotalBytes
      - TotalTime
      - UrlIsBlocked
      - WaitTime
      type: object
    ScreenshotResponse:
      example:
        Meta:
          Period:
            Warning: Warning
            MaximumRetentionDays: 1
          Timestamp: 2000-01-23T04:56:07.000+00:00
        Relationships:
        - Type: Type
          Relationships:
          - null
          - null
          Attributes: '{}'
          Links:
            key: Links
          Id: '{}'
        - Type: Type
          Relationships:
          - null
          - null
          Attributes: '{}'
          Links:
            key: Links
          Id: '{}'
        Links:
          Next: Next
          Self: Self
        Data: Data
      properties:
        Data:
          type: string
        Links:
          $ref: '#/components/schemas/LinksData'
        Relationships:
          items:
            $ref: '#/components/schemas/RelationObject'
          type: array
        Meta:
          $ref: '#/components/schemas/MetaData'
      type: object
    Monitor:
      example:
        ThrottlingOptions:
          ThrottlingSpeedUp: 1
          ThrottlingSpeedDown: 1
          ThrottlingLatency: 1
        BlockUrls:
        - BlockUrls
        - BlockUrls
        BrowserWindowDimensions:
          PixelRatio: 3
          MobileDevice: MobileDevice
          Height: 9
          IsMobile: true
          Width: 7
        MatchPatterns:
        - Pattern: Pattern
          DateTime:
            MaxDifference: 8
            OffsetUTC: 6
          IsPositive: true
        - Pattern: Pattern
          DateTime:
            MaxDifference: 8
            OffsetUTC: 6
          IsPositive: true
        Port: 5
        CheckCertificateErrors: true
        Hash: Hash
        NameForPhoneAlerts: NameForPhoneAlerts
        Name: Name
        BlockUptrendsRum: true
        CertificateSerialNumber: CertificateSerialNumber
        UsePrimaryCheckpointsOnly: true
        AlertOnMinimumBytes: true
        RequestHeaders:
        - Value: Value
          Name: Name
        - Value: Value
          Name: Name
        AlertOnMaximumSize: true
        CertificateIssuerName: CertificateIssuerName
        UserDefinedFunctions:
        - Mappings:
          - Value: Value
            Key: Key
          - Value: Value
            Key: Key
          Regex: Regex
          JwtSigningKey: JwtSigningKey
          JwtAlgorithm: '{}'
          Name: Name
        - Mappings:
          - Value: Value
            Key: Key
          - Value: Value
            Key: Key
          Regex: Regex
          JwtSigningKey: JwtSigningKey
          JwtAlgorithm: '{}'
          Name: Name
        IgnoreExternalElements: true
        DatabaseName: DatabaseName
        GenerateAlert: true
        CustomFields:
        - Value: Value
          Name: Name
        - Value: Value
          Name: Name
        SelfServiceTransactionScript: SelfServiceTransactionScript
        ConcurrentConfirmedErrorThreshold: 6
        DnsExpectedResult: DnsExpectedResult
        MaximumBytes: 7
        AlertOnPercentageFail: true
        IsActive: true
        CheckInterval: 5
        DomainGroupGuid: DomainGroupGuid
        AlertOnLoadTimeLimit1: true
        CertificateOrganizationalUnit: CertificateOrganizationalUnit
        AlertOnLoadTimeLimit2: true
        MinimumBytes: 9
        CustomMetrics:
        - VariableName: VariableName
          Name: Name
        - VariableName: VariableName
          Name: Name
        Url: Url
        TransactionStepDefinition: '{}'
        SftpActionPath: SftpActionPath
        CertificateIssuerOrganizationalUnit: CertificateIssuerOrganizationalUnit
        NetworkAddress: NetworkAddress
        ExpectedHttpStatusCode: 9
        UserAgent: UserAgent
        CertificateFingerprint: CertificateFingerprint
        FailedObjectPercentage: 4
        PredefinedVariables:
        - Value: Value
          Key: Key
        - Value: Value
          Key: Key
        CertificateIssuerCompanyName: CertificateIssuerCompanyName
        ExpectedHttpStatusCodeSpecified: true
        ConcurrentUnconfirmedErrorThreshold: 9
        Notes: Notes
        Password: Password
        RequestBody: RequestBody
        CertificateOrganization: CertificateOrganization
        ElementMaximumSize: 1
        UseConcurrentMonitoring: true
        MonitorGuid: MonitorGuid
        IsLocked: true
        DomainGroupGuidSpecified: true
        NativeIPv6Only: true
        SelectedCheckpoints:
          Checkpoints:
          - 0
          - 0
          ExcludeLocations:
          - 1
          - 1
          Regions:
          - 6
          - 6
        DnsServer: DnsServer
        BlockGoogleAnalytics: true
        DnsTestValue: DnsTestValue
        ImapSecureConnection: true
        MonitorMode: '{}'
        LoadTimeLimit1: 5
        CertificateExpirationWarningDays: 6
        LoadTimeLimit2: 2
        Credits: 2
        Username: Username
        MsaSteps:
        - UseFixedClientCertificate: true
          VaultFileId: VaultFileId
          RetryUntilSuccessful: true
          Method: Method
          BodyType: '{}'
          IgnoreCertificateErrors: true
          Assertions:
          - TargetValue: TargetValue
            Property: Property
          - TargetValue: TargetValue
            Property: Property
          Url: Url
          Delay: 4
          Name: Name
          MaxAttempts: 7
          Variables:
          - Arguments:
            - null
            - null
            Property: Property
            Name: Name
          - Arguments:
            - null
            - null
            Property: Property
            Name: Name
          Authentication:
            UserName: UserName
            PasswordSpecified: true
            Id: Id
            Password: Password
          RequestHeaders:
          - Value: Value
            Key: Key
          - Value: Value
            Key: Key
          ClientCertificateVaultItem: ClientCertificateVaultItem
          Body: Body
        - UseFixedClientCertificate: true
          VaultFileId: VaultFileId
          RetryUntilSuccessful: true
          Method: Method
          BodyType: '{}'
          IgnoreCertificateErrors: true
          Assertions:
          - TargetValue: TargetValue
            Property: Property
          - TargetValue: TargetValue
            Property: Property
          Url: Url
          Delay: 4
          Name: Name
          MaxAttempts: 7
          Variables:
          - Arguments:
            - null
            - null
            Property: Property
            Name: Name
          - Arguments:
            - null
            - null
            Property: Property
            Name: Name
          Authentication:
            UserName: UserName
            PasswordSpecified: true
            Id: Id
            Password: Password
          RequestHeaders:
          - Value: Value
            Key: Key
          - Value: Value
            Key: Key
          ClientCertificateVaultItem: ClientCertificateVaultItem
          Body: Body
        CertificateName: CertificateName
        AlertOnMaximumBytes: true
      properties:
        MonitorGuid:
          description: The unique key of this monitor.
          format: guid
          type: string
        Name:
          description: The name of this monitor.
          type: string
        MonitorType:
          $ref: '#/components/schemas/MonitorType'
        GenerateAlert:
          default: true
          description: Indicates whether this monitor should generate alerts.
          type: boolean
        IsActive:
          default: true
          description: Indicates whether this monitor is actively running according
            to the monitoring interval.
          type: boolean
        IsLocked:
          description: Indicates whether this monitor is locked.
          type: boolean
        CustomFields:
          items:
            $ref: '#/components/schemas/CustomField'
          type: array
        SelectedCheckpoints:
          $ref: '#/components/schemas/SelectedCheckpoints'
        UsePrimaryCheckpointsOnly:
          type: boolean
        CheckInterval:
          description: Indicates the interval in seconds
          type: integer
        MonitorMode:
          allOf:
          - $ref: '#/components/schemas/MonitorMode'
          type: object
        Notes:
          type: string
        Hash:
          description: Hash corresponding with this monitor.
          type: string
        SelfServiceTransactionScript:
          type: string
        BlockUptrendsRum:
          type: boolean
        BlockGoogleAnalytics:
          type: boolean
        BlockUrls:
          items:
            type: string
          type: array
        RequestHeaders:
          items:
            $ref: '#/components/schemas/RequestHeader'
          type: array
        UserAgent:
          type: string
        LoadTimeLimit1:
          format: int32
          type: integer
        AlertOnLoadTimeLimit1:
          type: boolean
        LoadTimeLimit2:
          format: int32
          type: integer
        AlertOnLoadTimeLimit2:
          type: boolean
        Username:
          type: string
        AuthenticationType:
          $ref: '#/components/schemas/ApiHttpAuthenticationType'
        BrowserType:
          $ref: '#/components/schemas/BrowserType'
        BrowserWindowDimensions:
          $ref: '#/components/schemas/BrowserWindowDimensions'
        Credits:
          format: int32
          type: integer
        PredefinedVariables:
          items:
            $ref: '#/components/schemas/PredefinedVariable'
          type: array
        MsaSteps:
          items:
            $ref: '#/components/schemas/MsaStep'
          type: array
        UserDefinedFunctions:
          items:
            $ref: '#/components/schemas/UserDefinedFunction'
          type: array
        CustomMetrics:
          items:
            $ref: '#/components/schemas/CustomMetric'
          type: array
        Password:
          type: string
        NameForPhoneAlerts:
          type: string
        ThrottlingOptions:
          $ref: '#/components/schemas/ThrottlingOptions'
        TransactionStepDefinition:
          allOf:
          - $ref: '#/components/schemas/TransactionStepDefinition'
          description: 'Only valid for Transaction monitors: the data structure that
            specifies the transaction steps (and sub steps) to execute.'
          type: object
        CertificateName:
          type: string
        CertificateOrganization:
          type: string
        CertificateOrganizationalUnit:
          type: string
        CertificateSerialNumber:
          type: string
        CertificateFingerprint:
          type: string
        CertificateIssuerName:
          type: string
        CertificateIssuerCompanyName:
          type: string
        CertificateIssuerOrganizationalUnit:
          type: string
        CertificateExpirationWarningDays:
          format: int32
          type: integer
        CheckCertificateErrors:
          type: boolean
        AlertOnMaximumBytes:
          type: boolean
        MaximumBytes:
          format: int32
          type: integer
        AlertOnMaximumSize:
          type: boolean
        ElementMaximumSize:
          format: int32
          type: integer
        IgnoreExternalElements:
          type: boolean
        AlertOnPercentageFail:
          type: boolean
        FailedObjectPercentage:
          format: int32
          type: integer
        DomainGroupGuid:
          format: guid
          type: string
        DomainGroupGuidSpecified:
          type: boolean
        DnsServer:
          type: string
        DnsQuery:
          $ref: '#/components/schemas/DnsQuery'
        DnsExpectedResult:
          type: string
        DnsTestValue:
          type: string
        Port:
          format: int32
          type: integer
        IpVersion:
          $ref: '#/components/schemas/IpVersion'
        NativeIPv6Only:
          type: boolean
        AlertOnMinimumBytes:
          type: boolean
        MinimumBytes:
          format: int32
          type: integer
        DatabaseName:
          type: string
        NetworkAddress:
          type: string
        ImapSecureConnection:
          type: boolean
        SftpAction:
          $ref: '#/components/schemas/SftpAction'
        SftpActionPath:
          type: string
        HttpMethod:
          $ref: '#/components/schemas/HttpMethod'
        ExpectedHttpStatusCode:
          format: int32
          type: integer
        ExpectedHttpStatusCodeSpecified:
          type: boolean
        TlsVersion:
          $ref: '#/components/schemas/TlsVersion'
        RequestBody:
          type: string
        MatchPatterns:
          items:
            $ref: '#/components/schemas/PatternMatch'
          type: array
        Url:
          type: string
        UseConcurrentMonitoring:
          type: boolean
        ConcurrentUnconfirmedErrorThreshold:
          format: int32
          type: integer
        ConcurrentConfirmedErrorThreshold:
          format: int32
          type: integer
      type: object
    MonitorType:
      description: ""
      enum:
      - Http
      - Https
      - Connect
      - Ping
      - POP3
      - SMTP
      - FTP
      - MySQL
      - MSSQL
      - WebserviceHttp
      - WebserviceHttps
      - Transaction
      - DNS
      - FullPageCheck
      - RealBrowserCheck
      - Certificate
      - SFTP
      - MultiStepApi
      - IMAP
      type: string
      x-enumNames:
      - Http
      - Https
      - Connect
      - Ping
      - POP3
      - SMTP
      - FTP
      - MySQL
      - MSSQL
      - WebserviceHttp
      - WebserviceHttps
      - Transaction
      - DNS
      - FullPageCheck
      - RealBrowserCheck
      - Certificate
      - SFTP
      - MultiStepApi
      - IMAP
    CustomField:
      example:
        Value: Value
        Name: Name
      properties:
        Name:
          type: string
        Value:
          type: string
      type: object
    SelectedCheckpoints:
      example:
        Checkpoints:
        - 0
        - 0
        ExcludeLocations:
        - 1
        - 1
        Regions:
        - 6
        - 6
      properties:
        Checkpoints:
          items:
            type: integer
          type: array
        Regions:
          items:
            type: integer
          type: array
        ExcludeLocations:
          items:
            type: integer
          type: array
      type: object
    MonitorMode:
      description: ""
      enum:
      - Development
      - Staging
      - Production
      type: string
      x-enumNames:
      - Development
      - Staging
      - Production
    RequestHeader:
      example:
        Value: Value
        Name: Name
      properties:
        Name:
          type: string
        Value:
          type: string
      type: object
    ApiHttpAuthenticationType:
      description: ""
      enum:
      - None
      - Basic
      - NTLM
      - Digest
      type: string
      x-enumNames:
      - None
      - Basic
      - NTLM
      - Digest
    BrowserType:
      description: ""
      enum:
      - IE
      - Firefox
      - Chrome
      - Safari
      - PhantomJS
      - PhantomJS20
      type: string
      x-enumNames:
      - IE
      - Firefox
      - Chrome
      - Safari
      - PhantomJS
      - PhantomJS20
    BrowserWindowDimensions:
      example:
        PixelRatio: 3
        MobileDevice: MobileDevice
        Height: 9
        IsMobile: true
        Width: 7
      properties:
        IsMobile:
          type: boolean
        Width:
          format: int32
          type: integer
        Height:
          format: int32
          type: integer
        PixelRatio:
          format: int32
          type: integer
        MobileDevice:
          type: string
      required:
      - Height
      - IsMobile
      - PixelRatio
      - Width
      type: object
    PredefinedVariable:
      example:
        Value: Value
        Key: Key
      properties:
        Key:
          type: string
        Value:
          type: string
      type: object
    MsaStep:
      example:
        UseFixedClientCertificate: true
        VaultFileId: VaultFileId
        RetryUntilSuccessful: true
        Method: Method
        BodyType: '{}'
        IgnoreCertificateErrors: true
        Assertions:
        - TargetValue: TargetValue
          Property: Property
        - TargetValue: TargetValue
          Property: Property
        Url: Url
        Delay: 4
        Name: Name
        MaxAttempts: 7
        Variables:
        - Arguments:
          - null
          - null
          Property: Property
          Name: Name
        - Arguments:
          - null
          - null
          Property: Property
          Name: Name
        Authentication:
          UserName: UserName
          PasswordSpecified: true
          Id: Id
          Password: Password
        RequestHeaders:
        - Value: Value
          Key: Key
        - Value: Value
          Key: Key
        ClientCertificateVaultItem: ClientCertificateVaultItem
        Body: Body
      properties:
        Url:
          type: string
        Method:
          type: string
        Body:
          description: The body that will be send in the request. Only used if BodyType
            equals Raw
          type: string
        BodyType:
          allOf:
          - $ref: '#/components/schemas/MsaBodyType'
          description: Determines what kind of body the request will have.
          type: object
        VaultFileId:
          description: The guid of the vaultfile that will be send in the request.
            Only used if BodyType equals VaultFiles
          format: guid
          type: string
        RequestHeaders:
          items:
            $ref: '#/components/schemas/ApiHttpHeaderValue'
          type: array
        Variables:
          items:
            $ref: '#/components/schemas/ApiVariableDefinition'
          type: array
        Assertions:
          items:
            $ref: '#/components/schemas/ApiAssertion'
          type: array
        Name:
          type: string
        UseFixedClientCertificate:
          type: boolean
        Authentication:
          $ref: '#/components/schemas/ApiAuthenticationInfo'
        IgnoreCertificateErrors:
          type: boolean
        ClientCertificateVaultItem:
          format: guid
          type: string
        Delay:
          format: int32
          type: integer
        StepType:
          $ref: '#/components/schemas/MsaStepType'
        RetryUntilSuccessful:
          type: boolean
        MaxAttempts:
          format: int32
          type: integer
      required:
      - Delay
      - IgnoreCertificateErrors
      - MaxAttempts
      - RetryUntilSuccessful
      - StepType
      - UseFixedClientCertificate
      type: object
    MsaBodyType:
      description: ""
      enum:
      - Raw
      - VaultFiles
      type: string
      x-enumNames:
      - Raw
      - VaultFiles
    ApiHttpHeaderValue:
      example:
        Value: Value
        Key: Key
      properties:
        Key:
          type: string
        Value:
          type: string
      type: object
    ApiVariableDefinition:
      example:
        Arguments:
        - null
        - null
        Property: Property
        Name: Name
      properties:
        Source:
          $ref: '#/components/schemas/ApiVariableSourceType'
        Property:
          type: string
        Name:
          type: string
        Arguments:
          items:
            $ref: '#/components/schemas/ApiVariableDefinition'
          type: array
      required:
      - Source
      type: object
    ApiVariableSourceType:
      description: ""
      enum:
      - None
      - Constant
      - Variable
      - ResponseStatusCode
      - ResponseStatusDescription
      - ResponseBodyJson
      - ResponseCompleted
      - ResponseBodyText
      - Fail
      - ContentLengthCalculated
      - Duration
      - Sum
      - Concatenation
      - ToBase64
      - ToSHA1Hex
      - ToMD5Hex
      - ResponseBodyXml
      - ResponseHeader
      - Cookie
      - VariablesResolved
      - CumulativeDuration
      - ResponseHasException
      - ExecuteFunction
      type: string
      x-enumNames:
      - None
      - Constant
      - Variable
      - ResponseStatusCode
      - ResponseStatusDescription
      - ResponseBodyJson
      - ResponseCompleted
      - ResponseBodyText
      - Fail
      - ContentLengthCalculated
      - Duration
      - Sum
      - Concatenation
      - ToBase64
      - ToSHA1Hex
      - ToMD5Hex
      - ResponseBodyXml
      - ResponseHeader
      - Cookie
      - VariablesResolved
      - CumulativeDuration
      - ResponseHasException
      - ExecuteFunction
    ApiAssertion:
      example:
        TargetValue: TargetValue
        Property: Property
      properties:
        Source:
          $ref: '#/components/schemas/ApiAssertionSourceType'
        Property:
          type: string
        Comparison:
          $ref: '#/components/schemas/ApiComparisonType'
        TargetValue:
          type: string
      required:
      - Comparison
      - Source
      type: object
    ApiAssertionSourceType:
      description: ""
      enum:
      - None
      - Constant
      - Variable
      - ResponseStatusCode
      - ResponseStatusDescription
      - ResponseBodyJson
      - ResponseCompleted
      - ResponseBodyText
      - Fail
      - ContentLengthCalculated
      - Duration
      - Sum
      - Concatenation
      - ToBase64
      - ToSHA1Hex
      - ToMD5Hex
      - ResponseBodyXml
      - ResponseHeader
      - Cookie
      - VariablesResolved
      - CumulativeDuration
      - ResponseHasException
      type: string
      x-enumNames:
      - None
      - Constant
      - Variable
      - ResponseStatusCode
      - ResponseStatusDescription
      - ResponseBodyJson
      - ResponseCompleted
      - ResponseBodyText
      - Fail
      - ContentLengthCalculated
      - Duration
      - Sum
      - Concatenation
      - ToBase64
      - ToSHA1Hex
      - ToMD5Hex
      - ResponseBodyXml
      - ResponseHeader
      - Cookie
      - VariablesResolved
      - CumulativeDuration
      - ResponseHasException
    ApiComparisonType:
      description: ""
      enum:
      - Equal
      - DoesNotEqual
      - ContainsText
      - DoesNotContainText
      - ShouldBeIgnored
      - LessThan
      - GreaterThan
      - LessThanOrEqual
      - GreaterThanOrEqual
      - IsNotEmpty
      type: string
      x-enumNames:
      - Equal
      - DoesNotEqual
      - ContainsText
      - DoesNotContainText
      - ShouldBeIgnored
      - LessThan
      - GreaterThan
      - LessThanOrEqual
      - GreaterThanOrEqual
      - IsNotEmpty
    ApiAuthenticationInfo:
      example:
        UserName: UserName
        PasswordSpecified: true
        Id: Id
        Password: Password
      properties:
        Id:
          format: guid
          type: string
        AuthenticationType:
          $ref: '#/components/schemas/ApiHttpAuthenticationType'
        UserName:
          type: string
        Password:
          type: string
        PasswordSpecified:
          type: boolean
      required:
      - AuthenticationType
      - Id
      - PasswordSpecified
      type: object
    MsaStepType:
      description: ""
      enum:
      - HttpRequest
      - Delay
      type: string
      x-enumNames:
      - HttpRequest
      - Delay
    UserDefinedFunction:
      example:
        Mappings:
        - Value: Value
          Key: Key
        - Value: Value
          Key: Key
        Regex: Regex
        JwtSigningKey: JwtSigningKey
        JwtAlgorithm: '{}'
        Name: Name
      properties:
        Name:
          type: string
        Type:
          $ref: '#/components/schemas/UserDefinedFunctionType'
        Mappings:
          items:
            $ref: '#/components/schemas/UserDefinedFunctionMapping'
          type: array
        Regex:
          type: string
        JwtSigningKey:
          description: This property is not supported yet
          type: string
        JwtAlgorithm:
          allOf:
          - $ref: '#/components/schemas/JwtAlgorithm'
          description: This property is not supported yet
          type: object
      required:
      - Type
      type: object
    UserDefinedFunctionType:
      description: ""
      enum:
      - Mapping
      - Regex
      - JwtEncode
      - JwtDecode
      type: string
      x-enumNames:
      - Mapping
      - Regex
      - JwtEncode
      - JwtDecode
    UserDefinedFunctionMapping:
      example:
        Value: Value
        Key: Key
      properties:
        Key:
          type: string
        Value:
          type: string
      type: object
    JwtAlgorithm:
      description: ""
      enum:
      - HS256
      - HS384
      - HS512
      type: string
      x-enumNames:
      - HS256
      - HS384
      - HS512
    CustomMetric:
      example:
        VariableName: VariableName
        Name: Name
      properties:
        Name:
          type: string
        VariableName:
          type: string
      type: object
    ThrottlingOptions:
      example:
        ThrottlingSpeedUp: 1
        ThrottlingSpeedDown: 1
        ThrottlingLatency: 1
      properties:
        ThrottlingType:
          $ref: '#/components/schemas/ThrottlingType'
        ThrottlingValue:
          $ref: '#/components/schemas/ThrottlingValue'
        ThrottlingSpeedUp:
          format: int32
          type: integer
        ThrottlingSpeedDown:
          format: int32
          type: integer
        ThrottlingLatency:
          format: int32
          type: integer
      type: object
    ThrottlingType:
      description: ""
      enum:
      - Inactive
      - Browser
      - Simulated
      type: string
      x-enumNames:
      - Inactive
      - Browser
      - Simulated
    ThrottlingValue:
      description: ""
      enum:
      - Adsl
      - Fiber
      - Cable
      - 2G
      - 3G
      - 4G
      type: string
      x-enumNames:
      - Adsl
      - Fiber
      - Cable
      - _2G
      - _3G
      - _4G
    TransactionStepDefinition:
      properties:
        Steps:
          items:
            $ref: '#/components/schemas/TransactionStep2'
          type: array
      type: object
    TransactionStep2:
      properties:
        Name:
          type: string
        HasScreenshot:
          type: boolean
        HasWaterfall:
          type: boolean
        SubSteps:
          items:
            $ref: '#/components/schemas/TransactionSubStep'
          type: array
      required:
      - HasScreenshot
      - HasWaterfall
      type: object
    TransactionSubStep:
      properties:
        Name:
          type: string
        Type:
          $ref: '#/components/schemas/SubStepType'
        Url:
          type: string
        SetValue:
          type: string
      required:
      - Type
      type: object
    SubStepType:
      description: ""
      enum:
      - Navigate
      - Click
      - Set
      - Test
      - Script
      - Hover
      - Screenshot
      - ScrollTo
      - WaitForElement
      - SwitchToFrame
      - SwitchToTab
      type: string
      x-enumNames:
      - Navigate
      - Click
      - Set
      - Test
      - Script
      - Hover
      - Screenshot
      - ScrollTo
      - WaitForElement
      - SwitchToFrame
      - SwitchToTab
    DnsQuery:
      description: ""
      enum:
      - ARecord
      - CnameRecord
      - MxRecord
      - NsRecord
      - TxtRecord
      - SoaRecord
      - RootServer
      - AaaaRecord
      - SrvRecord
      type: string
      x-enumNames:
      - ARecord
      - CnameRecord
      - MxRecord
      - NsRecord
      - TxtRecord
      - SoaRecord
      - RootServer
      - AaaaRecord
      - SrvRecord
    IpVersion:
      description: ""
      enum:
      - IpV4
      - IpV6
      type: string
      x-enumNames:
      - IpV4
      - IpV6
    SftpAction:
      description: ""
      enum:
      - ConnectOnly
      - TestFileExists
      - TestFileDoesNotExist
      - DownLoadFile
      type: string
      x-enumNames:
      - ConnectOnly
      - TestFileExists
      - TestFileDoesNotExist
      - DownLoadFile
    HttpMethod:
      description: ""
      enum:
      - Get
      - Post
      type: string
      x-enumNames:
      - Get
      - Post
    TlsVersion:
      description: ""
      enum:
      - Tls12
      - Tls11
      - Tls10
      - Tls12_Tls11
      - Tls11_Tls10
      - Tls12_Tls11_Tls10
      - Tls12_Tls11_Tls10_WithFallback
      type: string
      x-enumNames:
      - Tls12
      - Tls11
      - Tls10
      - Tls12_Tls11
      - Tls11_Tls10
      - Tls12_Tls11_Tls10
      - Tls12_Tls11_Tls10_WithFallback
    PatternMatch:
      example:
        Pattern: Pattern
        DateTime:
          MaxDifference: 8
          OffsetUTC: 6
        IsPositive: true
      properties:
        Pattern:
          type: string
        IsPositive:
          type: boolean
        DateTime:
          $ref: '#/components/schemas/DateTimePatternMatch'
      required:
      - IsPositive
      type: object
    DateTimePatternMatch:
      example:
        MaxDifference: 8
        OffsetUTC: 6
      properties:
        OffsetUTC:
          format: int32
          type: integer
        MaxDifference:
          format: int32
          type: integer
      required:
      - MaxDifference
      - OffsetUTC
      type: object
    RegistrationResponse:
      example:
        OperatorName: OperatorName
        UserName: UserName
        AccountId: AccountId
        message: message
        Password: Password
      properties:
        UserName:
          description: The username of the new API account
          type: string
        Password:
          description: The password of the new API account
          type: string
        AccountId:
          description: The Uptrends Account Id for which the new API account was created
          type: string
        OperatorName:
          description: The Uptrends Operator on behalf of whom the new API account
            was created
          type: string
        status:
          $ref: '#/components/schemas/RegisterStatus'
        message:
          type: string
      required:
      - status
      type: object
    RegisterStatus:
      description: ""
      enum:
      - OK
      - UnexpectedError
      type: string
      x-enumNames:
      - OK
      - UnexpectedError
    VaultItem:
      example:
        VaultSectionGuid: VaultSectionGuid
        UserName: UserName
        FileInfo: '{}'
        VaultItemGuid: VaultItemGuid
        CertificateArchive: '{}'
        Value: Value
        IsSensitive: true
        Hash: Hash
        VaultItemType: '{}'
        Notes: Notes
        Name: Name
        Password: Password
      properties:
        VaultItemGuid:
          description: The unique key of this vault item
          format: guid
          type: string
        Hash:
          description: The hash of this vault item
          type: string
        Name:
          description: The name of this vault item
          type: string
        Value:
          description: The value that is stored in this vault item. Not used for Certificate
            Archives
          type: string
        VaultSectionGuid:
          description: The unique identifier of the vault section that this vault
            item belongs to
          format: guid
          type: string
        VaultItemType:
          allOf:
          - $ref: '#/components/schemas/VaultItemTypes'
          description: The vault item type
          type: object
        IsSensitive:
          description: 'Whether or not the vault item is considered sensitive. '
          type: boolean
        Notes:
          description: Notes about this vault item
          type: string
        UserName:
          description: The UserName of a credentialset
          type: string
        Password:
          description: The password associated with a credentialset
          type: string
        CertificateArchive:
          allOf:
          - $ref: '#/components/schemas/CertificateArchive'
          description: The certificate archive that is stored in this vault item,
            if applicable
          type: object
        FileInfo:
          allOf:
          - $ref: '#/components/schemas/FileInfo'
          description: The file info that is stored in this vault item, if applicable
          type: object
      type: object
    VaultItemTypes:
      description: ""
      enum:
      - CredentialSet
      - Certificate
      - Text
      - CertificateArchive
      - File
      type: string
      x-enumNames:
      - CredentialSet
      - Certificate
      - Text
      - CertificateArchive
      - File
    CertificateArchive:
      properties:
        Issuer:
          description: The issuer of this certificate
          type: string
        NotBefore:
          description: The start date of this certificate
          format: date-time
          type: string
        NotAfter:
          description: The certificate expiry date
          format: date-time
          type: string
        Password:
          description: Used to specify a new or changed password. The value will be
            encrypted when stored, and will not be displayed when a CertificateArchive
            is retrieved.
          type: string
        ArchiveData:
          description: Used to specify the certificate content as a base64 string.
            The value will be encrypted when stored, and will not be displayed when
            a CertificateArchive is retrieved.
          type: string
      required:
      - NotAfter
      - NotBefore
      type: object
    FileInfo:
      properties:
        Data:
          type: string
        Name:
          description: Name of the uploaded file.
          type: string
        Size:
          description: Size of the uploaded file.
          format: int32
          type: integer
      required:
      - Size
      type: object
    VaultSection:
      example:
        VaultSectionGuid: VaultSectionGuid
        Name: Name
      properties:
        VaultSectionGuid:
          description: The Guid of this vault section
          format: guid
          type: string
        Name:
          description: The name for this vault section
          type: string
      required:
      - VaultSectionGuid
      type: object
    VaultSectionAuthorization:
      example:
        AuthorizationId: AuthorizationId
        OperatorGuid: OperatorGuid
        OperatorGroupGuid: OperatorGroupGuid
      properties:
        AuthorizationId:
          format: guid
          type: string
        AuthorizationType:
          $ref: '#/components/schemas/VaultSectionAuthorizationType'
        OperatorGuid:
          format: guid
          type: string
        OperatorGroupGuid:
          format: guid
          type: string
      required:
      - AuthorizationType
      type: object
    VaultSectionAuthorizationType:
      description: ""
      enum:
      - ViewVaultSection
      - ChangeVaultSection
      type: string
      x-enumNames:
      - ViewVaultSection
      - ChangeVaultSection
  securitySchemes:
    basicauth:
      description: Authentication with API account
      scheme: basic
      type: http
    user-basicauth:
      description: Authentication with user account (for API account registration
        only)
      scheme: basic
      type: http
x-generator: NSwag v13.1.6.0 (NJsonSchema v10.0.28.0 (Newtonsoft.Json v12.0.0.0))
x-original-swagger-version: "2.0"
